{"version":3,"sources":["webpack:///app.8dae6fc901c95cee51ac.bundle.js","webpack:///./src/js/index.js","webpack:///./src/js/slick.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","$siteNav","lastScroll","timedNavHide","window","on","this","width","thisScroll","scrollTop","clearTimeout","show","console","log","slideUp","slideDown","setTimeout","hideNav","hasClass","removeClass","toggleClass","slick","arrows","dots","infinite","speed","slidesToShow","adaptiveHeight","responsive","breakpoint","settings","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","factory","apply","undefined","Slick","element","dataSettings","_","defaults","accessibility","appendArrows","appendDots","asNavFor","prevArrow","nextArrow","autoplay","autoplaySpeed","centerMode","centerPadding","cssEase","customPaging","slider","i","text","dotsClass","draggable","easing","edgeFriction","fade","focusOnSelect","initialSlide","lazyLoad","mobileFirst","pauseOnHover","pauseOnFocus","pauseOnDotsHover","respondTo","rows","rtl","slide","slidesPerRow","slidesToScroll","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","vertical","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","extend","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","focussed","interrupted","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","data","options","originalSettings","document","mozHidden","webkitHidden","autoPlay","proxy","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","dragHandler","keyHandler","instanceUid","htmlExpr","registerBreakpoints","init","prototype","activateADA","find","attr","aria-hidden","tabindex","addSlide","slickAdd","markup","index","addBefore","unload","length","appendTo","insertBefore","eq","insertAfter","prependTo","children","detach","append","each","reinit","animateHeight","targetHeight","outerHeight","animate","height","animateSlide","targetLeft","callback","animProps","left","top","animStart","duration","step","now","Math","ceil","css","complete","call","applyTransition","disableTransition","getNavTarget","not","target","slideHandler","transition","setInterval","clearInterval","slideTo","buildArrows","addClass","removeAttr","test","add","aria-disabled","buildDots","dot","getDotCount","first","buildOut","wrapAll","parent","wrap","setupInfinite","updateDots","setSlideClasses","buildRows","a","b","c","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","createElement","row","get","appendChild","empty","display","checkResponsive","initial","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","hasOwnProperty","unslick","refresh","trigger","event","dontAnimate","indexOffset","unevenOffset","$target","currentTarget","is","preventDefault","closest","message","checkNavigable","navigables","prevNavigable","getNavigableIndexes","n","cleanUpEvents","off","interrupt","visibility","cleanUpSlideEvents","orientationChange","resize","cleanUpRows","stopImmediatePropagation","stopPropagation","destroy","remove","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","filter","focusHandler","$sf","getCurrent","slickCurrentSlide","breakPoint","counter","pagerQty","getLeft","verticalHeight","targetSlide","verticalOffset","floor","offsetLeft","outerWidth","getOption","slickGetOption","option","max","indexes","push","getSlick","getSlideCount","slidesTraversed","swipedSlide","centerOffset","abs","goTo","slickGoTo","parseInt","creation","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","role","aria-describedby","aria-selected","aria-controls","id","end","initArrowEvents","initDotEvents","initSlideEvents","action","initUI","tagName","match","keyCode","loadImages","imagesScope","image","imageSource","imageToLoad","onload","onerror","src","loadRange","cloneRange","rangeStart","rangeEnd","slice","progressiveLazyLoad","next","slickNext","pause","slickPause","play","slickPlay","postSlide","prev","slickPrev","tryCount","$imgsToLoad","initializing","lastVisibleIndex","currentBreakpoint","l","responsiveSettings","type","splice","sort","windowDelay","removeSlide","slickRemove","removeBefore","removeAll","setCSS","position","x","y","positionProps","setDimensions","padding","offset","setFade","right","setHeight","setOption","slickSetOption","item","value","arguments","opt","val","bodyStyle","body","style","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","allSlides","remainder","infiniteCount","clone","toggle","targetElement","parents","sync","animSlide","oldSlide","slideLeft","navTarget","hide","swipeDirection","xDist","yDist","r","swipeAngle","startX","curX","startY","curY","atan2","round","PI","swipeEnd","swipeLength","edgeHit","minSwipe","indexOf","fingerCount","originalEvent","touches","swipeStart","swipeMove","curLeft","positionOffset","pageX","clientX","pageY","clientY","sqrt","pow","unfilterSlides","slickUnfilter","fromBreakpoint","fn","ret","args","Array","global","ascendingComparator","f","d","ascending","tickStep","start","stop","count","step0","step1","LN10","error","e10","e5","e2","Map","map$1","object","map","key","set","isArray","o","createObject","setObject","createMap","setMap","Set","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","computeUpperHullIndexes","points","size","cross","Path","_x0","_y0","_x1","_y1","path","tree","isNaN","xm","ym","xp","yp","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","Infinity","cover","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","noabort","maybeNotify","queue","concurrency","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","definition","Object","create","Color","color","format","trim","toLowerCase","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","documentElement","cssView","defaultView","getComputedStyle","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","set$2","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","interval","newInterval","floori","offseti","field","date","Date","d0","d1","range","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","filterEvents","addEventListener","customEvent","sourceEvent","none$2","EnterNode","datum","_parent","bindIndex","enter","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","_groups","_parents","selection","root","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","range0","range1","selectAll","order","tickExit","tickEnter","line","select","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","x$2","y$2","nopropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touchending","keydowned","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transform$2","T","Transform$1","fit","project","clip","geoStream","boundsStream$1","fitSize","fitExtent","resampleNone","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projection","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","conicEqualAreaRaw","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","sign$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","selection_on","current","point$5","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeId","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","tx","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","nodeById","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","forward","circle$1","lines","pointEqual","isSubject","extent$1","length$2","object$1","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty"],"mappings":"AAAAA,cAAc,EAAE,IAEV,SAASC,EAAQC,EAASC,GAE/B,YCJD,IAAMC,GAAID,EAAQ,GAIZE,GAHQF,EAAQ,GACXA,EAAQ,GAEFC,EAAE,aACfE,EAAa,EACbC,QAIJH,GAAEI,QAAQC,GAAG,SAAU,WACnB,GAAIL,EAAEM,MAAMC,QAAU,IAAK,CACvB,GAAIC,GAAaR,EAAEM,MAAMG,WAErBD,GAAa,KACbE,aAAaP,GACbF,EAASU,OACTC,QAAQC,IAAI,wBAELL,EAAaN,GACpBD,EAASa,QAAQ,QACjBF,QAAQC,IAAI,0BAGZZ,EAASc,UAAU,QACnBH,QAAQC,IAAI,yBACZH,aAAaP,GACbA,EAAea,WAAWC,EAAS,MAEvCf,EAAaM,MAGTP,GAASiB,SAAS,kBAClBjB,EAASkB,YAAY,mBAMjClB,EAASI,GAAG,aAAc,WACtBK,aAAaP,KAIjBF,EAASI,GAAG,aAAc,WACtB,GAAIG,GAAaR,EAAEM,MAAMG,WACrBD,GAAa,MACbL,EAAea,WAAWC,EAAS,OAI3C,IAAMA,GAAU,iBAAMhB,GAASa,QAAQ,QAEvCd,GAAE,oBAAoBK,GAAG,QAAS,WAC9BJ,EAASmB,YAAY,mBAGzBpB,EAAE,iBAAiBqB,OACfC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,gBAAgB,EAChBC,aAEQC,WAAY,IACZC,UACIJ,aAAc,QDavB,CAED,SAAS7B,EAAQC,EAASC,GAE/B,GAAIgC,GAAgCC,EAA8BC,EAE9DC,EAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,OAAS,eAAkBE,KEtE1O,SAASE,GACN,YAEIP,IAAQjC,EAAA,IAARgC,EAAA,EAAAE,EAAA,kBAAAF,KAAAS,MAAA1C,EAAAkC,GAAAD,IAAAU,SAAAR,IAAApC,EAAAC,QAAAmC,KAON,SAASjC,GACP,YACA,IAAI0C,GAAQtC,OAAOsC,SAEnBA,GAAS,WAIL,QAASA,GAAMC,EAASb,GAEpB,GAAcc,GAAVC,EAAIvC,IAERuC,GAAEC,UACEC,eAAe,EACfpB,gBAAgB,EAChBqB,aAAchD,EAAE2C,GAChBM,WAAYjD,EAAE2C,GACdrB,QAAQ,EACR4B,SAAU,KACVC,UAAW,+HACXC,UAAW,uHACXC,UAAU,EACVC,cAAe,IACfC,YAAY,EACZC,cAAe,OACfC,QAAS,OACTC,aAAc,SAASC,EAAQC,GAC3B,MAAO5D,GAAE,wEAAwE6D,KAAKD,EAAI,IAE9FrC,MAAM,EACNuC,UAAW,aACXC,WAAW,EACXC,OAAQ,SACRC,aAAc,IACdC,MAAM,EACNC,eAAe,EACf3C,UAAU,EACV4C,aAAc,EACdC,SAAU,WACVC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,kBAAkB,EAClBC,UAAW,SACX9C,WAAY,KACZ+C,KAAM,EACNC,KAAK,EACLC,MAAO,GACPC,aAAc,EACdpD,aAAc,EACdqD,eAAgB,EAChBtD,MAAO,IACPuD,OAAO,EACPC,cAAc,EACdC,WAAW,EACXC,eAAgB,EAChBC,QAAQ,EACRC,cAAc,EACdC,eAAe,EACfC,UAAU,EACVC,iBAAiB,EACjBC,gBAAgB,EAChBC,OAAQ,KAGZ7C,EAAE8C,UACEC,WAAW,EACXC,UAAU,EACVC,cAAe,KACfC,iBAAkB,EAClBC,YAAa,KACbC,aAAc,EACdC,UAAW,EACXC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZC,UAAW,EACXC,WAAY,KACZC,WAAY,KACZC,WAAY,KACZC,WAAY,KACZC,YAAa,KACbC,QAAS,KACTC,SAAS,EACTC,YAAa,EACbC,UAAW,KACXC,MAAO,KACPC,eACAC,mBAAmB,EACnBC,WAAW,GAGfnH,EAAEoH,OAAOvE,EAAGA,EAAE8C,UAEd9C,EAAEwE,iBAAmB,KACrBxE,EAAEyE,SAAW,KACbzE,EAAE0E,SAAW,KACb1E,EAAE2E,eACF3E,EAAE4E,sBACF5E,EAAE6E,gBAAiB,EACnB7E,EAAE8E,UAAW,EACb9E,EAAE+E,aAAc,EAChB/E,EAAEgF,OAAS,SACXhF,EAAEiF,QAAS,EACXjF,EAAEkF,aAAe,KACjBlF,EAAE6B,UAAY,KACd7B,EAAEmF,SAAW,EACbnF,EAAEoF,aAAc,EAChBpF,EAAEqF,QAAUlI,EAAE2C,GACdE,EAAEsF,aAAe,KACjBtF,EAAEuF,cAAgB,KAClBvF,EAAEwF,eAAiB,KACnBxF,EAAEyF,iBAAmB,mBACrBzF,EAAE0F,YAAc,EAChB1F,EAAE2F,YAAc,KAEhB5F,EAAe5C,EAAE2C,GAAS8F,KAAK,aAE/B5F,EAAE6F,QAAU1I,EAAEoH,UAAWvE,EAAEC,SAAUhB,EAAUc,GAE/CC,EAAEoD,aAAepD,EAAE6F,QAAQtE,aAE3BvB,EAAE8F,iBAAmB9F,EAAE6F,QAEW,mBAAvBE,UAASC,WAChBhG,EAAEgF,OAAS,YACXhF,EAAEyF,iBAAmB,uBACmB,mBAA1BM,UAASE,eACvBjG,EAAEgF,OAAS,eACXhF,EAAEyF,iBAAmB,0BAGzBzF,EAAEkG,SAAW/I,EAAEgJ,MAAMnG,EAAEkG,SAAUlG,GACjCA,EAAEoG,cAAgBjJ,EAAEgJ,MAAMnG,EAAEoG,cAAepG,GAC3CA,EAAEqG,iBAAmBlJ,EAAEgJ,MAAMnG,EAAEqG,iBAAkBrG,GACjDA,EAAEsG,YAAcnJ,EAAEgJ,MAAMnG,EAAEsG,YAAatG,GACvCA,EAAEuG,aAAepJ,EAAEgJ,MAAMnG,EAAEuG,aAAcvG,GACzCA,EAAEwG,cAAgBrJ,EAAEgJ,MAAMnG,EAAEwG,cAAexG,GAC3CA,EAAEyG,YAActJ,EAAEgJ,MAAMnG,EAAEyG,YAAazG,GACvCA,EAAE0G,aAAevJ,EAAEgJ,MAAMnG,EAAE0G,aAAc1G,GACzCA,EAAE2G,YAAcxJ,EAAEgJ,MAAMnG,EAAE2G,YAAa3G,GACvCA,EAAE4G,WAAazJ,EAAEgJ,MAAMnG,EAAE4G,WAAY5G,GAErCA,EAAE6G,YAAcA,IAKhB7G,EAAE8G,SAAW,4BAGb9G,EAAE+G,sBACF/G,EAAEgH,MAAK,GAlJX,GAAIH,GAAc,CAsJlB,OAAOhH,MAIXA,EAAMoH,UAAUC,YAAc,WAC1B,GAAIlH,GAAIvC,IAERuC,GAAE8D,YAAYqD,KAAK,iBAAiBC,MAChCC,cAAe,UAChBF,KAAK,4BAA4BC,MAChCE,SAAY,OAKpBzH,EAAMoH,UAAUM,SAAW1H,EAAMoH,UAAUO,SAAW,SAASC,EAAQC,EAAOC,GAE1E,GAAI3H,GAAIvC,IAER,IAAsB,iBAAXiK,GACPC,EAAYD,EACZA,EAAQ,SACL,IAAIA,EAAQ,GAAMA,GAAS1H,EAAE4D,WAChC,OAAO,CAGX5D,GAAE4H,SAEoB,gBAAXF,GACO,IAAVA,GAAoC,IAArB1H,EAAE+D,QAAQ8D,OACzB1K,EAAEsK,GAAQK,SAAS9H,EAAE8D,aACd6D,EACPxK,EAAEsK,GAAQM,aAAa/H,EAAE+D,QAAQiE,GAAGN,IAEpCvK,EAAEsK,GAAQQ,YAAYjI,EAAE+D,QAAQiE,GAAGN,IAGnCC,KAAc,EACdxK,EAAEsK,GAAQS,UAAUlI,EAAE8D,aAEtB3G,EAAEsK,GAAQK,SAAS9H,EAAE8D,aAI7B9D,EAAE+D,QAAU/D,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAEhDhC,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOoG,SAE3CpI,EAAE8D,YAAYuE,OAAOrI,EAAE+D,SAEvB/D,EAAE+D,QAAQuE,KAAK,SAASZ,EAAO5H,GAC3B3C,EAAE2C,GAASsH,KAAK,mBAAoBM,KAGxC1H,EAAEsF,aAAetF,EAAE+D,QAEnB/D,EAAEuI,UAIN1I,EAAMoH,UAAUuB,cAAgB,WAC5B,GAAIxI,GAAIvC,IACR,IAA+B,IAA3BuC,EAAE6F,QAAQhH,cAAsBmB,EAAE6F,QAAQ/G,kBAAmB,GAAQkB,EAAE6F,QAAQnD,YAAa,EAAO,CACnG,GAAI+F,GAAezI,EAAE+D,QAAQiE,GAAGhI,EAAEoD,cAAcsF,aAAY,EAC5D1I,GAAEmE,MAAMwE,SACJC,OAAQH,GACTzI,EAAE6F,QAAQjH,SAIrBiB,EAAMoH,UAAU4B,aAAe,SAASC,EAAYC,GAEhD,GAAIC,MACAhJ,EAAIvC,IAERuC,GAAEwI,gBAEExI,EAAE6F,QAAQ9D,OAAQ,GAAQ/B,EAAE6F,QAAQnD,YAAa,IACjDoG,GAAcA,GAEd9I,EAAEqE,qBAAsB,EACpBrE,EAAE6F,QAAQnD,YAAa,EACvB1C,EAAE8D,YAAY6E,SACVM,KAAMH,GACP9I,EAAE6F,QAAQjH,MAAOoB,EAAE6F,QAAQ1E,OAAQ4H,GAEtC/I,EAAE8D,YAAY6E,SACVO,IAAKJ,GACN9I,EAAE6F,QAAQjH,MAAOoB,EAAE6F,QAAQ1E,OAAQ4H,GAKtC/I,EAAE6E,kBAAmB,GACjB7E,EAAE6F,QAAQ9D,OAAQ,IAClB/B,EAAEmD,aAAgBnD,EAAEmD,aAExBhG,GACIgM,UAAWnJ,EAAEmD,cACdwF,SACCQ,UAAWL,IAEXM,SAAUpJ,EAAE6F,QAAQjH,MACpBuC,OAAQnB,EAAE6F,QAAQ1E,OAClBkI,KAAM,SAASC,GACXA,EAAMC,KAAKC,KAAKF,GACZtJ,EAAE6F,QAAQnD,YAAa,GACvBsG,EAAUhJ,EAAEyE,UAAY,aACpB6E,EAAM,WACVtJ,EAAE8D,YAAY2F,IAAIT,KAElBA,EAAUhJ,EAAEyE,UAAY,iBACpB6E,EAAM,MACVtJ,EAAE8D,YAAY2F,IAAIT,KAG1BU,SAAU,WACFX,GACAA,EAASY,YAOrB3J,EAAE4J,kBACFd,EAAaS,KAAKC,KAAKV,GAEnB9I,EAAE6F,QAAQnD,YAAa,EACvBsG,EAAUhJ,EAAEyE,UAAY,eAAiBqE,EAAa,gBAEtDE,EAAUhJ,EAAEyE,UAAY,mBAAqBqE,EAAa,WAE9D9I,EAAE8D,YAAY2F,IAAIT,GAEdD,GACA5K,WAAW,WAEP6B,EAAE6J,oBAEFd,EAASY,QACV3J,EAAE6F,QAAQjH,SAS7BiB,EAAMoH,UAAU6C,aAAe,WAE3B,GAAI9J,GAAIvC,KACJ4C,EAAWL,EAAE6F,QAAQxF,QAMzB,OAJKA,IAAyB,OAAbA,IACbA,EAAWlD,EAAEkD,GAAU0J,IAAI/J,EAAEqF,UAG1BhF,GAIXR,EAAMoH,UAAU5G,SAAW,SAASqH,GAEhC,GAAI1H,GAAIvC,KACJ4C,EAAWL,EAAE8J,cAEC,QAAbzJ,GAAyC,YAApB,mBAAOA,GAAP,YAAAhB,EAAOgB,KAC7BA,EAASiI,KAAK,WACV,GAAI0B,GAAS7M,EAAEM,MAAMe,MAAM,WACvBwL,GAAO1F,WACP0F,EAAOC,aAAavC,GAAO,MAO3C7H,EAAMoH,UAAU2C,gBAAkB,SAAS5H,GAEvC,GAAIhC,GAAIvC,KACJyM,IAEAlK,GAAE6F,QAAQxE,QAAS,EACnB6I,EAAWlK,EAAEwF,gBAAkBxF,EAAEuF,cAAgB,IAAMvF,EAAE6F,QAAQjH,MAAQ,MAAQoB,EAAE6F,QAAQjF,QAE3FsJ,EAAWlK,EAAEwF,gBAAkB,WAAaxF,EAAE6F,QAAQjH,MAAQ,MAAQoB,EAAE6F,QAAQjF,QAGhFZ,EAAE6F,QAAQxE,QAAS,EACnBrB,EAAE8D,YAAY2F,IAAIS,GAElBlK,EAAE+D,QAAQiE,GAAGhG,GAAOyH,IAAIS,IAKhCrK,EAAMoH,UAAUf,SAAW,WAEvB,GAAIlG,GAAIvC,IAERuC,GAAEoG,gBAEGpG,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eAC1BmB,EAAEiD,cAAgBkH,YAAanK,EAAEqG,iBAAkBrG,EAAE6F,QAAQpF,iBAKrEZ,EAAMoH,UAAUb,cAAgB,WAE5B,GAAIpG,GAAIvC,IAEJuC,GAAEiD,eACFmH,cAAcpK,EAAEiD,gBAKxBpD,EAAMoH,UAAUZ,iBAAmB,WAE/B,GAAIrG,GAAIvC,KACJ4M,EAAUrK,EAAEoD,aAAepD,EAAE6F,QAAQ3D,cAEnClC,GAAEiF,QAAWjF,EAAE+E,aAAgB/E,EAAE8E,WAE9B9E,EAAE6F,QAAQlH,YAAa,IAEH,IAAhBqB,EAAEqD,WAAqBrD,EAAEoD,aAAe,IAAUpD,EAAE4D,WAAa,EAClE5D,EAAEqD,UAAY,EAGQ,IAAhBrD,EAAEqD,YAERgH,EAAUrK,EAAEoD,aAAepD,EAAE6F,QAAQ3D,eAEhClC,EAAEoD,aAAe,IAAM,IACxBpD,EAAEqD,UAAY,KAO1BrD,EAAEiK,aAAcI,KAMxBxK,EAAMoH,UAAUqD,YAAc,WAE1B,GAAItK,GAAIvC,IAEJuC,GAAE6F,QAAQpH,UAAW,IAErBuB,EAAE2D,WAAaxG,EAAE6C,EAAE6F,QAAQvF,WAAWiK,SAAS,eAC/CvK,EAAE0D,WAAavG,EAAE6C,EAAE6F,QAAQtF,WAAWgK,SAAS,eAE3CvK,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAEzBmB,EAAE2D,WAAWrF,YAAY,gBAAgBkM,WAAW,wBACpDxK,EAAE0D,WAAWpF,YAAY,gBAAgBkM,WAAW,wBAEhDxK,EAAE8G,SAAS2D,KAAKzK,EAAE6F,QAAQvF,YAC1BN,EAAE2D,WAAWuE,UAAUlI,EAAE6F,QAAQ1F,cAGjCH,EAAE8G,SAAS2D,KAAKzK,EAAE6F,QAAQtF,YAC1BP,EAAE0D,WAAWoE,SAAS9H,EAAE6F,QAAQ1F,cAGhCH,EAAE6F,QAAQlH,YAAa,GACvBqB,EAAE2D,WACG4G,SAAS,kBACTnD,KAAK,gBAAiB,SAK/BpH,EAAE2D,WAAW+G,IAAK1K,EAAE0D,YAEf6G,SAAS,gBACTnD,MACGuD,gBAAiB,OACjBrD,SAAY,SAShCzH,EAAMoH,UAAU2D,UAAY,WAExB,GACI7J,GAAG8J,EADH7K,EAAIvC,IAGR,IAAIuC,EAAE6F,QAAQnH,QAAS,GAAQsB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,aAAc,CAMlE,IAJAmB,EAAEqF,QAAQkF,SAAS,gBAEnBM,EAAM1N,EAAE,UAAUoN,SAASvK,EAAE6F,QAAQ5E,WAEhCF,EAAI,EAAGA,GAAKf,EAAE8K,cAAe/J,GAAK,EACnC8J,EAAIxC,OAAOlL,EAAE,UAAUkL,OAAOrI,EAAE6F,QAAQhF,aAAa8I,KAAKlM,KAAMuC,EAAGe,IAGvEf,GAAEsD,MAAQuH,EAAI/C,SAAS9H,EAAE6F,QAAQzF,YAEjCJ,EAAEsD,MAAM6D,KAAK,MAAM4D,QAAQR,SAAS,gBAAgBnD,KAAK,cAAe,WAMhFvH,EAAMoH,UAAU+D,SAAW,WAEvB,GAAIhL,GAAIvC,IAERuC,GAAE+D,QACE/D,EAAEqF,QACG8C,SAAUnI,EAAE6F,QAAQ7D,MAAQ,uBAC5BuI,SAAS,eAElBvK,EAAE4D,WAAa5D,EAAE+D,QAAQ8D,OAEzB7H,EAAE+D,QAAQuE,KAAK,SAASZ,EAAO5H,GAC3B3C,EAAE2C,GACGsH,KAAK,mBAAoBM,GACzB9B,KAAK,kBAAmBzI,EAAE2C,GAASsH,KAAK,UAAY,MAG7DpH,EAAEqF,QAAQkF,SAAS,gBAEnBvK,EAAE8D,YAAgC,IAAjB9D,EAAE4D,WACfzG,EAAE,8BAA8B2K,SAAS9H,EAAEqF,SAC3CrF,EAAE+D,QAAQkH,QAAQ,8BAA8BC,SAEpDlL,EAAEmE,MAAQnE,EAAE8D,YAAYqH,KACpB,gDAAgDD,SACpDlL,EAAE8D,YAAY2F,IAAI,UAAW,GAEzBzJ,EAAE6F,QAAQnF,cAAe,GAAQV,EAAE6F,QAAQzD,gBAAiB,IAC5DpC,EAAE6F,QAAQ3D,eAAiB,GAG/B/E,EAAE,iBAAkB6C,EAAEqF,SAAS0E,IAAI,SAASQ,SAAS,iBAErDvK,EAAEoL,gBAEFpL,EAAEsK,cAEFtK,EAAE4K,YAEF5K,EAAEqL,aAGFrL,EAAEsL,gBAA0C,gBAAnBtL,GAAEoD,aAA4BpD,EAAEoD,aAAe,GAEpEpD,EAAE6F,QAAQ3E,aAAc,GACxBlB,EAAEmE,MAAMoG,SAAS,cAKzB1K,EAAMoH,UAAUsE,UAAY,WAExB,GAAcC,GAAGC,EAAGC,EAAGC,EAAWC,EAAaC,EAAeC,EAA1D9L,EAAIvC,IAKR,IAHAkO,EAAY5F,SAASgG,yBACrBF,EAAiB7L,EAAEqF,QAAQ8C,WAExBnI,EAAE6F,QAAQ/D,KAAO,EAAG,CAOnB,IALAgK,EAAmB9L,EAAE6F,QAAQ5D,aAAejC,EAAE6F,QAAQ/D,KACtD8J,EAAcrC,KAAKC,KACfqC,EAAehE,OAASiE,GAGxBN,EAAI,EAAGA,EAAII,EAAaJ,IAAI,CAC5B,GAAIxJ,GAAQ+D,SAASiG,cAAc,MACnC,KAAIP,EAAI,EAAGA,EAAIzL,EAAE6F,QAAQ/D,KAAM2J,IAAK,CAChC,GAAIQ,GAAMlG,SAASiG,cAAc,MACjC,KAAIN,EAAI,EAAGA,EAAI1L,EAAE6F,QAAQ5D,aAAcyJ,IAAK,CACxC,GAAI1B,GAAUwB,EAAIM,GAAqBL,EAAIzL,EAAE6F,QAAQ5D,aAAgByJ,EACjEG,GAAeK,IAAIlC,IACnBiC,EAAIE,YAAYN,EAAeK,IAAIlC,IAG3ChI,EAAMmK,YAAYF,GAEtBN,EAAUQ,YAAYnK,GAG1BhC,EAAEqF,QAAQ+G,QAAQ/D,OAAOsD,GACzB3L,EAAEqF,QAAQ8C,WAAWA,WAAWA,WAC3BsB,KACG/L,MAAS,IAAMsC,EAAE6F,QAAQ5D,aAAgB,IACzCoK,QAAW,mBAO3BxM,EAAMoH,UAAUqF,gBAAkB,SAASC,EAASC,GAEhD,GACIxN,GAAYyN,EAAkBC,EAD9B1M,EAAIvC,KAC0CkP,GAAoB,EAClEC,EAAc5M,EAAEqF,QAAQ3H,QACxBgI,EAAcnI,OAAOsP,YAAc1P,EAAEI,QAAQG,OAUjD,IARoB,WAAhBsC,EAAE6B,UACF6K,EAAiBhH,EACM,WAAhB1F,EAAE6B,UACT6K,EAAiBE,EACM,QAAhB5M,EAAE6B,YACT6K,EAAiBnD,KAAKuD,IAAIpH,EAAakH,IAGtC5M,EAAE6F,QAAQ9G,YACXiB,EAAE6F,QAAQ9G,WAAW8I,QACI,OAAzB7H,EAAE6F,QAAQ9G,WAAqB,CAE/B0N,EAAmB,IAEnB,KAAKzN,IAAcgB,GAAE2E,YACb3E,EAAE2E,YAAYoI,eAAe/N,KACzBgB,EAAE8F,iBAAiBrE,eAAgB,EAC/BiL,EAAiB1M,EAAE2E,YAAY3F,KAC/ByN,EAAmBzM,EAAE2E,YAAY3F,IAGjC0N,EAAiB1M,EAAE2E,YAAY3F,KAC/ByN,EAAmBzM,EAAE2E,YAAY3F,IAMxB,QAArByN,EAC2B,OAAvBzM,EAAEwE,kBACEiI,IAAqBzM,EAAEwE,kBAAoBgI,KAC3CxM,EAAEwE,iBACEiI,EAC2C,YAA3CzM,EAAE4E,mBAAmB6H,GACrBzM,EAAEgN,QAAQP,IAEVzM,EAAE6F,QAAU1I,EAAEoH,UAAWvE,EAAE8F,iBACvB9F,EAAE4E,mBACE6H,IACJF,KAAY,IACZvM,EAAEoD,aAAepD,EAAE6F,QAAQtE,cAE/BvB,EAAEiN,QAAQV,IAEdI,EAAoBF,IAGxBzM,EAAEwE,iBAAmBiI,EAC0B,YAA3CzM,EAAE4E,mBAAmB6H,GACrBzM,EAAEgN,QAAQP,IAEVzM,EAAE6F,QAAU1I,EAAEoH,UAAWvE,EAAE8F,iBACvB9F,EAAE4E,mBACE6H,IACJF,KAAY,IACZvM,EAAEoD,aAAepD,EAAE6F,QAAQtE,cAE/BvB,EAAEiN,QAAQV,IAEdI,EAAoBF,GAGG,OAAvBzM,EAAEwE,mBACFxE,EAAEwE,iBAAmB,KACrBxE,EAAE6F,QAAU7F,EAAE8F,iBACVyG,KAAY,IACZvM,EAAEoD,aAAepD,EAAE6F,QAAQtE,cAE/BvB,EAAEiN,QAAQV,GACVI,EAAoBF,GAKvBF,GAAWI,KAAsB,GAClC3M,EAAEqF,QAAQ6H,QAAQ,cAAelN,EAAG2M,MAMhD9M,EAAMoH,UAAUX,YAAc,SAAS6G,EAAOC,GAE1C,GAEIC,GAAapJ,EAAaqJ,EAF1BtN,EAAIvC,KACJ8P,EAAUpQ,EAAEgQ,EAAMK,cAgBtB,QAZGD,EAAQE,GAAG,MACVN,EAAMO,iBAINH,EAAQE,GAAG,QACXF,EAAUA,EAAQI,QAAQ,OAG9BL,EAAgBtN,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,iBAAmB,EAC5DmL,EAAcC,EAAe,GAAKtN,EAAE4D,WAAa5D,EAAEoD,cAAgBpD,EAAE6F,QAAQ3D,eAErEiL,EAAMvH,KAAKgI,SAEf,IAAK,WACD3J,EAA8B,IAAhBoJ,EAAoBrN,EAAE6F,QAAQ3D,eAAiBlC,EAAE6F,QAAQhH,aAAewO,EAClFrN,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cACzBmB,EAAEiK,aAAajK,EAAEoD,aAAea,GAAa,EAAOmJ,EAExD,MAEJ,KAAK,OACDnJ,EAA8B,IAAhBoJ,EAAoBrN,EAAE6F,QAAQ3D,eAAiBmL,EACzDrN,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cACzBmB,EAAEiK,aAAajK,EAAEoD,aAAea,GAAa,EAAOmJ,EAExD,MAEJ,KAAK,QACD,GAAI1F,GAA6B,IAArByF,EAAMvH,KAAK8B,MAAc,EACjCyF,EAAMvH,KAAK8B,OAAS6F,EAAQ7F,QAAU1H,EAAE6F,QAAQ3D,cAEpDlC,GAAEiK,aAAajK,EAAE6N,eAAenG,IAAQ,EAAO0F,GAC/CG,EAAQpF,WAAW+E,QAAQ,QAC3B,MAEJ,SACI,SAKZrN,EAAMoH,UAAU4G,eAAiB,SAASnG,GAEtC,GACIoG,GAAYC,EADZ/N,EAAIvC,IAKR,IAFAqQ,EAAa9N,EAAEgO,sBACfD,EAAgB,EACZrG,EAAQoG,EAAWA,EAAWjG,OAAS,GACvCH,EAAQoG,EAAWA,EAAWjG,OAAS,OAEvC,KAAK,GAAIoG,KAAKH,GAAY,CACtB,GAAIpG,EAAQoG,EAAWG,GAAI,CACvBvG,EAAQqG,CACR,OAEJA,EAAgBD,EAAWG,GAInC,MAAOvG,IAGX7H,EAAMoH,UAAUiH,cAAgB,WAE5B,GAAIlO,GAAIvC,IAEJuC,GAAE6F,QAAQnH,MAAoB,OAAZsB,EAAEsD,OAEpBnG,EAAE,KAAM6C,EAAEsD,OACL6K,IAAI,cAAenO,EAAEsG,aACrB6H,IAAI,mBAAoBhR,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,IAChDmO,IAAI,mBAAoBhR,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,IAIzDA,EAAEqF,QAAQ8I,IAAI,0BAEVnO,EAAE6F,QAAQpH,UAAW,GAAQuB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eACtDmB,EAAE2D,YAAc3D,EAAE2D,WAAWwK,IAAI,cAAenO,EAAEsG,aAClDtG,EAAE0D,YAAc1D,EAAE0D,WAAWyK,IAAI,cAAenO,EAAEsG,cAGtDtG,EAAEmE,MAAMgK,IAAI,mCAAoCnO,EAAE0G,cAClD1G,EAAEmE,MAAMgK,IAAI,kCAAmCnO,EAAE0G,cACjD1G,EAAEmE,MAAMgK,IAAI,+BAAgCnO,EAAE0G,cAC9C1G,EAAEmE,MAAMgK,IAAI,qCAAsCnO,EAAE0G,cAEpD1G,EAAEmE,MAAMgK,IAAI,cAAenO,EAAEuG,cAE7BpJ,EAAE4I,UAAUoI,IAAInO,EAAEyF,iBAAkBzF,EAAEqO,YAEtCrO,EAAEsO,qBAEEtO,EAAE6F,QAAQ3F,iBAAkB,GAC5BF,EAAEmE,MAAMgK,IAAI,gBAAiBnO,EAAE4G,YAG/B5G,EAAE6F,QAAQvE,iBAAkB,GAC5BnE,EAAE6C,EAAE8D,aAAaqE,WAAWgG,IAAI,cAAenO,EAAEwG,eAGrDrJ,EAAEI,QAAQ4Q,IAAI,iCAAmCnO,EAAE6G,YAAa7G,EAAEuO,mBAElEpR,EAAEI,QAAQ4Q,IAAI,sBAAwBnO,EAAE6G,YAAa7G,EAAEwO,QAEvDrR,EAAE,oBAAqB6C,EAAE8D,aAAaqK,IAAI,YAAanO,EAAE0N,gBAEzDvQ,EAAEI,QAAQ4Q,IAAI,oBAAsBnO,EAAE6G,YAAa7G,EAAEyG,aACrDtJ,EAAE4I,UAAUoI,IAAI,qBAAuBnO,EAAE6G,YAAa7G,EAAEyG,cAI5D5G,EAAMoH,UAAUqH,mBAAqB,WAEjC,GAAItO,GAAIvC,IAERuC,GAAEmE,MAAMgK,IAAI,mBAAoBhR,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,IACxDA,EAAEmE,MAAMgK,IAAI,mBAAoBhR,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,KAI5DH,EAAMoH,UAAUwH,YAAc,WAE1B,GAAc5C,GAAV7L,EAAIvC,IAELuC,GAAE6F,QAAQ/D,KAAO,IAChB+J,EAAiB7L,EAAE+D,QAAQoE,WAAWA,WACtC0D,EAAerB,WAAW,SAC1BxK,EAAEqF,QAAQ+G,QAAQ/D,OAAOwD,KAKjChM,EAAMoH,UAAUV,aAAe,SAAS4G,GAEpC,GAAInN,GAAIvC,IAEJuC,GAAEoF,eAAgB,IAClB+H,EAAMuB,2BACNvB,EAAMwB,kBACNxB,EAAMO,mBAKd7N,EAAMoH,UAAU2H,QAAU,SAAS3B,GAE/B,GAAIjN,GAAIvC,IAERuC,GAAEoG,gBAEFpG,EAAEoE,eAEFpE,EAAEkO,gBAEF/Q,EAAE,gBAAiB6C,EAAEqF,SAAS+C,SAE1BpI,EAAEsD,OACFtD,EAAEsD,MAAMuL,SAIP7O,EAAE2D,YAAc3D,EAAE2D,WAAWkE,SAE9B7H,EAAE2D,WACGrF,YAAY,2CACZkM,WAAW,sCACXf,IAAI,UAAU,IAEdzJ,EAAE8G,SAAS2D,KAAMzK,EAAE6F,QAAQvF,YAC5BN,EAAE2D,WAAWkL,UAIhB7O,EAAE0D,YAAc1D,EAAE0D,WAAWmE,SAE9B7H,EAAE0D,WACGpF,YAAY,2CACZkM,WAAW,sCACXf,IAAI,UAAU,IAEdzJ,EAAE8G,SAAS2D,KAAMzK,EAAE6F,QAAQtF,YAC5BP,EAAE0D,WAAWmL,UAMjB7O,EAAE+D,UAEF/D,EAAE+D,QACGzF,YAAY,qEACZkM,WAAW,eACXA,WAAW,oBACXlC,KAAK,WACFnL,EAAEM,MAAM2J,KAAK,QAASjK,EAAEM,MAAMmI,KAAK,sBAG3C5F,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOoG,SAE3CpI,EAAE8D,YAAYsE,SAEdpI,EAAEmE,MAAMiE,SAERpI,EAAEqF,QAAQgD,OAAOrI,EAAE+D,UAGvB/D,EAAEyO,cAEFzO,EAAEqF,QAAQ/G,YAAY,gBACtB0B,EAAEqF,QAAQ/G,YAAY,qBACtB0B,EAAEqF,QAAQ/G,YAAY,gBAEtB0B,EAAEsE,WAAY,EAEV2I,GACAjN,EAAEqF,QAAQ6H,QAAQ,WAAYlN,KAKtCH,EAAMoH,UAAU4C,kBAAoB,SAAS7H,GAEzC,GAAIhC,GAAIvC,KACJyM,IAEJA,GAAWlK,EAAEwF,gBAAkB,GAE3BxF,EAAE6F,QAAQxE,QAAS,EACnBrB,EAAE8D,YAAY2F,IAAIS,GAElBlK,EAAE+D,QAAQiE,GAAGhG,GAAOyH,IAAIS,IAKhCrK,EAAMoH,UAAU6H,UAAY,SAASC,EAAYhG,GAE7C,GAAI/I,GAAIvC,IAEJuC,GAAE6E,kBAAmB,GAErB7E,EAAE+D,QAAQiE,GAAG+G,GAAYtF,KACrB5G,OAAQ7C,EAAE6F,QAAQhD,SAGtB7C,EAAE+D,QAAQiE,GAAG+G,GAAYpG,SACrBqG,QAAS,GACVhP,EAAE6F,QAAQjH,MAAOoB,EAAE6F,QAAQ1E,OAAQ4H,KAItC/I,EAAE4J,gBAAgBmF,GAElB/O,EAAE+D,QAAQiE,GAAG+G,GAAYtF,KACrBuF,QAAS,EACTnM,OAAQ7C,EAAE6F,QAAQhD,SAGlBkG,GACA5K,WAAW,WAEP6B,EAAE6J,kBAAkBkF,GAEpBhG,EAASY,QACV3J,EAAE6F,QAAQjH,SAOzBiB,EAAMoH,UAAUgI,aAAe,SAASF,GAEpC,GAAI/O,GAAIvC,IAEJuC,GAAE6E,kBAAmB,EAErB7E,EAAE+D,QAAQiE,GAAG+G,GAAYpG,SACrBqG,QAAS,EACTnM,OAAQ7C,EAAE6F,QAAQhD,OAAS,GAC5B7C,EAAE6F,QAAQjH,MAAOoB,EAAE6F,QAAQ1E,SAI9BnB,EAAE4J,gBAAgBmF,GAElB/O,EAAE+D,QAAQiE,GAAG+G,GAAYtF,KACrBuF,QAAS,EACTnM,OAAQ7C,EAAE6F,QAAQhD,OAAS,MAOvChD,EAAMoH,UAAUiI,aAAerP,EAAMoH,UAAUkI,YAAc,SAASC,GAElE,GAAIpP,GAAIvC,IAEO,QAAX2R,IAEApP,EAAEsF,aAAetF,EAAE+D,QAEnB/D,EAAE4H,SAEF5H,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOoG,SAE3CpI,EAAEsF,aAAa8J,OAAOA,GAAQtH,SAAS9H,EAAE8D,aAEzC9D,EAAEuI,WAMV1I,EAAMoH,UAAUoI,aAAe,WAE3B,GAAIrP,GAAIvC,IAERuC,GAAEqF,QACG8I,IAAI,0BACJ3Q,GAAG,yBACA,sBAAuB,SAAS2P,GAEpCA,EAAMuB,0BACN,IAAIY,GAAMnS,EAAEM,KAEZU,YAAW,WAEH6B,EAAE6F,QAAQlE,eACV3B,EAAE8E,SAAWwK,EAAI7B,GAAG,UACpBzN,EAAEkG,aAGP,MAKXrG,EAAMoH,UAAUsI,WAAa1P,EAAMoH,UAAUuI,kBAAoB,WAE7D,GAAIxP,GAAIvC,IACR,OAAOuC,GAAEoD,cAIbvD,EAAMoH,UAAU6D,YAAc,WAE1B,GAAI9K,GAAIvC,KAEJgS,EAAa,EACbC,EAAU,EACVC,EAAW,CAEf,IAAI3P,EAAE6F,QAAQlH,YAAa,EACvB,KAAO8Q,EAAazP,EAAE4D,cAChB+L,EACFF,EAAaC,EAAU1P,EAAE6F,QAAQ3D,eACjCwN,GAAW1P,EAAE6F,QAAQ3D,gBAAkBlC,EAAE6F,QAAQhH,aAAemB,EAAE6F,QAAQ3D,eAAiBlC,EAAE6F,QAAQhH,iBAEtG,IAAImB,EAAE6F,QAAQnF,cAAe,EAChCiP,EAAW3P,EAAE4D,eACV,IAAI5D,EAAE6F,QAAQxF,SAGjB,KAAOoP,EAAazP,EAAE4D,cAChB+L,EACFF,EAAaC,EAAU1P,EAAE6F,QAAQ3D,eACjCwN,GAAW1P,EAAE6F,QAAQ3D,gBAAkBlC,EAAE6F,QAAQhH,aAAemB,EAAE6F,QAAQ3D,eAAiBlC,EAAE6F,QAAQhH,iBALzG8Q,GAAW,EAAIpG,KAAKC,MAAMxJ,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAAgBmB,EAAE6F,QAAQ3D,eASjF,OAAOyN,GAAW,GAItB9P,EAAMoH,UAAU2I,QAAU,SAASb,GAE/B,GACIjG,GACA+G,EAEAC,EAJA9P,EAAIvC,KAGJsS,EAAiB,CAsFrB,OAnFA/P,GAAEiE,YAAc,EAChB4L,EAAiB7P,EAAE+D,QAAQgH,QAAQrC,aAAY,GAE3C1I,EAAE6F,QAAQlH,YAAa,GACnBqB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eACzBmB,EAAEiE,YAAejE,EAAE6D,WAAa7D,EAAE6F,QAAQhH,gBAC1CkR,EAAkBF,EAAiB7P,EAAE6F,QAAQhH,iBAE7CmB,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,iBAAmB,GACxC6M,EAAa/O,EAAE6F,QAAQ3D,eAAiBlC,EAAE4D,YAAc5D,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eAC7EkQ,EAAa/O,EAAE4D,YACf5D,EAAEiE,aAAgBjE,EAAE6F,QAAQhH,cAAgBkQ,EAAa/O,EAAE4D,aAAe5D,EAAE6D,cAC5EkM,GAAmB/P,EAAE6F,QAAQhH,cAAgBkQ,EAAa/O,EAAE4D,aAAeiM,OAE3E7P,EAAEiE,YAAgBjE,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,eAAkBlC,EAAE6D,cAC/DkM,EAAmB/P,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,eAAkB2N,QAKtEd,EAAa/O,EAAE6F,QAAQhH,aAAemB,EAAE4D,aACxC5D,EAAEiE,aAAgB8K,EAAa/O,EAAE6F,QAAQhH,aAAgBmB,EAAE4D,YAAc5D,EAAE6D,WAC3EkM,GAAmBhB,EAAa/O,EAAE6F,QAAQhH,aAAgBmB,EAAE4D,YAAciM,GAI9E7P,EAAE4D,YAAc5D,EAAE6F,QAAQhH,eAC1BmB,EAAEiE,YAAc,EAChB8L,EAAiB,GAGjB/P,EAAE6F,QAAQnF,cAAe,GAAQV,EAAE6F,QAAQlH,YAAa,EACxDqB,EAAEiE,aAAejE,EAAE6D,WAAa0F,KAAKyG,MAAMhQ,EAAE6F,QAAQhH,aAAe,GAAKmB,EAAE6D,WACpE7D,EAAE6F,QAAQnF,cAAe,IAChCV,EAAEiE,YAAc,EAChBjE,EAAEiE,aAAejE,EAAE6D,WAAa0F,KAAKyG,MAAMhQ,EAAE6F,QAAQhH,aAAe,IAIpEiK,EADA9I,EAAE6F,QAAQnD,YAAa,EACRqM,EAAa/O,EAAE6D,cAAoB7D,EAAEiE,YAErC8K,EAAac,KAAwBE,EAGpD/P,EAAE6F,QAAQpD,iBAAkB,IAGxBqN,EADA9P,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAAgBmB,EAAE6F,QAAQlH,YAAa,EACnDqB,EAAE8D,YAAYqE,SAAS,gBAAgBH,GAAG+G,GAE1C/O,EAAE8D,YAAYqE,SAAS,gBAAgBH,GAAG+G,EAAa/O,EAAE6F,QAAQhH,cAK3EiK,EAFJ9I,EAAE6F,QAAQ9D,OAAQ,EACd+N,EAAY,IACE9P,EAAE8D,YAAYpG,QAAUoS,EAAY,GAAGG,WAAaH,EAAYpS,YAEhE,EAGLoS,EAAY,GAAKA,EAAY,GAAGG,cAAkB,EAG/DjQ,EAAE6F,QAAQnF,cAAe,IAErBoP,EADA9P,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAAgBmB,EAAE6F,QAAQlH,YAAa,EACnDqB,EAAE8D,YAAYqE,SAAS,gBAAgBH,GAAG+G,GAE1C/O,EAAE8D,YAAYqE,SAAS,gBAAgBH,GAAG+G,EAAa/O,EAAE6F,QAAQhH,aAAe,GAK1FiK,EAFJ9I,EAAE6F,QAAQ9D,OAAQ,EACd+N,EAAY,IACE9P,EAAE8D,YAAYpG,QAAUoS,EAAY,GAAGG,WAAaH,EAAYpS,YAEhE,EAGLoS,EAAY,GAAKA,EAAY,GAAGG,cAAkB,EAGnEnH,IAAe9I,EAAEmE,MAAMzG,QAAUoS,EAAYI,cAAgB,IAI9DpH,GAIXjJ,EAAMoH,UAAUkJ,UAAYtQ,EAAMoH,UAAUmJ,eAAiB,SAASC,GAElE,GAAIrQ,GAAIvC,IAER,OAAOuC,GAAE6F,QAAQwK,IAIrBxQ,EAAMoH,UAAU+G,oBAAsB,WAElC,GAIIsC,GAJAtQ,EAAIvC,KACJgS,EAAa,EACbC,EAAU,EACVa,IAWJ,KARIvQ,EAAE6F,QAAQlH,YAAa,EACvB2R,EAAMtQ,EAAE4D,YAER6L,EAAazP,EAAE6F,QAAQ3D,kBACvBwN,EAAU1P,EAAE6F,QAAQ3D,kBACpBoO,EAAqB,EAAftQ,EAAE4D,YAGL6L,EAAaa,GAChBC,EAAQC,KAAKf,GACbA,EAAaC,EAAU1P,EAAE6F,QAAQ3D,eACjCwN,GAAW1P,EAAE6F,QAAQ3D,gBAAkBlC,EAAE6F,QAAQhH,aAAemB,EAAE6F,QAAQ3D,eAAiBlC,EAAE6F,QAAQhH,YAGzG,OAAO0R,IAIX1Q,EAAMoH,UAAUwJ,SAAW,WAEvB,MAAOhT,OAIXoC,EAAMoH,UAAUyJ,cAAgB,WAE5B,GACIC,GAAiBC,EAAaC,EAD9B7Q,EAAIvC,IAKR,OAFAoT,GAAe7Q,EAAE6F,QAAQnF,cAAe,EAAOV,EAAE6D,WAAa0F,KAAKyG,MAAMhQ,EAAE6F,QAAQhH,aAAe,GAAK,EAEnGmB,EAAE6F,QAAQzD,gBAAiB,GAC3BpC,EAAE8D,YAAYqD,KAAK,gBAAgBmB,KAAK,SAASZ,EAAO1F,GACpD,GAAIA,EAAMiO,WAAaY,EAAgB1T,EAAE6E,GAAOkO,aAAe,EAAMlQ,EAAEkE,aAEnE,MADA0M,GAAc5O,GACP,IAIf2O,EAAkBpH,KAAKuH,IAAI3T,EAAEyT,GAAaxJ,KAAK,oBAAsBpH,EAAEoD,eAAiB,GAKjFpD,EAAE6F,QAAQ3D,gBAKzBrC,EAAMoH,UAAU8J,KAAOlR,EAAMoH,UAAU+J,UAAY,SAAShP,EAAOoL,GAE/D,GAAIpN,GAAIvC,IAERuC,GAAEsG,aACEV,MACIgI,QAAS,QACTlG,MAAOuJ,SAASjP,KAErBoL,IAIPvN,EAAMoH,UAAUD,KAAO,SAASkK,GAE5B,GAAIlR,GAAIvC,IAEHN,GAAE6C,EAAEqF,SAAShH,SAAS,uBAEvBlB,EAAE6C,EAAEqF,SAASkF,SAAS,qBAEtBvK,EAAEuL,YACFvL,EAAEgL,WACFhL,EAAEmR,WACFnR,EAAEoR,YACFpR,EAAEqR,aACFrR,EAAEsR,mBACFtR,EAAEuR,eACFvR,EAAEqL,aACFrL,EAAEsM,iBAAgB,GAClBtM,EAAEqP,gBAIF6B,GACAlR,EAAEqF,QAAQ6H,QAAQ,QAASlN,IAG3BA,EAAE6F,QAAQ3F,iBAAkB,GAC5BF,EAAEwR,UAGDxR,EAAE6F,QAAQrF,WAEXR,EAAEiF,QAAS,EACXjF,EAAEkG,aAMVrG,EAAMoH,UAAUuK,QAAU,WACtB,GAAIxR,GAAIvC,IACRuC,GAAE+D,QAAQ2G,IAAI1K,EAAE8D,YAAYqD,KAAK,kBAAkBC,MAC/CC,cAAe,OACfC,SAAY,OACbH,KAAK,4BAA4BC,MAChCE,SAAY,OAGhBtH,EAAE8D,YAAYsD,KAAK,OAAQ,WAE3BpH,EAAE+D,QAAQgG,IAAI/J,EAAE8D,YAAYqD,KAAK,kBAAkBmB,KAAK,SAASvH,GAC7D5D,EAAEM,MAAM2J,MACJqK,KAAQ,SACRC,mBAAoB,cAAgB1R,EAAE6G,YAAc9F,MAI5C,OAAZf,EAAEsD,OACFtD,EAAEsD,MAAM8D,KAAK,OAAQ,WAAWD,KAAK,MAAMmB,KAAK,SAASvH,GACrD5D,EAAEM,MAAM2J,MACJqK,KAAQ,eACRE,gBAAiB,QACjBC,gBAAiB,aAAe5R,EAAE6G,YAAc9F,EAChD8Q,GAAM,cAAgB7R,EAAE6G,YAAc9F,MAGzCgK,QAAQ3D,KAAK,gBAAiB,QAAQ0K,MACtC3K,KAAK,UAAUC,KAAK,OAAQ,UAAU0K,MACtCnE,QAAQ,OAAOvG,KAAK,OAAQ,WAErCpH,EAAEkH,eAINrH,EAAMoH,UAAU8K,gBAAkB,WAE9B,GAAI/R,GAAIvC,IAEJuC,GAAE6F,QAAQpH,UAAW,GAAQuB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eACtDmB,EAAE2D,WACEwK,IAAI,eACJ3Q,GAAG,eACCoQ,QAAS,YACX5N,EAAEsG,aACRtG,EAAE0D,WACEyK,IAAI,eACJ3Q,GAAG,eACCoQ,QAAS,QACX5N,EAAEsG,eAKhBzG,EAAMoH,UAAU+K,cAAgB,WAE5B,GAAIhS,GAAIvC,IAEJuC,GAAE6F,QAAQnH,QAAS,GAAQsB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cACpD1B,EAAE,KAAM6C,EAAEsD,OAAO9F,GAAG,eAChBoQ,QAAS,SACV5N,EAAEsG,aAGJtG,EAAE6F,QAAQnH,QAAS,GAAQsB,EAAE6F,QAAQjE,oBAAqB,GAE3DzE,EAAE,KAAM6C,EAAEsD,OACL9F,GAAG,mBAAoBL,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,IAC/CxC,GAAG,mBAAoBL,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,KAM5DH,EAAMoH,UAAUgL,gBAAkB,WAE9B,GAAIjS,GAAIvC,IAEHuC,GAAE6F,QAAQnE,eAEX1B,EAAEmE,MAAM3G,GAAG,mBAAoBL,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,IACvDA,EAAEmE,MAAM3G,GAAG,mBAAoBL,EAAEgJ,MAAMnG,EAAEoO,UAAWpO,GAAG,MAM/DH,EAAMoH,UAAUqK,iBAAmB,WAE/B,GAAItR,GAAIvC,IAERuC,GAAE+R,kBAEF/R,EAAEgS,gBACFhS,EAAEiS,kBAEFjS,EAAEmE,MAAM3G,GAAG,oCACP0U,OAAQ,SACTlS,EAAE0G,cACL1G,EAAEmE,MAAM3G,GAAG,mCACP0U,OAAQ,QACTlS,EAAE0G,cACL1G,EAAEmE,MAAM3G,GAAG,gCACP0U,OAAQ,OACTlS,EAAE0G,cACL1G,EAAEmE,MAAM3G,GAAG,sCACP0U,OAAQ,OACTlS,EAAE0G,cAEL1G,EAAEmE,MAAM3G,GAAG,cAAewC,EAAEuG,cAE5BpJ,EAAE4I,UAAUvI,GAAGwC,EAAEyF,iBAAkBtI,EAAEgJ,MAAMnG,EAAEqO,WAAYrO,IAErDA,EAAE6F,QAAQ3F,iBAAkB,GAC5BF,EAAEmE,MAAM3G,GAAG,gBAAiBwC,EAAE4G,YAG9B5G,EAAE6F,QAAQvE,iBAAkB,GAC5BnE,EAAE6C,EAAE8D,aAAaqE,WAAW3K,GAAG,cAAewC,EAAEwG,eAGpDrJ,EAAEI,QAAQC,GAAG,iCAAmCwC,EAAE6G,YAAa1J,EAAEgJ,MAAMnG,EAAEuO,kBAAmBvO,IAE5F7C,EAAEI,QAAQC,GAAG,sBAAwBwC,EAAE6G,YAAa1J,EAAEgJ,MAAMnG,EAAEwO,OAAQxO,IAEtE7C,EAAE,oBAAqB6C,EAAE8D,aAAatG,GAAG,YAAawC,EAAE0N,gBAExDvQ,EAAEI,QAAQC,GAAG,oBAAsBwC,EAAE6G,YAAa7G,EAAEyG,aACpDtJ,EAAE4I,UAAUvI,GAAG,qBAAuBwC,EAAE6G,YAAa7G,EAAEyG,cAI3D5G,EAAMoH,UAAUkL,OAAS,WAErB,GAAInS,GAAIvC,IAEJuC,GAAE6F,QAAQpH,UAAW,GAAQuB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eAEtDmB,EAAE2D,WAAW7F,OACbkC,EAAE0D,WAAW5F,QAIbkC,EAAE6F,QAAQnH,QAAS,GAAQsB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAEpDmB,EAAEsD,MAAMxF,QAMhB+B,EAAMoH,UAAUL,WAAa,SAASuG,GAElC,GAAInN,GAAIvC,IAEJ0P,GAAMnD,OAAOoI,QAAQC,MAAM,2BACL,KAAlBlF,EAAMmF,SAAkBtS,EAAE6F,QAAQ3F,iBAAkB,EACpDF,EAAEsG,aACEV,MACIgI,QAAS5N,EAAE6F,QAAQ9D,OAAQ,EAAO,OAAU,cAG3B,KAAlBoL,EAAMmF,SAAkBtS,EAAE6F,QAAQ3F,iBAAkB,GAC3DF,EAAEsG,aACEV,MACIgI,QAAS5N,EAAE6F,QAAQ9D,OAAQ,EAAO,WAAa,YAQnElC,EAAMoH,UAAUzF,SAAW,WAKvB,QAAS+Q,GAAWC,GAEhBrV,EAAE,iBAAkBqV,GAAalK,KAAK,WAElC,GAAImK,GAAQtV,EAAEM,MACViV,EAAcvV,EAAEM,MAAM2J,KAAK,aAC3BuL,EAAc5M,SAASiG,cAAc,MAEzC2G,GAAYC,OAAS,WAEjBH,EACK9J,SAAUqG,QAAS,GAAK,IAAK,WAC1ByD,EACKrL,KAAK,MAAOsL,GACZ/J,SAAUqG,QAAS,GAAK,IAAK,WAC1ByD,EACKjI,WAAW,aACXlM,YAAY,mBAEzB0B,EAAEqF,QAAQ6H,QAAQ,cAAelN,EAAGyS,EAAOC,OAKvDC,EAAYE,QAAU,WAElBJ,EACKjI,WAAY,aACZlM,YAAa,iBACbiM,SAAU,wBAEfvK,EAAEqF,QAAQ6H,QAAQ,iBAAmBlN,EAAGyS,EAAOC,KAInDC,EAAYG,IAAMJ,IAtC1B,GACIK,GAAWC,EAAYC,EAAYC,EADnClT,EAAIvC,IA4CJuC,GAAE6F,QAAQnF,cAAe,EACrBV,EAAE6F,QAAQlH,YAAa,GACvBsU,EAAajT,EAAEoD,cAAgBpD,EAAE6F,QAAQhH,aAAe,EAAI,GAC5DqU,EAAWD,EAAajT,EAAE6F,QAAQhH,aAAe,IAEjDoU,EAAa1J,KAAK+G,IAAI,EAAGtQ,EAAEoD,cAAgBpD,EAAE6F,QAAQhH,aAAe,EAAI,IACxEqU,EAAW,GAAKlT,EAAE6F,QAAQhH,aAAe,EAAI,GAAKmB,EAAEoD,eAGxD6P,EAAajT,EAAE6F,QAAQlH,SAAWqB,EAAE6F,QAAQhH,aAAemB,EAAEoD,aAAepD,EAAEoD,aAC9E8P,EAAW3J,KAAKC,KAAKyJ,EAAajT,EAAE6F,QAAQhH,cACxCmB,EAAE6F,QAAQxE,QAAS,IACf4R,EAAa,GAAGA,IAChBC,GAAYlT,EAAE4D,YAAYsP,MAItCH,EAAY/S,EAAEqF,QAAQ8B,KAAK,gBAAgBgM,MAAMF,EAAYC,GAC7DX,EAAWQ,GAEP/S,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAC1BmU,EAAahT,EAAEqF,QAAQ8B,KAAK,gBAC5BoL,EAAWS,IAEXhT,EAAEoD,cAAgBpD,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAC3CmU,EAAahT,EAAEqF,QAAQ8B,KAAK,iBAAiBgM,MAAM,EAAGnT,EAAE6F,QAAQhH,cAChE0T,EAAWS,IACe,IAAnBhT,EAAEoD,eACT4P,EAAahT,EAAEqF,QAAQ8B,KAAK,iBAAiBgM,MAAMnT,EAAE6F,QAAQhH,iBAC7D0T,EAAWS,KAKnBnT,EAAMoH,UAAUoK,WAAa,WAEzB,GAAIrR,GAAIvC,IAERuC,GAAEyG,cAEFzG,EAAE8D,YAAY2F,KACVuF,QAAS,IAGbhP,EAAEqF,QAAQ/G,YAAY,iBAEtB0B,EAAEmS,SAEyB,gBAAvBnS,EAAE6F,QAAQrE,UACVxB,EAAEoT,uBAKVvT,EAAMoH,UAAUoM,KAAOxT,EAAMoH,UAAUqM,UAAY,WAE/C,GAAItT,GAAIvC,IAERuC,GAAEsG,aACEV,MACIgI,QAAS,WAMrB/N,EAAMoH,UAAUsH,kBAAoB,WAEhC,GAAIvO,GAAIvC,IAERuC,GAAEsM,kBACFtM,EAAEyG,eAIN5G,EAAMoH,UAAUsM,MAAQ1T,EAAMoH,UAAUuM,WAAa,WAEjD,GAAIxT,GAAIvC,IAERuC,GAAEoG,gBACFpG,EAAEiF,QAAS,GAIfpF,EAAMoH,UAAUwM,KAAO5T,EAAMoH,UAAUyM,UAAY,WAE/C,GAAI1T,GAAIvC,IAERuC,GAAEkG,WACFlG,EAAE6F,QAAQrF,UAAW,EACrBR,EAAEiF,QAAS,EACXjF,EAAE8E,UAAW,EACb9E,EAAE+E,aAAc,GAIpBlF,EAAMoH,UAAU0M,UAAY,SAASjM,GAEjC,GAAI1H,GAAIvC,IAEHuC,GAAEsE,YAEHtE,EAAEqF,QAAQ6H,QAAQ,eAAgBlN,EAAG0H,IAErC1H,EAAE+C,WAAY,EAEd/C,EAAEyG,cAEFzG,EAAEkE,UAAY,KAETlE,EAAE6F,QAAQrF,UACXR,EAAEkG,WAGFlG,EAAE6F,QAAQ3F,iBAAkB,GAC5BF,EAAEwR,YAOd3R,EAAMoH,UAAU2M,KAAO/T,EAAMoH,UAAU4M,UAAY,WAE/C,GAAI7T,GAAIvC,IAERuC,GAAEsG,aACEV,MACIgI,QAAS,eAMrB/N,EAAMoH,UAAUyG,eAAiB,SAASP,GAEtCA,EAAMO,kBAIV7N,EAAMoH,UAAUmM,oBAAsB,SAAUU,GAE5CA,EAAWA,GAAY,CAEvB,IAEIrB,GACAC,EACAC,EAJA3S,EAAIvC,KACJsW,EAAc5W,EAAG,iBAAkB6C,EAAEqF,QAKpC0O,GAAYlM,QAEb4K,EAAQsB,EAAYhJ,QACpB2H,EAAcD,EAAMrL,KAAK,aACzBuL,EAAc5M,SAASiG,cAAc,OAErC2G,EAAYC,OAAS,WAEjBH,EACKrL,KAAM,MAAOsL,GACblI,WAAW,aACXlM,YAAY,iBAEZ0B,EAAE6F,QAAQ/G,kBAAmB,GAC9BkB,EAAEyG,cAGNzG,EAAEqF,QAAQ6H,QAAQ,cAAgBlN,EAAGyS,EAAOC,IAC5C1S,EAAEoT,uBAINT,EAAYE,QAAU,WAEbiB,EAAW,EAOZ3V,WAAY,WACR6B,EAAEoT,oBAAqBU,EAAW,IACnC,MAIHrB,EACKjI,WAAY,aACZlM,YAAa,iBACbiM,SAAU,wBAEfvK,EAAEqF,QAAQ6H,QAAQ,iBAAmBlN,EAAGyS,EAAOC,IAE/C1S,EAAEoT,wBAMVT,EAAYG,IAAMJ,GAIlB1S,EAAEqF,QAAQ6H,QAAQ,mBAAqBlN,KAM/CH,EAAMoH,UAAUgG,QAAU,SAAU+G,GAEhC,GAAc5Q,GAAc6Q,EAAxBjU,EAAIvC,IAERwW,GAAmBjU,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAIvCmB,EAAE6F,QAAQlH,UAAcqB,EAAEoD,aAAe6Q,IAC1CjU,EAAEoD,aAAe6Q,GAIhBjU,EAAE4D,YAAc5D,EAAE6F,QAAQhH,eAC3BmB,EAAEoD,aAAe,GAIrBA,EAAepD,EAAEoD,aAEjBpD,EAAE4O,SAAQ,GAEVzR,EAAEoH,OAAOvE,EAAGA,EAAE8C,UAAYM,aAAcA,IAExCpD,EAAEgH,OAEGgN,GAEDhU,EAAEsG,aACEV,MACIgI,QAAS,QACTlG,MAAOtE,KAEZ,IAMXvD,EAAMoH,UAAUF,oBAAsB,WAElC,GAAc/H,GAAYkV,EAAmBC,EAAzCnU,EAAIvC,KACJ2W,EAAqBpU,EAAE6F,QAAQ9G,YAAc,IAEjD,IAAoC,UAA/B5B,EAAEkX,KAAKD,IAAmCA,EAAmBvM,OAAS,CAEvE7H,EAAE6B,UAAY7B,EAAE6F,QAAQhE,WAAa,QAErC,KAAM7C,IAAcoV,GAKhB,GAHAD,EAAInU,EAAE2E,YAAYkD,OAAO,EACzBqM,EAAoBE,EAAmBpV,GAAYA,WAE/CoV,EAAmBrH,eAAe/N,GAAa,CAI/C,KAAOmV,GAAK,GACJnU,EAAE2E,YAAYwP,IAAMnU,EAAE2E,YAAYwP,KAAOD,GACzClU,EAAE2E,YAAY2P,OAAOH,EAAE,GAE3BA,GAGJnU,GAAE2E,YAAY6L,KAAK0D,GACnBlU,EAAE4E,mBAAmBsP,GAAqBE,EAAmBpV,GAAYC,SAMjFe,EAAE2E,YAAY4P,KAAK,SAAS/I,EAAGC,GAC3B,MAASzL,GAAE6F,QAAQpE,YAAgB+J,EAAEC,EAAIA,EAAED,MAOvD3L,EAAMoH,UAAUsB,OAAS,WAErB,GAAIvI,GAAIvC,IAERuC,GAAE+D,QACE/D,EAAE8D,YACGqE,SAASnI,EAAE6F,QAAQ7D,OACnBuI,SAAS,eAElBvK,EAAE4D,WAAa5D,EAAE+D,QAAQ8D,OAErB7H,EAAEoD,cAAgBpD,EAAE4D,YAAiC,IAAnB5D,EAAEoD,eACpCpD,EAAEoD,aAAepD,EAAEoD,aAAepD,EAAE6F,QAAQ3D,gBAG5ClC,EAAE4D,YAAc5D,EAAE6F,QAAQhH,eAC1BmB,EAAEoD,aAAe,GAGrBpD,EAAE+G,sBAEF/G,EAAEmR,WACFnR,EAAEoL,gBACFpL,EAAEsK,cACFtK,EAAEuR,eACFvR,EAAE+R,kBACF/R,EAAE4K,YACF5K,EAAEqL,aACFrL,EAAEgS,gBACFhS,EAAEsO,qBACFtO,EAAEiS,kBAEFjS,EAAEsM,iBAAgB,GAAO,GAErBtM,EAAE6F,QAAQvE,iBAAkB,GAC5BnE,EAAE6C,EAAE8D,aAAaqE,WAAW3K,GAAG,cAAewC,EAAEwG,eAGpDxG,EAAEsL,gBAA0C,gBAAnBtL,GAAEoD,aAA4BpD,EAAEoD,aAAe,GAExEpD,EAAEyG,cACFzG,EAAEqP,eAEFrP,EAAEiF,QAAUjF,EAAE6F,QAAQrF,SACtBR,EAAEkG,WAEFlG,EAAEqF,QAAQ6H,QAAQ,UAAWlN,KAIjCH,EAAMoH,UAAUuH,OAAS,WAErB,GAAIxO,GAAIvC,IAEJN,GAAEI,QAAQG,UAAYsC,EAAE0F,cACxB7H,aAAamC,EAAEwU,aACfxU,EAAEwU,YAAcjX,OAAOY,WAAW,WAC9B6B,EAAE0F,YAAcvI,EAAEI,QAAQG,QAC1BsC,EAAEsM,kBACGtM,EAAEsE,WAActE,EAAEyG,eACxB,MAIX5G,EAAMoH,UAAUwN,YAAc5U,EAAMoH,UAAUyN,YAAc,SAAShN,EAAOiN,EAAcC,GAEtF,GAAI5U,GAAIvC,IASR,OAPsB,iBAAXiK,IACPiN,EAAejN,EACfA,EAAQiN,KAAiB,EAAO,EAAI3U,EAAE4D,WAAa,GAEnD8D,EAAQiN,KAAiB,IAASjN,EAAQA,IAG1C1H,EAAE4D,WAAa,GAAK8D,EAAQ,GAAKA,EAAQ1H,EAAE4D,WAAa,KAI5D5D,EAAE4H,SAEEgN,KAAc,EACd5U,EAAE8D,YAAYqE,WAAW0G,SAEzB7O,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOgG,GAAGN,GAAOmH,SAGzD7O,EAAE+D,QAAU/D,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAEhDhC,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOoG,SAE3CpI,EAAE8D,YAAYuE,OAAOrI,EAAE+D,SAEvB/D,EAAEsF,aAAetF,EAAE+D,YAEnB/D,GAAEuI,WAIN1I,EAAMoH,UAAU4N,OAAS,SAASC,GAE9B,GAEIC,GAAGC,EAFHhV,EAAIvC,KACJwX,IAGAjV,GAAE6F,QAAQ9D,OAAQ,IAClB+S,GAAYA,GAEhBC,EAAsB,QAAlB/U,EAAEkF,aAAyBqE,KAAKC,KAAKsL,GAAY,KAAO,MAC5DE,EAAsB,OAAlBhV,EAAEkF,aAAwBqE,KAAKC,KAAKsL,GAAY,KAAO,MAE3DG,EAAcjV,EAAEkF,cAAgB4P,EAE5B9U,EAAEqE,qBAAsB,EACxBrE,EAAE8D,YAAY2F,IAAIwL,IAElBA,KACIjV,EAAE6E,kBAAmB,GACrBoQ,EAAcjV,EAAEyE,UAAY,aAAesQ,EAAI,KAAOC,EAAI,IAC1DhV,EAAE8D,YAAY2F,IAAIwL,KAElBA,EAAcjV,EAAEyE,UAAY,eAAiBsQ,EAAI,KAAOC,EAAI,SAC5DhV,EAAE8D,YAAY2F,IAAIwL,MAM9BpV,EAAMoH,UAAUiO,cAAgB,WAE5B,GAAIlV,GAAIvC,IAEJuC,GAAE6F,QAAQnD,YAAa,EACnB1C,EAAE6F,QAAQnF,cAAe,GACzBV,EAAEmE,MAAMsF,KACJ0L,QAAU,OAASnV,EAAE6F,QAAQlF,iBAIrCX,EAAEmE,MAAMyE,OAAO5I,EAAE+D,QAAQgH,QAAQrC,aAAY,GAAQ1I,EAAE6F,QAAQhH,cAC3DmB,EAAE6F,QAAQnF,cAAe,GACzBV,EAAEmE,MAAMsF,KACJ0L,QAAUnV,EAAE6F,QAAQlF,cAAgB,UAKhDX,EAAEuD,UAAYvD,EAAEmE,MAAMzG,QACtBsC,EAAEwD,WAAaxD,EAAEmE,MAAMyE,SAGnB5I,EAAE6F,QAAQnD,YAAa,GAAS1C,EAAE6F,QAAQpD,iBAAkB,GAC5DzC,EAAE6D,WAAa0F,KAAKC,KAAKxJ,EAAEuD,UAAYvD,EAAE6F,QAAQhH,cACjDmB,EAAE8D,YAAYpG,MAAM6L,KAAKC,KAAMxJ,EAAE6D,WAAa7D,EAAE8D,YAAYqE,SAAS,gBAAgBN,UAE9E7H,EAAE6F,QAAQpD,iBAAkB,EACnCzC,EAAE8D,YAAYpG,MAAM,IAAOsC,EAAE4D,aAE7B5D,EAAE6D,WAAa0F,KAAKC,KAAKxJ,EAAEuD,WAC3BvD,EAAE8D,YAAY8E,OAAOW,KAAKC,KAAMxJ,EAAE+D,QAAQgH,QAAQrC,aAAY,GAAQ1I,EAAE8D,YAAYqE,SAAS,gBAAgBN,SAGjH,IAAIuN,GAASpV,EAAE+D,QAAQgH,QAAQmF,YAAW,GAAQlQ,EAAE+D,QAAQgH,QAAQrN,OAChEsC,GAAE6F,QAAQpD,iBAAkB,GAAOzC,EAAE8D,YAAYqE,SAAS,gBAAgBzK,MAAMsC,EAAE6D,WAAauR,IAIvGvV,EAAMoH,UAAUoO,QAAU,WAEtB,GACIvM,GADA9I,EAAIvC,IAGRuC,GAAE+D,QAAQuE,KAAK,SAASZ,EAAO5H,GAC3BgJ,EAAc9I,EAAE6D,WAAa6D,KACzB1H,EAAE6F,QAAQ9D,OAAQ,EAClB5E,EAAE2C,GAAS2J,KACPqL,SAAU,WACVQ,MAAOxM,EACPI,IAAK,EACLrG,OAAQ7C,EAAE6F,QAAQhD,OAAS,EAC3BmM,QAAS,IAGb7R,EAAE2C,GAAS2J,KACPqL,SAAU,WACV7L,KAAMH,EACNI,IAAK,EACLrG,OAAQ7C,EAAE6F,QAAQhD,OAAS,EAC3BmM,QAAS,MAKrBhP,EAAE+D,QAAQiE,GAAGhI,EAAEoD,cAAcqG,KACzB5G,OAAQ7C,EAAE6F,QAAQhD,OAAS,EAC3BmM,QAAS,KAKjBnP,EAAMoH,UAAUsO,UAAY,WAExB,GAAIvV,GAAIvC,IAER,IAA+B,IAA3BuC,EAAE6F,QAAQhH,cAAsBmB,EAAE6F,QAAQ/G,kBAAmB,GAAQkB,EAAE6F,QAAQnD,YAAa,EAAO,CACnG,GAAI+F,GAAezI,EAAE+D,QAAQiE,GAAGhI,EAAEoD,cAAcsF,aAAY,EAC5D1I,GAAEmE,MAAMsF,IAAI,SAAUhB,KAK9B5I,EAAMoH,UAAUuO,UAChB3V,EAAMoH,UAAUwO,eAAiB,WAe7B,GAActB,GAAGuB,EAAMrF,EAAQsF,EAAwBtB,EAAnDrU,EAAIvC,KAA8BwP,GAAU,CA0BhD,IAxB+B,WAA3B9P,EAAEkX,KAAMuB,UAAU,KAElBvF,EAAUuF,UAAU,GACpB3I,EAAU2I,UAAU,GACpBvB,EAAO,YAE4B,WAA3BlX,EAAEkX,KAAMuB,UAAU,MAE1BvF,EAAUuF,UAAU,GACpBD,EAAQC,UAAU,GAClB3I,EAAU2I,UAAU,GAEE,eAAjBA,UAAU,IAAkD,UAA3BzY,EAAEkX,KAAMuB,UAAU,IAEpDvB,EAAO,aAEyB,mBAAjBuB,WAAU,KAEzBvB,EAAO,WAMD,WAATA,EAEDrU,EAAE6F,QAAQwK,GAAUsF,MAGjB,IAAc,aAATtB,EAERlX,EAAEmL,KAAM+H,EAAS,SAAUwF,EAAKC,GAE5B9V,EAAE6F,QAAQgQ,GAAOC,QAKlB,IAAc,eAATzB,EAER,IAAMqB,IAAQC,GAEV,GAAuC,UAAnCxY,EAAEkX,KAAMrU,EAAE6F,QAAQ9G,YAElBiB,EAAE6F,QAAQ9G,YAAe4W,EAAMD,QAE5B,CAKH,IAHAvB,EAAInU,EAAE6F,QAAQ9G,WAAW8I,OAAO,EAGzBsM,GAAK,GAEJnU,EAAE6F,QAAQ9G,WAAWoV,GAAGnV,aAAe2W,EAAMD,GAAM1W,YAEnDgB,EAAE6F,QAAQ9G,WAAWuV,OAAOH,EAAE,GAIlCA,GAIJnU,GAAE6F,QAAQ9G,WAAWyR,KAAMmF,EAAMD,IAQxCzI,IAEDjN,EAAE4H,SACF5H,EAAEuI,WAMV1I,EAAMoH,UAAUR,YAAc,WAE1B,GAAIzG,GAAIvC,IAERuC,GAAEkV,gBAEFlV,EAAEuV,YAEEvV,EAAE6F,QAAQxE,QAAS,EACnBrB,EAAE6U,OAAO7U,EAAE4P,QAAQ5P,EAAEoD,eAErBpD,EAAEqV,UAGNrV,EAAEqF,QAAQ6H,QAAQ,eAAgBlN,KAItCH,EAAMoH,UAAUkK,SAAW,WAEvB,GAAInR,GAAIvC,KACJsY,EAAYhQ,SAASiQ,KAAKC,KAE9BjW,GAAEkF,aAAelF,EAAE6F,QAAQnD,YAAa,EAAO,MAAQ,OAEhC,QAAnB1C,EAAEkF,aACFlF,EAAEqF,QAAQkF,SAAS,kBAEnBvK,EAAEqF,QAAQ/G,YAAY,kBAGSsB,SAA/BmW,EAAUG,kBACkBtW,SAA5BmW,EAAUI,eACiBvW,SAA3BmW,EAAUK,cACNpW,EAAE6F,QAAQtD,UAAW,IACrBvC,EAAE6E,gBAAiB,GAItB7E,EAAE6F,QAAQxE,OACsB,gBAArBrB,GAAE6F,QAAQhD,OACd7C,EAAE6F,QAAQhD,OAAS,IACnB7C,EAAE6F,QAAQhD,OAAS,GAGvB7C,EAAE6F,QAAQhD,OAAS7C,EAAEC,SAAS4C,QAITjD,SAAzBmW,EAAUM,aACVrW,EAAEyE,SAAW,aACbzE,EAAEuF,cAAgB,eAClBvF,EAAEwF,eAAiB,cACmB5F,SAAlCmW,EAAUO,qBAAqE1W,SAAhCmW,EAAUQ,oBAAiCvW,EAAEyE,UAAW,IAEhF7E,SAA3BmW,EAAUS,eACVxW,EAAEyE,SAAW,eACbzE,EAAEuF,cAAgB;AAClBvF,EAAEwF,eAAiB,gBACmB5F,SAAlCmW,EAAUO,qBAAkE1W,SAA7BmW,EAAUU,iBAA8BzW,EAAEyE,UAAW,IAE1E7E,SAA9BmW,EAAUW,kBACV1W,EAAEyE,SAAW,kBACbzE,EAAEuF,cAAgB,oBAClBvF,EAAEwF,eAAiB,mBACmB5F,SAAlCmW,EAAUO,qBAAqE1W,SAAhCmW,EAAUQ,oBAAiCvW,EAAEyE,UAAW,IAEjF7E,SAA1BmW,EAAUY,cACV3W,EAAEyE,SAAW,cACbzE,EAAEuF,cAAgB,gBAClBvF,EAAEwF,eAAiB,eACW5F,SAA1BmW,EAAUY,cAA2B3W,EAAEyE,UAAW,IAE9B7E,SAAxBmW,EAAUa,WAA2B5W,EAAEyE,YAAa,IACpDzE,EAAEyE,SAAW,YACbzE,EAAEuF,cAAgB,YAClBvF,EAAEwF,eAAiB,cAEvBxF,EAAEqE,kBAAoBrE,EAAE6F,QAAQrD,cAAgC,OAAfxC,EAAEyE,UAAqBzE,EAAEyE,YAAa,GAI3F5E,EAAMoH,UAAUqE,gBAAkB,SAAS5D,GAEvC,GACImJ,GAAcgG,EAAWxJ,EAAayJ,EADtC9W,EAAIvC,IAGRoZ,GAAY7W,EAAEqF,QACT8B,KAAK,gBACL7I,YAAY,2CACZ8I,KAAK,cAAe,QAEzBpH,EAAE+D,QACGiE,GAAGN,GACH6C,SAAS,iBAEVvK,EAAE6F,QAAQnF,cAAe,GAEzBmQ,EAAetH,KAAKyG,MAAMhQ,EAAE6F,QAAQhH,aAAe,GAE/CmB,EAAE6F,QAAQlH,YAAa,IAEnB+I,GAASmJ,GAAgBnJ,GAAU1H,EAAE4D,WAAa,EAAKiN,EAEvD7Q,EAAE+D,QACGoP,MAAMzL,EAAQmJ,EAAcnJ,EAAQmJ,EAAe,GACnDtG,SAAS,gBACTnD,KAAK,cAAe,UAIzBiG,EAAcrN,EAAE6F,QAAQhH,aAAe6I,EACvCmP,EACK1D,MAAM9F,EAAcwD,EAAe,EAAGxD,EAAcwD,EAAe,GACnEtG,SAAS,gBACTnD,KAAK,cAAe,UAIf,IAAVM,EAEAmP,EACK7O,GAAG6O,EAAUhP,OAAS,EAAI7H,EAAE6F,QAAQhH,cACpC0L,SAAS,gBAEP7C,IAAU1H,EAAE4D,WAAa,GAEhCiT,EACK7O,GAAGhI,EAAE6F,QAAQhH,cACb0L,SAAS,iBAMtBvK,EAAE+D,QACGiE,GAAGN,GACH6C,SAAS,iBAIV7C,GAAS,GAAKA,GAAU1H,EAAE4D,WAAa5D,EAAE6F,QAAQhH,aAEjDmB,EAAE+D,QACGoP,MAAMzL,EAAOA,EAAQ1H,EAAE6F,QAAQhH,cAC/B0L,SAAS,gBACTnD,KAAK,cAAe,SAElByP,EAAUhP,QAAU7H,EAAE6F,QAAQhH,aAErCgY,EACKtM,SAAS,gBACTnD,KAAK,cAAe,UAIzB0P,EAAY9W,EAAE4D,WAAa5D,EAAE6F,QAAQhH,aACrCwO,EAAcrN,EAAE6F,QAAQlH,YAAa,EAAOqB,EAAE6F,QAAQhH,aAAe6I,EAAQA,EAEzE1H,EAAE6F,QAAQhH,cAAgBmB,EAAE6F,QAAQ3D,gBAAmBlC,EAAE4D,WAAa8D,EAAS1H,EAAE6F,QAAQhH,aAEzFgY,EACK1D,MAAM9F,GAAerN,EAAE6F,QAAQhH,aAAeiY,GAAYzJ,EAAcyJ,GACxEvM,SAAS,gBACTnD,KAAK,cAAe,SAIzByP,EACK1D,MAAM9F,EAAaA,EAAcrN,EAAE6F,QAAQhH,cAC3C0L,SAAS,gBACTnD,KAAK,cAAe,UAQV,aAAvBpH,EAAE6F,QAAQrE,UACVxB,EAAEwB,YAKV3B,EAAMoH,UAAUmE,cAAgB,WAE5B,GACIrK,GAAGgO,EAAYgI,EADf/W,EAAIvC,IAOR,IAJIuC,EAAE6F,QAAQxE,QAAS,IACnBrB,EAAE6F,QAAQnF,YAAa,GAGvBV,EAAE6F,QAAQlH,YAAa,GAAQqB,EAAE6F,QAAQxE,QAAS,IAElD0N,EAAa,KAET/O,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAAc,CAQvC,IALIkY,EADA/W,EAAE6F,QAAQnF,cAAe,EACTV,EAAE6F,QAAQhH,aAAe,EAEzBmB,EAAE6F,QAAQhH,aAGzBkC,EAAIf,EAAE4D,WAAY7C,EAAKf,EAAE4D,WACtBmT,EAAgBhW,GAAK,EACzBgO,EAAahO,EAAI,EACjB5D,EAAE6C,EAAE+D,QAAQgL,IAAaiI,OAAM,GAAM5P,KAAK,KAAM,IAC3CA,KAAK,mBAAoB2H,EAAa/O,EAAE4D,YACxCsE,UAAUlI,EAAE8D,aAAayG,SAAS,eAE3C,KAAKxJ,EAAI,EAAGA,EAAIgW,EAAehW,GAAK,EAChCgO,EAAahO,EACb5D,EAAE6C,EAAE+D,QAAQgL,IAAaiI,OAAM,GAAM5P,KAAK,KAAM,IAC3CA,KAAK,mBAAoB2H,EAAa/O,EAAE4D,YACxCkE,SAAS9H,EAAE8D,aAAayG,SAAS,eAE1CvK,GAAE8D,YAAYqD,KAAK,iBAAiBA,KAAK,QAAQmB,KAAK,WAClDnL,EAAEM,MAAM2J,KAAK,KAAM,QASnCvH,EAAMoH,UAAUmH,UAAY,SAAU6I,GAElC,GAAIjX,GAAIvC,IAEHwZ,IACDjX,EAAEkG,WAENlG,EAAE+E,YAAckS,GAIpBpX,EAAMoH,UAAUT,cAAgB,SAAS2G,GAErC,GAAInN,GAAIvC,KAEJyZ,EACA/Z,EAAEgQ,EAAMnD,QAAQyD,GAAG,gBACftQ,EAAEgQ,EAAMnD,QACR7M,EAAEgQ,EAAMnD,QAAQmN,QAAQ,gBAE5BzP,EAAQuJ,SAASiG,EAAc9P,KAAK,oBAIxC,OAFKM,KAAOA,EAAQ,GAEhB1H,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAE1BmB,EAAEsL,gBAAgB5D,OAClB1H,GAAEK,SAASqH,QAKf1H,GAAEiK,aAAavC,IAInB7H,EAAMoH,UAAUgD,aAAe,SAASvC,EAAO0P,EAAMhK,GAEjD,GAAI0C,GAAauH,EAAWC,EAAUC,EACxBC,EADmC1O,EAAa,KAC1D9I,EAAIvC,IAIR,IAFA2Z,EAAOA,IAAQ,GAEXpX,EAAE+C,aAAc,GAAQ/C,EAAE6F,QAAQjD,kBAAmB,MAIrD5C,EAAE6F,QAAQxE,QAAS,GAAQrB,EAAEoD,eAAiBsE,GAI9C1H,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAc9B,MAVIuY,MAAS,GACTpX,EAAEK,SAASqH,GAGfoI,EAAcpI,EACdoB,EAAa9I,EAAE4P,QAAQE,GACvByH,EAAYvX,EAAE4P,QAAQ5P,EAAEoD,cAExBpD,EAAEmD,YAA8B,OAAhBnD,EAAEkE,UAAqBqT,EAAYvX,EAAEkE,UAEjDlE,EAAE6F,QAAQlH,YAAa,GAASqB,EAAE6F,QAAQnF,cAAe,IAAUgH,EAAQ,GAAKA,EAAQ1H,EAAE8K,cAAgB9K,EAAE6F,QAAQ3D,qBAChHlC,EAAE6F,QAAQxE,QAAS,IACnByO,EAAc9P,EAAEoD,aACZgK,KAAgB,EAChBpN,EAAE6I,aAAa0O,EAAW,WACtBvX,EAAE2T,UAAU7D,KAGhB9P,EAAE2T,UAAU7D,KAIb9P,EAAE6F,QAAQlH,YAAa,GAASqB,EAAE6F,QAAQnF,cAAe,IAASgH,EAAQ,GAAKA,EAAS1H,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,qBACpHlC,EAAE6F,QAAQxE,QAAS,IACnByO,EAAc9P,EAAEoD,aACZgK,KAAgB,EAChBpN,EAAE6I,aAAa0O,EAAW,WACtBvX,EAAE2T,UAAU7D,KAGhB9P,EAAE2T,UAAU7D,MAMnB9P,EAAE6F,QAAQrF,UACX4J,cAAcpK,EAAEiD,eAKZoU,EAFJvH,EAAc,EACV9P,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,iBAAmB,EAChClC,EAAE4D,WAAc5D,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,eAEzClC,EAAE4D,WAAakM,EAExBA,GAAe9P,EAAE4D,WACpB5D,EAAE4D,WAAa5D,EAAE6F,QAAQ3D,iBAAmB,EAChC,EAEA4N,EAAc9P,EAAE4D,WAGpBkM,EAGhB9P,EAAE+C,WAAY,EAEd/C,EAAEqF,QAAQ6H,QAAQ,gBAAiBlN,EAAGA,EAAEoD,aAAciU,IAEtDC,EAAWtX,EAAEoD,aACbpD,EAAEoD,aAAeiU,EAEjBrX,EAAEsL,gBAAgBtL,EAAEoD,cAEfpD,EAAE6F,QAAQxF,WAEXmX,EAAYxX,EAAE8J,eACd0N,EAAYA,EAAUhZ,MAAM,YAEvBgZ,EAAU5T,YAAc4T,EAAU3R,QAAQhH,cAC3C2Y,EAAUlM,gBAAgBtL,EAAEoD,eAKpCpD,EAAEqL,aACFrL,EAAEuR,eAEEvR,EAAE6F,QAAQxE,QAAS,GACf+L,KAAgB,GAEhBpN,EAAEiP,aAAaqI,GAEftX,EAAE8O,UAAUuI,EAAW,WACnBrX,EAAE2T,UAAU0D,MAIhBrX,EAAE2T,UAAU0D,OAEhBrX,GAAEwI,sBAIF4E,KAAgB,EAChBpN,EAAE6I,aAAaC,EAAY,WACvB9I,EAAE2T,UAAU0D,KAGhBrX,EAAE2T,UAAU0D,MAKpBxX,EAAMoH,UAAUmK,UAAY,WAExB,GAAIpR,GAAIvC,IAEJuC,GAAE6F,QAAQpH,UAAW,GAAQuB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eAEtDmB,EAAE2D,WAAW8T,OACbzX,EAAE0D,WAAW+T,QAIbzX,EAAE6F,QAAQnH,QAAS,GAAQsB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAEpDmB,EAAEsD,MAAMmU,OAIZzX,EAAEqF,QAAQkF,SAAS,kBAIvB1K,EAAMoH,UAAUyQ,eAAiB,WAE7B,GAAIC,GAAOC,EAAOC,EAAGC,EAAY9X,EAAIvC,IAWrC,OATAka,GAAQ3X,EAAEoE,YAAY2T,OAAS/X,EAAEoE,YAAY4T,KAC7CJ,EAAQ5X,EAAEoE,YAAY6T,OAASjY,EAAEoE,YAAY8T,KAC7CL,EAAItO,KAAK4O,MAAMP,EAAOD,GAEtBG,EAAavO,KAAK6O,MAAU,IAAJP,EAAUtO,KAAK8O,IACnCP,EAAa,IACbA,EAAa,IAAMvO,KAAKuH,IAAIgH,IAG3BA,GAAc,IAAQA,GAAc,EAC7B9X,EAAE6F,QAAQ9D,OAAQ,EAAQ,OAAS,QAE1C+V,GAAc,KAASA,GAAc,IAC9B9X,EAAE6F,QAAQ9D,OAAQ,EAAQ,OAAS,QAE1C+V,GAAc,KAASA,GAAc,IAC9B9X,EAAE6F,QAAQ9D,OAAQ,EAAQ,QAAU,OAE5C/B,EAAE6F,QAAQlD,mBAAoB,EACzBmV,GAAc,IAAQA,GAAc,IAC9B,OAEA,KAIR,YAIXjY,EAAMoH,UAAUqR,SAAW,SAASnL,GAEhC,GACIvJ,GACAP,EAFArD,EAAIvC,IAQR,IAJAuC,EAAEgD,UAAW,EACbhD,EAAE+E,aAAc,EAChB/E,EAAEoF,cAAgBpF,EAAEoE,YAAYmU,YAAc,IAElB3Y,SAAvBI,EAAEoE,YAAY4T,KACf,OAAO,CAOX,IAJKhY,EAAEoE,YAAYoU,WAAY,GAC3BxY,EAAEqF,QAAQ6H,QAAQ,QAASlN,EAAGA,EAAE0X,mBAG/B1X,EAAEoE,YAAYmU,aAAevY,EAAEoE,YAAYqU,SAAW,CAIvD,OAFApV,EAAYrD,EAAE0X,kBAIV,IAAK,OACL,IAAK,OAED9T,EACI5D,EAAE6F,QAAQzD,aACNpC,EAAE6N,eAAgB7N,EAAEoD,aAAepD,EAAE0Q,iBACrC1Q,EAAEoD,aAAepD,EAAE0Q,gBAE3B1Q,EAAEkD,iBAAmB,CAErB,MAEJ,KAAK,QACL,IAAK,KAEDU,EACI5D,EAAE6F,QAAQzD,aACNpC,EAAE6N,eAAgB7N,EAAEoD,aAAepD,EAAE0Q,iBACrC1Q,EAAEoD,aAAepD,EAAE0Q,gBAE3B1Q,EAAEkD,iBAAmB,EASZ,YAAbG,IAEArD,EAAEiK,aAAcrG,GAChB5D,EAAEoE,eACFpE,EAAEqF,QAAQ6H,QAAQ,SAAUlN,EAAGqD,SAM9BrD,GAAEoE,YAAY2T,SAAW/X,EAAEoE,YAAY4T,OAExChY,EAAEiK,aAAcjK,EAAEoD,cAClBpD,EAAEoE,iBAQdvE,EAAMoH,UAAUP,aAAe,SAASyG,GAEpC,GAAInN,GAAIvC,IAER,MAAKuC,EAAE6F,QAAQ1D,SAAU,GAAW,cAAgB4D,WAAY/F,EAAE6F,QAAQ1D,SAAU,GAEzEnC,EAAE6F,QAAQ3E,aAAc,GAASiM,EAAMkH,KAAKqE,QAAQ,eAe/D,OAXA1Y,EAAEoE,YAAYuU,YAAcxL,EAAMyL,eAAiDhZ,SAAhCuN,EAAMyL,cAAcC,QACnE1L,EAAMyL,cAAcC,QAAQhR,OAAS,EAEzC7H,EAAEoE,YAAYqU,SAAWzY,EAAEuD,UAAYvD,EAAE6F,QACpCvD,eAEDtC,EAAE6F,QAAQlD,mBAAoB,IAC9B3C,EAAEoE,YAAYqU,SAAWzY,EAAEwD,WAAaxD,EAAE6F,QACrCvD,gBAGD6K,EAAMvH,KAAKsM,QAEf,IAAK,QACDlS,EAAE8Y,WAAW3L,EACb,MAEJ,KAAK,OACDnN,EAAE+Y,UAAU5L,EACZ,MAEJ,KAAK,MACDnN,EAAEsY,SAASnL,KAOvBtN,EAAMoH,UAAU8R,UAAY,SAAS5L,GAEjC,GAEI6L,GAAStB,EAAgBa,EAAaU,EAAgBJ,EAFtD7Y,EAAIvC,IAMR,OAFAob,GAAkCjZ,SAAxBuN,EAAMyL,cAA8BzL,EAAMyL,cAAcC,QAAU,QAEvE7Y,EAAEgD,UAAY6V,GAA8B,IAAnBA,EAAQhR,UAItCmR,EAAUhZ,EAAE4P,QAAQ5P,EAAEoD,cAEtBpD,EAAEoE,YAAY4T,KAAmBpY,SAAZiZ,EAAwBA,EAAQ,GAAGK,MAAQ/L,EAAMgM,QACtEnZ,EAAEoE,YAAY8T,KAAmBtY,SAAZiZ,EAAwBA,EAAQ,GAAGO,MAAQjM,EAAMkM,QAEtErZ,EAAEoE,YAAYmU,YAAchP,KAAK6O,MAAM7O,KAAK+P,KACxC/P,KAAKgQ,IAAIvZ,EAAEoE,YAAY4T,KAAOhY,EAAEoE,YAAY2T,OAAQ,KAEpD/X,EAAE6F,QAAQlD,mBAAoB,IAC9B3C,EAAEoE,YAAYmU,YAAchP,KAAK6O,MAAM7O,KAAK+P,KACxC/P,KAAKgQ,IAAIvZ,EAAEoE,YAAY8T,KAAOlY,EAAEoE,YAAY6T,OAAQ,MAG5DP,EAAiB1X,EAAE0X,iBAEI,aAAnBA,GAIwB9X,SAAxBuN,EAAMyL,eAA+B5Y,EAAEoE,YAAYmU,YAAc,GACjEpL,EAAMO,iBAGVuL,GAAkBjZ,EAAE6F,QAAQ9D,OAAQ,EAAQ,OAAW/B,EAAEoE,YAAY4T,KAAOhY,EAAEoE,YAAY2T,OAAS,MAC/F/X,EAAE6F,QAAQlD,mBAAoB,IAC9BsW,EAAiBjZ,EAAEoE,YAAY8T,KAAOlY,EAAEoE,YAAY6T,OAAS,MAIjEM,EAAcvY,EAAEoE,YAAYmU,YAE5BvY,EAAEoE,YAAYoU,SAAU,EAEpBxY,EAAE6F,QAAQlH,YAAa,IACC,IAAnBqB,EAAEoD,cAAyC,UAAnBsU,GAAgC1X,EAAEoD,cAAgBpD,EAAE8K,eAAoC,SAAnB4M,KAC9Fa,EAAcvY,EAAEoE,YAAYmU,YAAcvY,EAAE6F,QAAQzE,aACpDpB,EAAEoE,YAAYoU,SAAU,GAI5BxY,EAAE6F,QAAQnD,YAAa,EACvB1C,EAAEkE,UAAY8U,EAAUT,EAAcU,EAEtCjZ,EAAEkE,UAAY8U,EAAWT,GAAevY,EAAEmE,MAAMyE,SAAW5I,EAAEuD,WAAc0V,EAE3EjZ,EAAE6F,QAAQlD,mBAAoB,IAC9B3C,EAAEkE,UAAY8U,EAAUT,EAAcU,GAGtCjZ,EAAE6F,QAAQxE,QAAS,GAAQrB,EAAE6F,QAAQxD,aAAc,IAInDrC,EAAE+C,aAAc,GAChB/C,EAAEkE,UAAY,MACP,OAGXlE,GAAE6U,OAAO7U,EAAEkE,aA3CX,SA+CJrE,EAAMoH,UAAU6R,WAAa,SAAS3L,GAElC,GACI0L,GADA7Y,EAAIvC,IAKR,OAFAuC,GAAE+E,aAAc,EAEkB,IAA9B/E,EAAEoE,YAAYuU,aAAqB3Y,EAAE4D,YAAc5D,EAAE6F,QAAQhH,cAC7DmB,EAAEoE,gBACK,IAGiBxE,SAAxBuN,EAAMyL,eAA+DhZ,SAAhCuN,EAAMyL,cAAcC,UACzDA,EAAU1L,EAAMyL,cAAcC,QAAQ,IAG1C7Y,EAAEoE,YAAY2T,OAAS/X,EAAEoE,YAAY4T,KAAmBpY,SAAZiZ,EAAwBA,EAAQK,MAAQ/L,EAAMgM,QAC1FnZ,EAAEoE,YAAY6T,OAASjY,EAAEoE,YAAY8T,KAAmBtY,SAAZiZ,EAAwBA,EAAQO,MAAQjM,EAAMkM,aAE1FrZ,EAAEgD,UAAW,KAIjBnD,EAAMoH,UAAUuS,eAAiB3Z,EAAMoH,UAAUwS,cAAgB,WAE7D,GAAIzZ,GAAIvC,IAEe,QAAnBuC,EAAEsF,eAEFtF,EAAE4H,SAEF5H,EAAE8D,YAAYqE,SAAS1K,KAAKoI,QAAQ7D,OAAOoG,SAE3CpI,EAAEsF,aAAawC,SAAS9H,EAAE8D,aAE1B9D,EAAEuI,WAMV1I,EAAMoH,UAAUW,OAAS,WAErB,GAAI5H,GAAIvC,IAERN,GAAE,gBAAiB6C,EAAEqF,SAASwJ,SAE1B7O,EAAEsD,OACFtD,EAAEsD,MAAMuL,SAGR7O,EAAE2D,YAAc3D,EAAE8G,SAAS2D,KAAKzK,EAAE6F,QAAQvF,YAC1CN,EAAE2D,WAAWkL,SAGb7O,EAAE0D,YAAc1D,EAAE8G,SAAS2D,KAAKzK,EAAE6F,QAAQtF,YAC1CP,EAAE0D,WAAWmL,SAGjB7O,EAAE+D,QACGzF,YAAY,wDACZ8I,KAAK,cAAe,QACpBqC,IAAI,QAAS,KAItB5J,EAAMoH,UAAU+F,QAAU,SAAS0M,GAE/B,GAAI1Z,GAAIvC,IACRuC,GAAEqF,QAAQ6H,QAAQ,WAAYlN,EAAG0Z,IACjC1Z,EAAE4O,WAIN/O,EAAMoH,UAAUsK,aAAe,WAE3B,GACIV,GADA7Q,EAAIvC,IAGRoT,GAAetH,KAAKyG,MAAMhQ,EAAE6F,QAAQhH,aAAe,GAE9CmB,EAAE6F,QAAQpH,UAAW,GACtBuB,EAAE4D,WAAa5D,EAAE6F,QAAQhH,eACxBmB,EAAE6F,QAAQlH,WAEXqB,EAAE2D,WAAWrF,YAAY,kBAAkB8I,KAAK,gBAAiB,SACjEpH,EAAE0D,WAAWpF,YAAY,kBAAkB8I,KAAK,gBAAiB,SAE1C,IAAnBpH,EAAEoD,cAEFpD,EAAE2D,WAAW4G,SAAS,kBAAkBnD,KAAK,gBAAiB,QAC9DpH,EAAE0D,WAAWpF,YAAY,kBAAkB8I,KAAK,gBAAiB,UAE1DpH,EAAEoD,cAAgBpD,EAAE4D,WAAa5D,EAAE6F,QAAQhH,cAAgBmB,EAAE6F,QAAQnF,cAAe,GAE3FV,EAAE0D,WAAW6G,SAAS,kBAAkBnD,KAAK,gBAAiB,QAC9DpH,EAAE2D,WAAWrF,YAAY,kBAAkB8I,KAAK,gBAAiB,UAE1DpH,EAAEoD,cAAgBpD,EAAE4D,WAAa,GAAK5D,EAAE6F,QAAQnF,cAAe,IAEtEV,EAAE0D,WAAW6G,SAAS,kBAAkBnD,KAAK,gBAAiB,QAC9DpH,EAAE2D,WAAWrF,YAAY,kBAAkB8I,KAAK,gBAAiB,YAQ7EvH,EAAMoH,UAAUoE,WAAa,WAEzB,GAAIrL,GAAIvC,IAEQ,QAAZuC,EAAEsD,QAEFtD,EAAEsD,MACG6D,KAAK,MACL7I,YAAY,gBACZ8I,KAAK,cAAe,QAEzBpH,EAAEsD,MACG6D,KAAK,MACLa,GAAGuB,KAAKyG,MAAMhQ,EAAEoD,aAAepD,EAAE6F,QAAQ3D,iBACzCqI,SAAS,gBACTnD,KAAK,cAAe,WAMjCvH,EAAMoH,UAAUoH,WAAa,WAEzB,GAAIrO,GAAIvC,IAEHuC,GAAE6F,QAAQrF,WAENuF,SAAS/F,EAAEgF,QAEZhF,EAAE+E,aAAc,EAIhB/E,EAAE+E,aAAc,IAQ5B5H,EAAEwc,GAAGnb,MAAQ,WACT,GAIIuC,GACA6Y,EALA5Z,EAAIvC,KACJoY,EAAMD,UAAU,GAChBiE,EAAOC,MAAM7S,UAAUkM,MAAMxJ,KAAKiM,UAAW,GAC7CzB,EAAInU,EAAE6H,MAGV,KAAK9G,EAAI,EAAGA,EAAIoT,EAAGpT,IAKf,GAJkB,WAAd,mBAAO8U,GAAP,YAAAxW,EAAOwW,KAAiC,mBAAPA,GACjC7V,EAAEe,GAAGvC,MAAQ,GAAIqB,GAAMG,EAAEe,GAAI8U,GAE7B+D,EAAM5Z,EAAEe,GAAGvC,MAAMqX,GAAKlW,MAAMK,EAAEe,GAAGvC,MAAOqb,GAC1B,mBAAPD,GAAoB,MAAOA,EAE1C,OAAO5Z,OFvKT,SAAShD,EAAQC,EAASC,IGhqFhC,SAAA6c,EAAAra,GACAA,EAAAzC,IAGCQ,KAAA,SAAAR,GAA4B,YAkC7B,SAAA+c,GAAAC,GACA,gBAAAC,EAAAnF,GACA,MAAAoF,IAAAF,EAAAC,GAAAnF,IAyHA,QAAAqF,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAjR,KAAAuH,IAAAwJ,EAAAD,GAAA9Q,KAAA+G,IAAA,EAAAiK,GACAE,EAAAlR,KAAAgQ,IAAA,GAAAhQ,KAAAyG,MAAAzG,KAAAvL,IAAAwc,GAAAjR,KAAAmR,OACAC,EAAAH,EAAAC,CAIA,OAHAE,IAAAC,GAAAH,GAAA,GACAE,GAAAE,GAAAJ,GAAA,EACAE,GAAAG,KAAAL,GAAA,GACAH,EAAAD,GAAAI,IAiQA,QAAA5S,GAAAqS,GACA,MAAAA,GAAArS,OASA,QAAAkT,MAkDA,QAAAC,GAAAC,EAAAhB,GACA,GAAAiB,GAAA,GAAAH,EAGA,IAAAE,YAAAF,GAAAE,EAAA3S,KAAA,SAAAqN,EAAAwF,GAA+DD,EAAAE,IAAAD,EAAAxF,SAG/D,IAAAmE,MAAAuB,QAAAJ,GAAA,CACA,GAEAK,GAFAva,KACAkN,EAAAgN,EAAApT,MAGA,UAAAoS,EAAA,OAAAlZ,EAAAkN,GAAAiN,EAAAE,IAAAra,EAAAka,EAAAla,QACA,QAAAA,EAAAkN,GAAAiN,EAAAE,IAAAnB,EAAAqB,EAAAL,EAAAla,KAAAka,GAAAK,OAIA,IAAAL,EAAA,OAAAE,KAAAF,GAAAC,EAAAE,IAAAD,EAAAF,EAAAE,GAEA,OAAAD,GA2DA,QAAAK,KACA,SAGA,QAAAC,GAAAP,EAAAE,EAAAxF,GACAsF,EAAAE,GAAAxF,EAGA,QAAA8F,KACA,MAAAT,KAGA,QAAAU,GAAAR,EAAAC,EAAAxF,GACAuF,EAAAE,IAAAD,EAAAxF,GAGA,QAAAgG,MAoBA,QAAAP,GAAAH,EAAAhB,GACA,GAAAmB,GAAA,GAAAO,EAGA,IAAAV,YAAAU,GAAAV,EAAA3S,KAAA,SAAAqN,GAA0DyF,EAAA1Q,IAAAiL,SAG1D,IAAAsF,EAAA,CACA,GAAAla,MAAAkN,EAAAgN,EAAApT,MACA,UAAAoS,EAAA,OAAAlZ,EAAAkN,GAAAmN,EAAA1Q,IAAAuQ,EAAAla,QACA,QAAAA,EAAAkN,GAAAmN,EAAA1Q,IAAAuP,EAAAgB,EAAAla,KAAAka,IAGA,MAAAG,GA+EA,QAAAQ,GAAAC,GACA,OAAAA,EAGA,QAAAC,GAAAD,GACA,MAAAA,KAGA,QAAAE,GAAAF,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAAG,GAAAH,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAAI,GAAAJ,GACA,MAAAA,OAGA,QAAAK,GAAAL,GACA,QAAAA,MAAA,EAGA,QAAAM,GAAAN,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAAO,GAAAP,GACA,SAAAtS,KAAA8S,IAAAR,EAAAS,IAGA,QAAAC,GAAAV,GACA,MAAAtS,MAAAiT,IAAAX,EAAAS,IAGA,QAAAG,GAAAZ,GACA,SAAAtS,KAAA8S,IAAAK,GAAAb,IAAA,EAGA,QAAAc,GAAAd,GACA,MAAAtS,MAAAgQ,IAAA,KAAAsC,EAAA,IAGA,QAAAe,GAAAf,GACA,SAAAtS,KAAAgQ,IAAA,MAAAsC,GAGA,QAAAgB,GAAAhB,GACA,QAAAA,GAAA,MAAAtS,KAAAgQ,IAAA,KAAAsC,EAAA,MAAAtS,KAAAgQ,IAAA,QAAAsC,IAAA,EAGA,QAAAiB,GAAAjB,GACA,SAAAtS,KAAA+P,KAAA,EAAAuC,KAGA,QAAAkB,GAAAlB,GACA,MAAAtS,MAAA+P,KAAA,KAAAuC,KAGA,QAAAmB,GAAAnB,GACA,QAAAA,GAAA,QAAAtS,KAAA+P,KAAA,EAAAuC,KAAAtS,KAAA+P,KAAA,GAAAuC,GAAA,GAAAA,GAAA,KAcA,QAAAoB,GAAApB,GACA,SAAAqB,EAAA,EAAArB,GAGA,QAAAqB,GAAArB,GACA,OAAAA,MAAAsB,GAAAC,GAAAvB,MAAAwB,GAAAD,IAAAvB,GAAAyB,IAAAzB,EAAA0B,GAAA1B,EAAA2B,GAAAJ,IAAAvB,GAAA4B,IAAA5B,EAAA6B,GAAAN,IAAAvB,GAAA8B,IAAA9B,EAAA+B,GAGA,QAAAC,GAAAhC,GACA,QAAAA,GAAA,QAAAqB,EAAA,EAAArB,GAAAqB,EAAArB,EAAA,QAmIA,QAAAiC,GAAAtS,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,QAAAsS,GAAAC,GAKA,OAJA/P,GAAA+P,EAAAnW,OACA0I,GAAA,KACA0N,EAAA,EAEAld,EAAA,EAAiBA,EAAAkN,IAAOlN,EAAA,CACxB,KAAAkd,EAAA,GAAAC,GAAAF,EAAAzN,EAAA0N,EAAA,IAAAD,EAAAzN,EAAA0N,EAAA,IAAAD,EAAAjd,KAAA,KAAAkd,CACA1N,GAAA0N,KAAAld,EAGA,MAAAwP,GAAA4C,MAAA,EAAA8K,GA6EA,QAAAE,KACA1gB,KAAA2gB,IAAA3gB,KAAA4gB,IACA5gB,KAAA6gB,IAAA7gB,KAAA8gB,IAAA,KACA9gB,KAAAuC,KAGA,QAAAwe,KACA,UAAAL,GA0IA,QAAAzT,GAAA+T,EAAA1J,EAAAC,EAAAkF,GACA,GAAAwE,MAAA3J,IAAA2J,MAAA1J,GAAA,MAAAyJ,EAEA,IAAAvT,GAOAyT,EACAC,EACAC,EACAC,EACAxJ,EACAyJ,EACAhe,EACAie,EAbAC,EAAAR,EAAAS,MACAC,GAAcvZ,KAAAsU,GACdkF,EAAAX,EAAAL,IACAiB,EAAAZ,EAAAJ,IACAiB,EAAAb,EAAAH,IACAiB,EAAAd,EAAAF,GAWA,KAAAU,EAAA,MAAAR,GAAAS,MAAAC,EAAAV,CAGA,MAAAQ,EAAApX,QAGA,IAFAyN,EAAAP,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAmDW,EAAAX,GACnDI,EAAA/J,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAoDW,EAAAX,EACpD1T,EAAA+T,QAAAle,EAAAge,GAAA,EAAAzJ,IAAA,MAAApK,GAAAnK,GAAAoe,EAAAV,CAMA,IAFAI,GAAAJ,EAAAe,GAAA7V,KAAA,KAAAsV,EAAArZ,MACAkZ,GAAAL,EAAAgB,GAAA9V,KAAA,KAAAsV,EAAArZ,MACAmP,IAAA8J,GAAA7J,IAAA8J,EAAA,MAAAK,GAAA9L,KAAA4L,EAAA/T,IAAAnK,GAAAoe,EAAAV,EAAAS,MAAAC,EAAAV,CAGA,GACAvT,OAAAnK,GAAA,GAAA+Y,OAAA,GAAA2E,EAAAS,MAAA,GAAApF,OAAA,IACAxE,EAAAP,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAmDW,EAAAX,GACnDI,EAAA/J,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAoDW,EAAAX,SACjD7d,EAAAge,GAAA,EAAAzJ,MAAA0J,GAAAF,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAAzT,GAAA8T,GAAAC,EAAA/T,EAAAnK,GAAAoe,EAAAV,EAGA,QAAAiB,GAAA9Z,GACA,GAAAsU,GAAAnZ,EACAgU,EACAC,EAFA/G,EAAArI,EAAAiC,OAGA8X,EAAA,GAAA7F,OAAA7L,GACA2R,EAAA,GAAA9F,OAAA7L,GACAmR,EAAAS,IACAR,EAAAQ,IACAP,IAAAO,KACAN,IAAAM,IAGA,KAAA9e,EAAA,EAAaA,EAAAkN,IAAOlN,EACpB2d,MAAA3J,GAAAtX,KAAA+hB,GAAA7V,KAAA,KAAAuQ,EAAAtU,EAAA7E,MAAA2d,MAAA1J,GAAAvX,KAAAgiB,GAAA9V,KAAA,KAAAuQ,MACAyF,EAAA5e,GAAAgU,EACA6K,EAAA7e,GAAAiU,EACAD,EAAAqK,MAAArK,GACAA,EAAAuK,MAAAvK,GACAC,EAAAqK,MAAArK,GACAA,EAAAuK,MAAAvK,GAWA,KAPAsK,EAAAF,MAAA3hB,KAAA2gB,IAAAkB,EAAA7hB,KAAA6gB,KACAiB,EAAAF,MAAA5hB,KAAA4gB,IAAAkB,EAAA9hB,KAAA8gB,KAGA9gB,KAAAqiB,MAAAV,EAAAC,GAAAS,MAAAR,EAAAC,GAGAxe,EAAA,EAAaA,EAAAkN,IAAOlN,EACpB2J,EAAAjN,KAAAkiB,EAAA5e,GAAA6e,EAAA7e,GAAA6E,EAAA7E,GAGA,OAAAtD,MAmNA,QAAAmX,GAAAhP,GACA,OAAA7E,GAAA,EAAAkN,EAAArI,EAAAiC,OAAkC9G,EAAAkN,IAAOlN,EAAAtD,KAAAoR,OAAAjJ,EAAA7E,GACzC,OAAAtD,MAkDA,QAAAsiB,GAAA7F,GACA,MAAAA,GAAA,GAOA,QAAA8F,GAAA9F,GACA,MAAAA,GAAA,GAOA,QAAA+F,GAAAC,EAAAnL,EAAAC,GACA,GAAAyJ,GAAA,GAAA0B,GAAA,MAAApL,EAAAgL,EAAAhL,EAAA,MAAAC,EAAAgL,EAAAhL,EAAAoL,gBACA,cAAAF,EAAAzB,IAAAiB,OAAAQ,GAGA,QAAAC,GAAApL,EAAAC,EAAAoK,EAAAC,EAAAC,EAAAC,GACA9hB,KAAA+hB,GAAAzK,EACAtX,KAAAgiB,GAAAzK,EACAvX,KAAA2gB,IAAAgB,EACA3hB,KAAA4gB,IAAAgB,EACA5hB,KAAA6gB,IAAAgB,EACA7hB,KAAA8gB,IAAAgB,EACA9hB,KAAAyhB,MAAAtf,OAGA,QAAAygB,GAAAlB,GAEA,IADA,GAAAmB,IAAc1a,KAAAuZ,EAAAvZ,MAAgByN,EAAAiN,EAC9BnB,IAAA9L,gBAA+CzN,KAAAuZ,EAAAvZ,KAC/C,OAAA0a,GA+CA,QAAAC,GAAAtC,GACA,KAAAA,GAAA,YAAAuC,MACA/iB,MAAAgjB,MAAAxC,EACAxgB,KAAAijB,MACAjjB,KAAAkjB,OAAA,KACAljB,KAAAmjB,UACAnjB,KAAAojB,SACApjB,KAAAqjB,SACArjB,KAAAsjB,QACAtjB,KAAAujB,OACAvjB,KAAAwjB,OAAA,EAgCA,QAAAC,GAAAC,GACA,IAAAA,EAAAF,OACA,IAAS5G,EAAA8G,GACT,MAAAC,GACA,GAAAD,EAAAP,OAAAO,EAAAH,OAAAG,EAAAJ,QAAA,GAAAM,EAAAF,EAAAC,OACA,KAAAD,EAAAN,MAAA,KAAAO,IAKA,QAAA/G,GAAA8G,GACA,KAAAA,EAAAF,OAAAE,EAAAL,UAAAK,EAAAJ,QAAAI,EAAAV,OAAA,CACA,GAAA1f,GAAAogB,EAAAH,OAAAG,EAAAJ,QACAlF,EAAAsF,EAAAP,OAAA7f,GACAie,EAAAnD,EAAAhU,OAAA,EACA6D,EAAAmQ,EAAAmD,EACAnD,GAAAmD,GAAAlN,EAAAqP,EAAApgB,KACAogB,EAAAL,WAAAK,EAAAJ,QACAlF,EAAAnQ,EAAA/L,MAAA,KAAAkc,GACAsF,EAAAP,OAAA7f,KACAogB,EAAAP,OAAA7f,GAAA8a,GAAAyF,KAIA,QAAAxP,GAAAqP,EAAApgB,GACA,gBAAAqgB,EAAAvJ,GACAsJ,EAAAP,OAAA7f,OACAogB,EAAAJ,UAAAI,EAAAH,OACAG,EAAAP,OAAA7f,GAAA,KACA,MAAAogB,EAAAR,SACA,MAAAS,EACAC,EAAAF,EAAAC,IAEAD,EAAAN,MAAA9f,GAAA8W,EACAsJ,EAAAL,SAAAI,EAAAC,GACAI,EAAAJ,OAKA,QAAAE,GAAAF,EAAAC,GACA,GAAAvF,GAAA9a,EAAAogB,EAAAP,OAAA/Y,MAKA,KAJAsZ,EAAAR,OAAAS,EACAD,EAAAN,MAAAjhB,OACAuhB,EAAAL,SAAAV,MAEArf,GAAA,GACA,IAAA8a,EAAAsF,EAAAP,OAAA7f,MACAogB,EAAAP,OAAA7f,GAAA,KACA8a,EAAAwF,OACA,IAAaxF,EAAAwF,QACb,MAAAD,IAKAD,EAAAJ,QAAAX,IACAmB,EAAAJ,GAGA,QAAAI,GAAAJ,GACA,IAAAA,EAAAJ,SAAAI,EAAAT,MAAA,CACA,GAAAxG,GAAAiH,EAAAN,KACAM,GAAAN,MAAAjhB,OACAuhB,EAAAT,MAAAS,EAAAR,OAAAzG,IAIA,QAAAsH,GAAAC,GACA,UAAAlB,GAAA3K,UAAA/N,QAAA4Z,EAAA5B,KAcA,QAAA6B,GAAAxH,GACA,MAAAA,GAAAyH,YAGA,QAAAC,GAAA1H,GACA,MAAAA,GAAA2H,YAGA,QAAAC,GAAA5H,GACA,MAAAA,GAAA6H,WAGA,QAAAC,GAAA9H,GACA,MAAAA,GAAA+H,SAGA,QAAAC,IAAAhI,GACA,MAAAA,MAAAiI,SAGA,QAAAC,IAAArN,GACA,MAAAA,IAAA,EAAAsN,GAAAtN,OAAAsN,GAAA9Y,KAAA6Y,KAAArN,GAGA,QAAAuN,IAAAlD,EAAAC,EAAAC,EAAAC,EAAAgD,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAArD,EAAAF,EAAAwD,EAAArD,EAAAF,EACAwD,EAAAJ,EAAAF,EAAAO,EAAAJ,EAAAF,EACA3G,GAAAgH,GAAAxD,EAAAmD,GAAAM,GAAA1D,EAAAmD,KAAAO,EAAAH,EAAAE,EAAAD,EACA,QAAAxD,EAAAvD,EAAA8G,EAAAtD,EAAAxD,EAAA+G,GAKA,QAAAG,IAAA3D,EAAAC,EAAAC,EAAAC,EAAAyD,EAAAC,EAAAC,GACA,GAAAC,GAAA/D,EAAAE,EACA8D,EAAA/D,EAAAE,EACA8D,GAAAH,EAAAD,MAAA1Z,KAAA+P,KAAA6J,IAAAC,KACAE,EAAAD,EAAAD,EACAG,GAAAF,EAAAF,EACAK,EAAApE,EAAAkE,EACAG,EAAApE,EAAAkE,EACAZ,EAAArD,EAAAgE,EACAV,EAAArD,EAAAgE,EACAG,GAAAF,EAAAb,GAAA,EACAgB,GAAAF,EAAAb,GAAA,EACAgB,EAAAjB,EAAAa,EACAK,EAAAjB,EAAAa,EACAK,EAAAF,IAAAC,IACAhM,EAAAmL,EAAAC,EACAc,EAAAP,EAAAZ,EAAAD,EAAAc,EACAvJ,GAAA2J,EAAA,QAAAta,KAAA+P,KAAA/P,KAAA+G,IAAA,EAAAuH,IAAAiM,EAAAC,MACAC,GAAAD,EAAAF,EAAAD,EAAA1J,GAAA4J,EACAG,IAAAF,EAAAH,EAAAC,EAAA3J,GAAA4J,EACAI,GAAAH,EAAAF,EAAAD,EAAA1J,GAAA4J,EACAK,IAAAJ,EAAAH,EAAAC,EAAA3J,GAAA4J,EACAM,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAR,EACAa,EAAAJ,EAAAR,CAMA,OAFAS,KAAAC,IAAAC,IAAAC,MAAAP,EAAAE,EAAAD,EAAAE,IAGAK,GAAAR,EACAS,GAAAR,EACAd,KAAAG,EACAF,KAAAG,EACAC,IAAAQ,GAAAhB,EAAAnL,EAAA,GACA4L,IAAAQ,GAAAjB,EAAAnL,EAAA,IA8LA,QAAA6M,IAAAC,GACAlnB,KAAAmnB,SAAAD,EA+BA,QAAA5P,IAAA8P,GACA,MAAAA,GAAA,GAGA,QAAA7P,IAAA6P,GACA,MAAAA,GAAA,GAmPA,QAAAC,IAAAC,GACAtnB,KAAAunB,OAAAD,EAqBA,QAAAE,IAAAF,GAEA,QAAAG,GAAAP,GACA,UAAAG,IAAAC,EAAAJ,IAKA,MAFAO,GAAAF,OAAAD,EAEAG,EAGA,QAAAC,IAAAhR,GACA,GAAAzI,GAAAyI,EAAA4Q,KASA,OAPA5Q,GAAAiR,MAAAjR,EAAAY,QAAAZ,GAAAY,EACAZ,EAAAkR,OAAAlR,EAAAa,QAAAb,GAAAa,EAEAb,EAAA4Q,MAAA,SAAA/kB,GACA,MAAA4V,WAAA/N,OAAA6D,EAAAuZ,GAAAjlB,IAAA0L,IAAAsZ,QAGA7Q,EAwLA,QAAAmR,IAAAC,EAAAxQ,EAAAC,GACAuQ,EAAAX,SAAAY,eACA,EAAAD,EAAAnH,IAAAmH,EAAAjH,KAAA,GACA,EAAAiH,EAAAlH,IAAAkH,EAAAhH,KAAA,GACAgH,EAAAnH,IAAA,EAAAmH,EAAAjH,KAAA,GACAiH,EAAAlH,IAAA,EAAAkH,EAAAhH,KAAA,GACAgH,EAAAnH,IAAA,EAAAmH,EAAAjH,IAAAvJ,GAAA,GACAwQ,EAAAlH,IAAA,EAAAkH,EAAAhH,IAAAvJ,GAAA,GAIA,QAAAyQ,IAAAd,GACAlnB,KAAAmnB,SAAAD,EAwCA,QAAAe,IAAAf,GACAlnB,KAAAmnB,SAAAD,EAiDA,QAAAgB,IAAAhB,GACAlnB,KAAAmnB,SAAAD,EAqCA,QAAAiB,IAAAjB,EAAAkB,GACApoB,KAAAqoB,OAAA,GAAAL,IAAAd,GACAlnB,KAAAsoB,MAAAF,EAqDA,QAAAG,IAAAT,EAAAxQ,EAAAC,GACAuQ,EAAAX,SAAAY,cACAD,EAAAjH,IAAAiH,EAAAU,IAAAV,EAAAW,IAAAX,EAAAnH,KACAmH,EAAAhH,IAAAgH,EAAAU,IAAAV,EAAAY,IAAAZ,EAAAlH,KACAkH,EAAAW,IAAAX,EAAAU,IAAAV,EAAAjH,IAAAvJ,GACAwQ,EAAAY,IAAAZ,EAAAU,IAAAV,EAAAhH,IAAAvJ,GACAuQ,EAAAW,IACAX,EAAAY,KAIA,QAAAC,IAAAzB,EAAA0B,GACA5oB,KAAAmnB,SAAAD,EACAlnB,KAAAwoB,IAAA,EAAAI,GAAA,EAiDA,QAAAC,IAAA3B,EAAA0B,GACA5oB,KAAAmnB,SAAAD,EACAlnB,KAAAwoB,IAAA,EAAAI,GAAA,EAyDA,QAAAE,IAAA5B,EAAA0B,GACA5oB,KAAAmnB,SAAAD,EACAlnB,KAAAwoB,IAAA,EAAAI,GAAA,EA8CA,QAAAG,IAAAjB,EAAAxQ,EAAAC,GACA,GAAAsK,GAAAiG,EAAAjH,IACAiB,EAAAgG,EAAAhH,IACAgE,EAAAgD,EAAAW,IACA1D,EAAA+C,EAAAY,GAEA,IAAAZ,EAAAkB,OAAAC,GAAA,CACA,GAAAlb,GAAA,EAAA+Z,EAAAoB,QAAA,EAAApB,EAAAkB,OAAAlB,EAAAqB,OAAArB,EAAAsB,QACA5Y,EAAA,EAAAsX,EAAAkB,QAAAlB,EAAAkB,OAAAlB,EAAAqB,OACAtH,MAAA9T,EAAA+Z,EAAAnH,IAAAmH,EAAAsB,QAAAtB,EAAAW,IAAAX,EAAAoB,SAAA1Y,EACAsR,KAAA/T,EAAA+Z,EAAAlH,IAAAkH,EAAAsB,QAAAtB,EAAAY,IAAAZ,EAAAoB,SAAA1Y,EAGA,GAAAsX,EAAAuB,OAAAJ,GAAA,CACA,GAAAjb,GAAA,EAAA8Z,EAAAwB,QAAA,EAAAxB,EAAAuB,OAAAvB,EAAAqB,OAAArB,EAAAsB,QACAG,EAAA,EAAAzB,EAAAuB,QAAAvB,EAAAuB,OAAAvB,EAAAqB,OACArE,MAAA9W,EAAA8Z,EAAAjH,IAAAiH,EAAAwB,QAAAhS,EAAAwQ,EAAAsB,SAAAG,EACAxE,KAAA/W,EAAA8Z,EAAAhH,IAAAgH,EAAAwB,QAAA/R,EAAAuQ,EAAAsB,SAAAG,EAGAzB,EAAAX,SAAAY,cAAAlG,EAAAC,EAAAgD,EAAAC,EAAA+C,EAAAW,IAAAX,EAAAY,KAGA,QAAAc,IAAAtC,EAAAuC,GACAzpB,KAAAmnB,SAAAD,EACAlnB,KAAA0pB,OAAAD,EA6DA,QAAAE,IAAAzC,EAAAuC,GACAzpB,KAAAmnB,SAAAD,EACAlnB,KAAA0pB,OAAAD,EAqEA,QAAAG,IAAA1C,EAAAuC,GACAzpB,KAAAmnB,SAAAD,EACAlnB,KAAA0pB,OAAAD,EA0DA,QAAAI,IAAA3C,GACAlnB,KAAAmnB,SAAAD,EAuBA,QAAA4C,IAAAxS,GACA,MAAAA,GAAA,OAOA,QAAAyS,IAAAjC,EAAAhD,EAAAC,GACA,GAAAiF,GAAAlC,EAAAjH,IAAAiH,EAAAnH,IACAsJ,EAAAnF,EAAAgD,EAAAjH,IACAqJ,GAAApC,EAAAhH,IAAAgH,EAAAlH,MAAAoJ,GAAAC,EAAA,OACAE,GAAApF,EAAA+C,EAAAhH,MAAAmJ,GAAAD,EAAA,OACA5C,GAAA8C,EAAAD,EAAAE,EAAAH,MAAAC,EACA,QAAAH,GAAAI,GAAAJ,GAAAK,IAAAre,KAAAuD,IAAAvD,KAAAuH,IAAA6W,GAAApe,KAAAuH,IAAA8W,GAAA,GAAAre,KAAAuH,IAAA+T,KAAA,EAIA,QAAAgD,IAAAtC,EAAA1J,GACA,GAAAiM,GAAAvC,EAAAjH,IAAAiH,EAAAnH,GACA,OAAA0J,IAAA,GAAAvC,EAAAhH,IAAAgH,EAAAlH,KAAAyJ,EAAAjM,GAAA,EAAAA,EAMA,QAAAkM,IAAAxC,EAAAyC,EAAAC,GACA,GAAA7I,GAAAmG,EAAAnH,IACAiB,EAAAkG,EAAAlH,IACAiB,EAAAiG,EAAAjH,IACAiB,EAAAgG,EAAAhH,IACAqF,GAAAtE,EAAAF,GAAA,CACAmG,GAAAX,SAAAY,cAAApG,EAAAwE,EAAAvE,EAAAuE,EAAAoE,EAAA1I,EAAAsE,EAAArE,EAAAqE,EAAAqE,EAAA3I,EAAAC,GAGA,QAAA2I,IAAAvD,GACAlnB,KAAAmnB,SAAAD,EA0CA,QAAAwD,IAAAxD,GACAlnB,KAAAmnB,SAAA,GAAAwD,IAAAzD,GAOA,QAAAyD,IAAAzD,GACAlnB,KAAAmnB,SAAAD,EAUA,QAAA0D,IAAA1D,GACA,UAAAuD,IAAAvD,GAGA,QAAA2D,IAAA3D,GACA,UAAAwD,IAAAxD,GAGA,QAAA4D,IAAA5D,GACAlnB,KAAAmnB,SAAAD,EA2CA,QAAA6D,IAAAzT,GACA,GAAAhU,GAEAimB,EADA/Y,EAAA8G,EAAAlN,OAAA,EAEA2D,EAAA,GAAAsO,OAAA7L,GACAxC,EAAA,GAAAqO,OAAA7L,GACA4J,EAAA,GAAAiC,OAAA7L,EAEA,KADAzC,EAAA,KAAAC,EAAA,KAAAoM,EAAA,GAAA9C,EAAA,KAAAA,EAAA,GACAhU,EAAA,EAAaA,EAAAkN,EAAA,IAAWlN,EAAAyK,EAAAzK,GAAA,EAAA0K,EAAA1K,GAAA,EAAA8W,EAAA9W,GAAA,EAAAgU,EAAAhU,GAAA,EAAAgU,EAAAhU,EAAA,EAExB,KADAyK,EAAAyC,EAAA,KAAAxC,EAAAwC,EAAA,KAAA4J,EAAA5J,EAAA,KAAA8G,EAAA9G,EAAA,GAAA8G,EAAA9G,GACAlN,EAAA,EAAaA,EAAAkN,IAAOlN,EAAAimB,EAAAxb,EAAAzK,GAAA0K,EAAA1K,EAAA,GAAA0K,EAAA1K,IAAAimB,EAAAnP,EAAA9W,IAAAimB,EAAAnP,EAAA9W,EAAA,EAEpB,KADAyK,EAAAyC,EAAA,GAAA4J,EAAA5J,EAAA,GAAAxC,EAAAwC,EAAA,GACAlN,EAAAkN,EAAA,EAAiBlN,GAAA,IAAQA,EAAAyK,EAAAzK,IAAA8W,EAAA9W,GAAAyK,EAAAzK,EAAA,IAAA0K,EAAA1K,EAEzB,KADA0K,EAAAwC,EAAA,IAAA8G,EAAA9G,GAAAzC,EAAAyC,EAAA,MACAlN,EAAA,EAAaA,EAAAkN,EAAA,IAAWlN,EAAA0K,EAAA1K,GAAA,EAAAgU,EAAAhU,EAAA,GAAAyK,EAAAzK,EAAA,EACxB,QAAAyK,EAAAC,GAOA,QAAAgd,IAAA9D,EAAA9I,GACApe,KAAAmnB,SAAAD,EACAlnB,KAAAirB,GAAA7M,EA4CA,QAAA8M,IAAAhE,GACA,UAAA8D,IAAA9D,EAAA,GAGA,QAAAiE,IAAAjE,GACA,UAAA8D,IAAA9D,EAAA,GAqBA,QAAAkE,IAAA3O,EAAAiB,GACA,MAAAjB,GAAAiB,GAkGA,QAAA2N,IAAAC,GAEA,IADA,GAAAC,GAAAC,EAAA,EAAAloB,KAAAkN,EAAA8a,EAAAlhB,SACA9G,EAAAkN,IAAA+a,GAAAD,EAAAhoB,GAAA,MAAAkoB,GAAAD,EACA,OAAAC,GAyCA,QAAA1kB,IAAA2G,EAAAge,GACA,GAAAjiB,GAAAkiB,OAAAC,OAAAle,EAAAjE,UACA,QAAAkU,KAAA+N,GAAAjiB,EAAAkU,GAAA+N,EAAA/N,EACA,OAAAlU,GAGA,QAAAoiB,OA8KA,QAAAC,IAAAC,GACA,GAAAvC,EAEA,OADAuC,MAAA,IAAAC,OAAAC,eACAzC,EAAA0C,GAAAC,KAAAJ,KAAAvC,EAAA/V,SAAA+V,EAAA,UAAA4C,IAAA5C,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAA6C,GAAAF,KAAAJ,IAAAO,GAAA7Y,SAAA+V,EAAA,SACAA,EAAA+C,GAAAJ,KAAAJ,IAAA,GAAAK,IAAA5C,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAgD,GAAAL,KAAAJ,IAAA,GAAAK,IAAA,IAAA5C,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAiD,GAAAN,KAAAJ,IAAAW,GAAAlD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAmD,GAAAR,KAAAJ,IAAAW,GAAA,IAAAlD,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAAoD,GAAAT,KAAAJ,IAAAc,GAAArD,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAAsD,GAAAX,KAAAJ,IAAAc,GAAArD,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAuD,GAAAxd,eAAAwc,GAAAO,GAAAS,GAAAhB,IACA,gBAAAA,EAAA,GAAAK,IAAAxJ,YAAA,GACA,KAGA,QAAA0J,IAAA7b,GACA,UAAA2b,IAAA3b,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAAic,IAAArS,EAAA2S,EAAA/e,EAAAD,GAEA,MADAA,IAAA,IAAAqM,EAAA2S,EAAA/e,EAAA2U,KACA,GAAAwJ,IAAA/R,EAAA2S,EAAA/e,EAAAD,GAGA,QAAAif,IAAAnP,GAEA,MADAA,aAAA+N,MAAA/N,EAAAgO,GAAAhO,IACAA,GACAA,IAAAoP,MACA,GAAAd,IAAAtO,EAAAzD,EAAAyD,EAAAkP,EAAAlP,EAAA7P,EAAA6P,EAAAtM,UAFA,GAAA4a,IAKA,QAAAc,IAAA7S,EAAA2S,EAAA/e,EAAAuD,GACA,WAAA4G,UAAA/N,OAAA4iB,GAAA5S,GAAA,GAAA+R,IAAA/R,EAAA2S,EAAA/e,EAAA,MAAAuD,EAAA,EAAAA,GAGA,QAAA4a,IAAA/R,EAAA2S,EAAA/e,EAAAuD,GACAvR,KAAAoa,KACApa,KAAA+sB,KACA/sB,KAAAgO,KACAhO,KAAAuR,WA+BA,QAAAqb,IAAAvC,EAAAmB,EAAA9U,EAAA3I,GAIA,MAHAA,IAAA,EAAAsc,EAAAmB,EAAA9U,EAAAiM,IACAjM,GAAA,GAAAA,GAAA,EAAA2T,EAAAmB,EAAA7I,IACA6I,GAAA,IAAAnB,EAAA1H,KACA,GAAAuK,IAAA7C,EAAAmB,EAAA9U,EAAA3I,GAGA,QAAAof,IAAAtP,GACA,GAAAA,YAAAqP,IAAA,UAAAA,IAAArP,EAAAwM,EAAAxM,EAAA2N,EAAA3N,EAAAnH,EAAAmH,EAAAtM,QAEA,IADAsM,YAAA+N,MAAA/N,EAAAgO,GAAAhO,KACAA,EAAA,UAAAqP,GACA,IAAArP,YAAAqP,IAAA,MAAArP,EACAA,KAAAoP,KACA,IAAA7S,GAAAyD,EAAAzD,EAAA,IACA2S,EAAAlP,EAAAkP,EAAA,IACA/e,EAAA6P,EAAA7P,EAAA,IACAqB,EAAAvD,KAAAuD,IAAA+K,EAAA2S,EAAA/e,GACA6E,EAAA/G,KAAA+G,IAAAuH,EAAA2S,EAAA/e,GACAqc,EAAA1H,IACA6I,EAAA3Y,EAAAxD,EACAqH,GAAA7D,EAAAxD,GAAA,CAUA,OATAmc,IACAnB,EAAAjQ,IAAAvH,GAAAka,EAAA/e,GAAAwd,EAAA,GAAAuB,EAAA/e,GACA+e,IAAAla,GAAA7E,EAAAoM,GAAAoR,EAAA,GACApR,EAAA2S,GAAAvB,EAAA,EACAA,GAAA9U,EAAA,GAAA7D,EAAAxD,EAAA,EAAAwD,EAAAxD,EACAgb,GAAA,IAEAmB,EAAA9U,EAAA,GAAAA,EAAA,IAAA2T,EAEA,GAAA6C,IAAA7C,EAAAmB,EAAA9U,EAAAmH,EAAAtM,SAGA,QAAA6b,IAAA/C,EAAAmB,EAAA9U,EAAAnF,GACA,WAAA4G,UAAA/N,OAAA+iB,GAAA9C,GAAA,GAAA6C,IAAA7C,EAAAmB,EAAA9U,EAAA,MAAAnF,EAAA,EAAAA,GAGA,QAAA2b,IAAA7C,EAAAmB,EAAA9U,EAAAnF,GACAvR,KAAAqqB,KACArqB,KAAAwrB,KACAxrB,KAAA0W,KACA1W,KAAAuR,WAiCA,QAAA8b,IAAAhD,EAAAiD,EAAAC,GACA,MAGA,MAHAlD,EAAA,GAAAiD,GAAAC,EAAAD,GAAAjD,EAAA,GACAA,EAAA,IAAAkD,EACAlD,EAAA,IAAAiD,GAAAC,EAAAD,IAAA,IAAAjD,GAAA,GACAiD,GAeA,QAAAE,IAAA3P,GACA,GAAAA,YAAA4P,IAAA,UAAAA,IAAA5P,EAAAnH,EAAAmH,EAAA9P,EAAA8P,EAAA7P,EAAA6P,EAAAtM,QACA,IAAAsM,YAAA6P,IAAA,CACA,GAAArD,GAAAxM,EAAAwM,EAAAsD,EACA,WAAAF,IAAA5P,EAAAnH,EAAA5K,KAAA8S,IAAAyL,GAAAxM,EAAA5P,EAAAnC,KAAAiT,IAAAsL,GAAAxM,EAAA5P,EAAA4P,EAAAtM,SAEAsM,YAAAsO,MAAAtO,EAAAmP,GAAAnP,GACA,IAAA7P,GAAA4f,GAAA/P,EAAAzD,GACArM,EAAA6f,GAAA/P,EAAAkP,GACArW,EAAAkX,GAAA/P,EAAA7P,GACAsJ,EAAAuW,IAAA,SAAA7f,EAAA,SAAAD,EAAA,SAAA2I,GAAAoX,IACAvW,EAAAsW,IAAA,SAAA7f,EAAA,SAAAD,EAAA,QAAA2I,GAAAqX,IACAC,EAAAH,IAAA,SAAA7f,EAAA,QAAAD,EAAA,SAAA2I,GAAAuX,GACA,WAAAR,IAAA,IAAAlW,EAAA,QAAAD,EAAAC,GAAA,KAAAA,EAAAyW,GAAAnQ,EAAAtM,SAGA,QAAA2c,IAAAxX,EAAA3I,EAAAC,EAAAuD,GACA,WAAA4G,UAAA/N,OAAAojB,GAAA9W,GAAA,GAAA+W,IAAA/W,EAAA3I,EAAAC,EAAA,MAAAuD,EAAA,EAAAA,GAGA,QAAAkc,IAAA/W,EAAA3I,EAAAC,EAAAuD,GACAvR,KAAA0W,KACA1W,KAAA+N,KACA/N,KAAAgO,KACAhO,KAAAuR,WA0BA,QAAAsc,IAAAzP,GACA,MAAAA,GAAA+P,GAAAriB,KAAAgQ,IAAAsC,EAAA,KAAAA,EAAAgQ,GAAA7D,GAGA,QAAA8D,IAAAjQ,GACA,MAAAA,GAAAoM,GAAApM,MAAAgQ,IAAAhQ,EAAAmM,IAGA,QAAA+D,IAAAhX,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAxL,KAAAgQ,IAAAxE,EAAA,aAGA,QAAAsW,IAAAtW,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAxL,KAAAgQ,KAAAxE,EAAA,iBAGA,QAAAiX,IAAA1Q,GACA,GAAAA,YAAA6P,IAAA,UAAAA,IAAA7P,EAAAwM,EAAAxM,EAAA5P,EAAA4P,EAAAnH,EAAAmH,EAAAtM,QACAsM,aAAA4P,MAAA5P,EAAA2P,GAAA3P,GACA,IAAAwM,GAAAve,KAAA4O,MAAAmD,EAAA7P,EAAA6P,EAAA9P,GAAAygB,EACA,WAAAd,IAAArD,EAAA,EAAAA,EAAA,IAAAA,EAAAve,KAAA+P,KAAAgC,EAAA9P,EAAA8P,EAAA9P,EAAA8P,EAAA7P,EAAA6P,EAAA7P,GAAA6P,EAAAnH,EAAAmH,EAAAtM,SAGA,QAAAkd,IAAApE,EAAApc,EAAAyI,EAAAnF,GACA,WAAA4G,UAAA/N,OAAAmkB,GAAAlE,GAAA,GAAAqD,IAAArD,EAAApc,EAAAyI,EAAA,MAAAnF,EAAA,EAAAA,GAGA,QAAAmc,IAAArD,EAAApc,EAAAyI,EAAAnF,GACAvR,KAAAqqB,KACArqB,KAAAiO,KACAjO,KAAA0W,KACA1W,KAAAuR,WAwBA,QAAAmd,IAAA7Q,GACA,GAAAA,YAAA8Q,IAAA,UAAAA,IAAA9Q,EAAAwM,EAAAxM,EAAA2N,EAAA3N,EAAAnH,EAAAmH,EAAAtM,QACAsM,aAAAsO,MAAAtO,EAAAmP,GAAAnP,GACA,IAAAzD,GAAAyD,EAAAzD,EAAA,IACA2S,EAAAlP,EAAAkP,EAAA,IACA/e,EAAA6P,EAAA7P,EAAA,IACA0I,GAAAkY,GAAA5gB,EAAA6gB,GAAAzU,EAAA0U,GAAA/B,IAAA6B,GAAAC,GAAAC,IACAC,EAAA/gB,EAAA0I,EACAsY,GAAAC,IAAAlC,EAAArW,GAAAwY,GAAAH,GAAAzI,GACAkF,EAAA1f,KAAA+P,KAAAmT,IAAAD,MAAAE,GAAAvY,GAAA,EAAAA,IACA2T,EAAAmB,EAAA1f,KAAA4O,MAAAsU,EAAAD,GAAAP,GAAA,IAAA7L,GACA,WAAAgM,IAAAtE,EAAA,EAAAA,EAAA,IAAAA,EAAAmB,EAAA9U,EAAAmH,EAAAtM,SAGA,QAAA4d,IAAA9E,EAAAmB,EAAA9U,EAAAnF,GACA,WAAA4G,UAAA/N,OAAAskB,GAAArE,GAAA,GAAAsE,IAAAtE,EAAAmB,EAAA9U,EAAA,MAAAnF,EAAA,EAAAA,GAGA,QAAAod,IAAAtE,EAAAmB,EAAA9U,EAAAnF,GACAvR,KAAAqqB,KACArqB,KAAAwrB,KACAxrB,KAAA0W,KACA1W,KAAAuR,WA2BA,QAAA6d,IAAA5E,EAAA6E,EAAAC,EAAAC,EAAAC,GACA,GAAApB,GAAA5D,IAAA2D,EAAAC,EAAA5D,CACA,aAAAA,EAAA,EAAA4D,EAAAD,GAAAkB,GACA,IAAAjB,EAAA,EAAAD,GAAAmB,GACA,IAAA9E,EAAA,EAAA4D,EAAA,EAAAD,GAAAoB,EACApB,EAAAqB,GAAA,EAiCA,QAAAC,IAAA1hB,EAAA0O,GACA,gBAAA2B,GACA,MAAArQ,GAAAqQ,EAAA3B,GAIA,QAAAiT,IAAA3hB,EAAAC,EAAAuJ,GACA,MAAAxJ,GAAAjC,KAAAgQ,IAAA/N,EAAAwJ,GAAAvJ,EAAAlC,KAAAgQ,IAAA9N,EAAAuJ,GAAAxJ,EAAAwJ,EAAA,EAAAA,EAAA,SAAA6G,GACA,MAAAtS,MAAAgQ,IAAA/N,EAAAqQ,EAAApQ,EAAAuJ,IAIA,QAAAoY,IAAA5hB,EAAAC,GACA,GAAAyO,GAAAzO,EAAAD,CACA,OAAA0O,GAAAgT,GAAA1hB,EAAA0O,EAAA,KAAAA,SAAA,IAAA3Q,KAAA6O,MAAA8B,EAAA,KAAAA,GAAAmT,GAAA3O,MAAAlT,GAAAC,EAAAD,GAGA,QAAA8hB,IAAAtY,GACA,YAAAA,MAAAuY,GAAA,SAAA/hB,EAAAC,GACA,MAAAA,GAAAD,EAAA2hB,GAAA3hB,EAAAC,EAAAuJ,GAAAqY,GAAA3O,MAAAlT,GAAAC,EAAAD,IAIA,QAAA+hB,IAAA/hB,EAAAC,GACA,GAAAyO,GAAAzO,EAAAD,CACA,OAAA0O,GAAAgT,GAAA1hB,EAAA0O,GAAAmT,GAAA3O,MAAAlT,GAAAC,EAAAD,GAyBA,QAAAgiB,IAAAC,GACA,gBAAAC,GACA,GAIA3sB,GAAA4sB,EAJA1f,EAAAyf,EAAA7lB,OACAgQ,EAAA,GAAAiC,OAAA7L,GACAuc,EAAA,GAAA1Q,OAAA7L,GACAxC,EAAA,GAAAqO,OAAA7L,EAEA,KAAAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB4sB,EAAAjD,GAAAgD,EAAA3sB,IACA8W,EAAA9W,GAAA4sB,EAAA9V,GAAA,EACA2S,EAAAzpB,GAAA4sB,EAAAnD,GAAA,EACA/e,EAAA1K,GAAA4sB,EAAAliB,GAAA,CAMA,OAJAoM,GAAA4V,EAAA5V,GACA2S,EAAAiD,EAAAjD,GACA/e,EAAAgiB,EAAAhiB,GACAkiB,EAAA3e,QAAA,EACA,SAAA6M,GAIA,MAHA8R,GAAA9V,IAAAgE,GACA8R,EAAAnD,IAAA3O,GACA8R,EAAAliB,IAAAoQ,GACA8R,EAAA,KA8DA,QAAAC,IAAAniB,GACA,kBACA,MAAAA,IAIA,QAAAoiB,IAAApiB,GACA,gBAAAoQ,GACA,MAAApQ,GAAAoQ,GAAA,IAsGA,QAAAiS,IAAAnY,GACA,eAAAA,EAAAoY,IACAC,QAAAjoB,SAAAiG,cAAA,OAAAiiB,GAAAloB,SAAAmoB,gBAAAC,GAAApoB,SAAAqoB,aACAJ,GAAA/X,MAAAW,UAAAjB,EACAA,EAAAwY,GAAAE,iBAAAJ,GAAA9hB,YAAA6hB,IAAA,MAAAM,iBAAA,aACAL,GAAAM,YAAAP,IACArY,IAAAxC,MAAA,MAAAqb,MAAA,KACAC,IAAA9Y,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAA+Y,IAAA/Y,GACA,aAAAA,EAAAoY,IACAY,QAAA5oB,SAAA6oB,gBAAA,mCACAD,GAAAE,aAAA,YAAAlZ,IACAA,EAAAgZ,GAAA/X,UAAAkY,QAAAC,gBACApZ,IAAAqZ,OACAP,GAAA9Y,EAAAnK,EAAAmK,EAAAlK,EAAAkK,EAAAjK,EAAAiK,EAAAuE,EAAAvE,EAAAyL,EAAAzL,EAAAsE,IAFA8T,IAKA,QAAAkB,IAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAAC,GAAArG,GACA,MAAAA,GAAAphB,OAAAohB,EAAAqG,MAAA,OAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAA1G,EAAA9H,GACA,GAAAqO,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAA5uB,GAAAkoB,EAAAzY,KAAA,kBAAA2e,EAAA,KAAAC,EACAjO,GAAA3Q,MAAczP,IAAA,EAAAgU,EAAA6a,GAAAJ,EAAAE,KAA0C3uB,IAAA,EAAAgU,EAAA6a,GAAAH,EAAAE,UACnDD,GAAAC,IACL1G,EAAAzY,KAAA,aAAAkf,EAAAP,EAAAQ,EAAAP,GAIA,QAAAS,GAAArkB,EAAAC,EAAAwd,EAAA9H,GACA3V,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChC2V,EAAA3Q,MAAczP,EAAAkoB,EAAAzY,KAAA8e,EAAArG,GAAA,eAAAoG,GAAA,EAAAta,EAAA6a,GAAApkB,EAAAC,MACTA,GACLwd,EAAAzY,KAAA8e,EAAArG,GAAA,UAAAxd,EAAA4jB,GAIA,QAAAS,GAAAtkB,EAAAC,EAAAwd,EAAA9H,GACA3V,IAAAC,EACA0V,EAAA3Q,MAAczP,EAAAkoB,EAAAzY,KAAA8e,EAAArG,GAAA,cAAAoG,GAAA,EAAAta,EAAA6a,GAAApkB,EAAAC,KACTA,GACLwd,EAAAzY,KAAA8e,EAAArG,GAAA,SAAAxd,EAAA4jB,GAIA,QAAAU,GAAAP,EAAAC,EAAAC,EAAAC,EAAA1G,EAAA9H,GACA,GAAAqO,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAA5uB,GAAAkoB,EAAAzY,KAAA8e,EAAArG,GAAA,2BACA9H,GAAA3Q,MAAczP,IAAA,EAAAgU,EAAA6a,GAAAJ,EAAAE,KAA0C3uB,IAAA,EAAAgU,EAAA6a,GAAAH,EAAAE,SACnD,KAAAD,GAAA,IAAAC,GACL1G,EAAAzY,KAAA8e,EAAArG,GAAA,SAAAyG,EAAA,IAAAC,EAAA,KAIA,gBAAAnkB,EAAAC,GACA,GAAAwd,MACA9H,IAOA,OANA3V,GAAA0jB,EAAA1jB,GAAAC,EAAAyjB,EAAAzjB,GACA8jB,EAAA/jB,EAAAwkB,WAAAxkB,EAAAykB,WAAAxkB,EAAAukB,WAAAvkB,EAAAwkB,WAAAhH,EAAA9H,GACA0O,EAAArkB,EAAAqkB,OAAApkB,EAAAokB,OAAA5G,EAAA9H,GACA2O,EAAAtkB,EAAAskB,MAAArkB,EAAAqkB,MAAA7G,EAAA9H,GACA4O,EAAAvkB,EAAA0kB,OAAA1kB,EAAA2kB,OAAA1kB,EAAAykB,OAAAzkB,EAAA0kB,OAAAlH,EAAA9H,GACA3V,EAAAC,EAAA,KACA,SAAAoQ,GAEA,IADA,GAAAP,GAAAva,KAAAkN,EAAAkT,EAAAtZ,SACA9G,EAAAkN,GAAAgb,GAAA3N,EAAA6F,EAAApgB,OAAAua,EAAAvG,EAAA8G,EACA,OAAAoN,GAAAmH,KAAA,MAaA,QAAAC,IAAAtb,GACA,QAAAA,EAAAxL,KAAA+mB,IAAAvb,IAAA,EAAAA,GAAA,EAGA,QAAAwb,IAAAxb,GACA,QAAAA,EAAAxL,KAAA+mB,IAAAvb,IAAA,EAAAA,GAAA,EAGA,QAAAyb,IAAAzb,GACA,QAAAA,EAAAxL,KAAA+mB,IAAA,EAAAvb,IAAA,IAAAA,EAAA,GAmDA,QAAA0b,IAAAC,GACA,gBAAArW,EAAAvI,GACA,GAAAgW,GAAA4I,GAAArW,EAAAwQ,GAAAxQ,IAAAyN,GAAAhW,EAAA+Y,GAAA/Y,IAAAgW,GACAmB,EAAAsE,GAAAlT,EAAA4O,EAAAnX,EAAAmX,GACA9U,EAAAoZ,GAAAlT,EAAAlG,EAAArC,EAAAqC,GACAnF,EAAAue,GAAAlT,EAAArL,QAAA8C,EAAA9C,QACA,iBAAA6M,GAKA,MAJAxB,GAAAyN,IAAAjM,GACAxB,EAAA4O,IAAApN,GACAxB,EAAAlG,IAAA0H,GACAxB,EAAArL,UAAA6M,GACAxB,EAAA,KAQA,QAAAsW,IAAAtW,EAAAvI,GACA,GAAAqC,GAAAoZ,IAAAlT,EAAAsR,GAAAtR,IAAAlG,GAAArC,EAAA6Z,GAAA7Z,IAAAqC,GACA3I,EAAA+hB,GAAAlT,EAAA7O,EAAAsG,EAAAtG,GACAC,EAAA8hB,GAAAlT,EAAA5O,EAAAqG,EAAArG,GACAuD,EAAAue,GAAAlT,EAAArL,QAAA8C,EAAA9C,QACA,iBAAA6M,GAKA,MAJAxB,GAAAlG,IAAA0H,GACAxB,EAAA7O,IAAAqQ,GACAxB,EAAA5O,IAAAoQ,GACAxB,EAAArL,UAAA6M,GACAxB,EAAA,IAIA,QAAAuW,IAAAF,GACA,gBAAArW,EAAAvI,GACA,GAAAgW,GAAA4I,GAAArW,EAAA6R,GAAA7R,IAAAyN,GAAAhW,EAAAoa,GAAApa,IAAAgW,GACApc,EAAA6hB,GAAAlT,EAAA3O,EAAAoG,EAAApG,GACAyI,EAAAoZ,GAAAlT,EAAAlG,EAAArC,EAAAqC,GACAnF,EAAAue,GAAAlT,EAAArL,QAAA8C,EAAA9C,QACA,iBAAA6M,GAKA,MAJAxB,GAAAyN,IAAAjM,GACAxB,EAAA3O,IAAAmQ,GACAxB,EAAAlG,IAAA0H,GACAxB,EAAArL,UAAA6M,GACAxB,EAAA,KAQA,QAAAwW,IAAAH,GACA,eAAAI,GAAA9b,GAGA,QAAA+b,GAAA1W,EAAAvI,GACA,GAAAgW,GAAA4I,GAAArW,EAAAuS,GAAAvS,IAAAyN,GAAAhW,EAAA8a,GAAA9a,IAAAgW,GACAmB,EAAAsE,GAAAlT,EAAA4O,EAAAnX,EAAAmX,GACA9U,EAAAoZ,GAAAlT,EAAAlG,EAAArC,EAAAqC,GACAnF,EAAAue,GAAAlT,EAAArL,QAAA8C,EAAA9C,QACA,iBAAA6M,GAKA,MAJAxB,GAAAyN,IAAAjM,GACAxB,EAAA4O,IAAApN,GACAxB,EAAAlG,IAAA5K,KAAAgQ,IAAAsC,EAAA7G,IACAqF,EAAArL,UAAA6M,GACAxB,EAAA,IAMA,MAlBArF,MAgBA+b,EAAAzD,MAAAwD,EAEAC,GACG,GAcH,QAAAC,MACA,OAA8CnV,GAA9C9a,EAAA,EAAAkN,EAAA2H,UAAA/N,OAAA7H,KAAkDe,EAAAkN,IAAOlN,EAAA,CACzD,KAAA8a,EAAAjG,UAAA7U,GAAA,KAAA8a,IAAA7b,GAAA,SAAAwgB,OAAA,iBAAA3E,EACA7b,GAAA6b,MAEA,UAAAoV,IAAAjxB,GAGA,QAAAixB,IAAAjxB,GACAvC,KAAAuC,IAGA,QAAAkxB,IAAAC,EAAAC,GACA,MAAAD,GAAA3H,OAAAgF,MAAA,SAAAtT,IAAA,SAAAW,GACA,GAAAwV,GAAA,GAAAtwB,EAAA8a,EAAAnD,QAAA,IAEA,IADA3X,GAAA,IAAAswB,EAAAxV,EAAA1I,MAAApS,EAAA,GAAA8a,IAAA1I,MAAA,EAAApS,IACA8a,IAAAuV,EAAArkB,eAAA8O,GAAA,SAAA2E,OAAA,iBAAA3E,EACA,QAAYxH,KAAAwH,EAAAwV,UA6CZ,QAAAnlB,IAAAmI,EAAAgd,GACA,OAAA3lB,GAAA3K,EAAA,EAAAkN,EAAAoG,EAAAxM,OAAqC9G,EAAAkN,IAAOlN,EAC5C,IAAA2K,EAAA2I,EAAAtT,IAAAswB,SACA,MAAA3lB,GAAAiK,MAKA,QAAA2b,IAAAjd,EAAAgd,EAAAtoB,GACA,OAAAhI,GAAA,EAAAkN,EAAAoG,EAAAxM,OAAkC9G,EAAAkN,IAAOlN,EACzC,GAAAsT,EAAAtT,GAAAswB,SAAA,CACAhd,EAAAtT,GAAAwwB,GAAAld,IAAAlB,MAAA,EAAApS,GAAAywB,OAAAnd,EAAAlB,MAAApS,EAAA,GACA,OAIA,MADA,OAAAgI,GAAAsL,EAAA7D,MAAmC6gB,OAAA1b,MAAA5M,IACnCsL,EAGA,QAAAod,IAAAC,GACA,UAAAC,UAAA,eAAoCD,EAAAxW,IAAA,SAAAmW,EAAAtwB,GACpC,MAAA6wB,MAAAC,UAAAR,GAAA,OAAAtwB,EAAA,MACGqvB,KAAA,UAGH,QAAA0B,IAAAJ,EAAAzX,GACA,GAAAgB,GAAAwW,GAAAC,EACA,iBAAAzlB,EAAAlL,GACA,MAAAkZ,GAAAgB,EAAAhP,GAAAlL,EAAA2wB,IAKA,QAAAK,IAAAjwB,GACA,GAAAkwB,GAAA7I,OAAAC,OAAA,MACAsI,IAUA,OARA5vB,GAAAmwB,QAAA,SAAAhmB,GACA,OAAAimB,KAAAjmB,GACAimB,IAAAF,IACAN,EAAAlhB,KAAAwhB,EAAAE,QAKAR,EAmQA,QAAAS,IAAAppB,GACA,gBAAA4R,EAAAyX,GACArpB,EAAA,MAAA4R,EAAAyX,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAA/d,GAAA+d,EAAAE,YACA,OAAAje,IAAA,SAAAA,EACA+d,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAAvD,EAAAjjB,GACA,gBAAAymB,GACA,MAAAxD,GAAAwD,EAAAF,aAAAvmB,IAoBA,QAAA3C,MACA,MAAAqpB,MAAAC,GAAAC,IAAAF,GAAAG,GAAAxpB,MAAAypB,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACAv1B,KAAAijB,MACAjjB,KAAAw1B,MACAx1B,KAAAy1B,MAAA,KA0BA,QAAAC,IAAApqB,EAAAqqB,EAAAC,GACA,GAAAxX,GAAA,GAAAmX,GAEA,OADAnX,GAAAyX,QAAAvqB,EAAAqqB,EAAAC,GACAxX,EAGA,QAAA0X,MACAjqB,OACAkqB,EAEA,KADA,GAAApS,GAAAvF,EAAA4X,GACA5X,IACAuF,EAAAuR,GAAA9W,EAAAoX,QAAA,GAAApX,EAAA6E,MAAA/W,KAAA,KAAAyX,GACAvF,IAAAqX,QAEAM,GAGA,QAAAE,MACAf,IAAAgB,GAAAb,GAAAxpB,OAAAypB,GACAS,GAAAI,GAAA,CACA,KACAL,KACG,QACHC,GAAA,EACAK,KACAlB,GAAA,GAIA,QAAAmB,MACA,GAAAxqB,GAAAwpB,GAAAxpB,MAAA8pB,EAAA9pB,EAAAqqB,EACAP,GAAAW,KAAAhB,IAAAK,EAAAO,GAAArqB,GAGA,QAAAuqB,MAEA,IADA,GAAA7L,GAAA6D,EAAA5D,EAAAwL,GAAAJ,EAAAxT,IACAoI,GACAA,EAAAvH,OACA2S,EAAApL,EAAAgL,QAAAI,EAAApL,EAAAgL,OACAjL,EAAAC,MAAAiL,QAEArH,EAAA5D,EAAAiL,MAAAjL,EAAAiL,MAAA,KACAjL,EAAAD,IAAAkL,MAAArH,EAAA4H,GAAA5H,EAGAmI,IAAAhM,EACAiM,GAAAZ,GAGA,QAAAY,IAAAZ,GACA,IAAAG,GAAA,CACAI,QAAA/1B,aAAA+1B,IACA,IAAAR,GAAAC,EAAAV,EACAS,GAAA,IACAC,EAAAxT,MAAA+T,GAAAz1B,WAAAu1B,GAAAN,IACAc,QAAA9pB,cAAA8pB,OAEAA,QAAA/pB,YAAA2pB,GAAAC,KACAP,GAAA,EAAAZ,GAAAc,MA6BA,QAAAS,IAAAC,EAAAC,EAAA9Z,EAAA+Z,GAEA,QAAAJ,GAAAK,GACA,MAAAH,GAAAG,EAAA,GAAAC,QAAAD,OAqDA,MAlDAL,GAAAlkB,MAAAkkB,EAEAA,EAAA1qB,KAAA,SAAA+qB,GACA,MAAAH,GAAAG,EAAA,GAAAC,MAAAD,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGAL,EAAA9b,MAAA,SAAAmc,GACA,GAAAE,GAAAP,EAAAK,GACAG,EAAAR,EAAA1qB,KAAA+qB,EACA,OAAAA,GAAAE,EAAAC,EAAAH,EAAAE,EAAAC,GAGAR,EAAA9e,OAAA,SAAAmf,EAAAlrB,GACA,MAAAgrB,GAAAE,EAAA,GAAAC,QAAAD,IAAA,MAAAlrB,EAAA,EAAAE,KAAAyG,MAAA3G,IAAAkrB,GAGAL,EAAAS,MAAA,SAAAta,EAAAC,EAAAjR,GACA,GAAAsrB,KAGA,IAFAta,EAAA6Z,EAAA1qB,KAAA6Q,GACAhR,EAAA,MAAAA,EAAA,EAAAE,KAAAyG,MAAA3G,KACAgR,EAAAC,GAAAjR,EAAA,SAAAsrB,EACA,GAAAA,GAAAnkB,KAAA,GAAAgkB,QAAAna,WAAoCga,EAAAha,EAAAhR,GAAA+qB,EAAA/Z,KAAAC,EACpC,OAAAqa,IAGAT,EAAA9kB,OAAA,SAAA3E,GACA,MAAA0pB,IAAA,SAAAI,GACA,KAAAH,EAAAG,IAAA9pB,EAAA8pB,MAAAK,QAAAL,EAAA,IACK,SAAAA,EAAAlrB,GACL,OAAAA,GAAA,QAAAgrB,EAAAE,EAAA,IAAA9pB,EAAA8pB,SAIAha,IACA2Z,EAAA3Z,MAAA,SAAAF,EAAAvI,GAGA,MAFA+iB,IAAAD,SAAAva,GAAAya,GAAAF,SAAA9iB,GACAsiB,EAAAS,IAAAT,EAAAU,IACAvrB,KAAAyG,MAAAuK,EAAAsa,GAAAC,MAGAZ,EAAAa,MAAA,SAAA1rB,GAEA,MADAA,GAAAE,KAAAyG,MAAA3G,GACA2rB,SAAA3rB,MAAA,EACAA,EAAA,EACA6qB,EAAA9kB,OAAAklB,EACA,SAAApa,GAA6B,MAAAoa,GAAApa,GAAA7Q,IAAA,GAC7B,SAAA6Q,GAA6B,MAAAga,GAAA3Z,MAAA,EAAAL,GAAA7Q,IAAA,IAH7B6qB,EADA,OAQAA,EAmFA,QAAAe,IAAAl0B,GACA,MAAAozB,IAAA,SAAAI,GACAA,EAAAW,QAAAX,EAAAY,WAAAZ,EAAAa,SAAA,EAAAr0B,GAAA,GACAwzB,EAAAc,SAAA,UACG,SAAAd,EAAAlrB,GACHkrB,EAAAW,QAAAX,EAAAY,UAAA,EAAA9rB,IACG,SAAAgR,EAAAvI,GACH,OAAAA,EAAAuI,GAAAvI,EAAAwjB,oBAAAjb,EAAAib,qBAAAC,IAAAC,KA6FA,QAAAC,IAAA10B,GACA,MAAAozB,IAAA,SAAAI,GACAA,EAAAmB,WAAAnB,EAAAoB,cAAApB,EAAAqB,YAAA,EAAA70B,GAAA,GACAwzB,EAAAsB,YAAA,UACG,SAAAtB,EAAAlrB,GACHkrB,EAAAmB,WAAAnB,EAAAoB,aAAA,EAAAtsB,IACG,SAAAgR,EAAAvI,GACH,OAAAA,EAAAuI,GAAAmb,KA+JA,QAAAM,IAAAC,GACA,KAAA1jB,EAAA2jB,GAAArM,KAAAoM,IAAA,SAAAvV,OAAA,mBAAAuV,EAEA,IAAA1jB,GACA4jB,EAAA5jB,EAAA,QACA6jB,EAAA7jB,EAAA,QACAkV,EAAAlV,EAAA,QACA8jB,EAAA9jB,EAAA,OACAub,IAAAvb,EAAA,GACA3U,EAAA2U,EAAA,KAAAA,EAAA,GACA+jB,IAAA/jB,EAAA,GACAgkB,EAAAhkB,EAAA,KAAAA,EAAA,GAAAc,MAAA,GACAkB,EAAAhC,EAAA,MAGA,OAAAgC,GAAA+hB,GAAA,EAAA/hB,EAAA,KAGAiiB,GAAAjiB,OAAA,KAGAuZ,GAAA,MAAAqI,GAAA,MAAAC,KAAAtI,GAAA,EAAAqI,EAAA,IAAAC,EAAA,KAEAz4B,KAAAw4B,OACAx4B,KAAAy4B,QACAz4B,KAAA8pB,OACA9pB,KAAA04B,SACA14B,KAAAmwB,OACAnwB,KAAAC,QACAD,KAAA24B,QACA34B,KAAA44B,YACA54B,KAAA4W,OAiBA,QAAAkiB,IAAAxhB,GACA,MAAAA,GAgJA,QAAAyhB,IAAAtN,GAIA,MAHAuN,IAAAC,GAAAxN,GACAjsB,EAAAssB,OAAAkN,GAAAlN,OACAtsB,EAAA05B,aAAAF,GAAAE,aACAF,GAgBA,QAAAG,IAAA1c,GACA,MAAAA,EAAAlF,GAAAkF,EAAAlF,EAAA,KACA,GAAAuf,GAAA,GAAAC,WAAAta,EAAA8M,EAAA9M,MAAA2c,EAAA3c,EAAA4c,EAAA5c,EAAA6c,EAAA7c,EAAA8c,EAEA,OADAzC,GAAA0C,YAAA/c,EAAAlF,GACAuf,EAEA,UAAAC,MAAAta,EAAAlF,EAAAkF,EAAA8M,EAAA9M,MAAA2c,EAAA3c,EAAA4c,EAAA5c,EAAA6c,EAAA7c,EAAA8c,GAGA,QAAAE,IAAAhd,GACA,MAAAA,EAAAlF,GAAAkF,EAAAlF,EAAA,KACA,GAAAuf,GAAA,GAAAC,WAAA2C,OAAAjd,EAAA8M,EAAA9M,MAAA2c,EAAA3c,EAAA4c,EAAA5c,EAAA6c,EAAA7c,EAAA8c,GAEA,OADAzC,GAAA6C,eAAAld,EAAAlF,GACAuf,EAEA,UAAAC,WAAA2C,IAAAjd,EAAAlF,EAAAkF,EAAA8M,EAAA9M,MAAA2c,EAAA3c,EAAA4c,EAAA5c,EAAA6c,EAAA7c,EAAA8c,IAGA,QAAAK,IAAAriB,GACA,OAAUA,IAAAgS,EAAA,EAAA9M,EAAA,EAAA2c,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAGV,QAAAM,IAAAC,GA8GA,QAAAC,GAAAzB,EAAA0B,GACA,gBAAAlD,GACA,GAIA7oB,GACAgsB,EACAnO,EANAoO,KACA52B,KACAie,EAAA,EACA/Q,EAAA8nB,EAAAluB,MAOA,KAFA0sB,YAAAC,QAAAD,EAAA,GAAAC,QAAAD,OAEAxzB,EAAAkN,GACA,KAAA8nB,EAAA6B,WAAA72B,KACA42B,EAAAnnB,KAAAulB,EAAA5iB,MAAA6L,EAAAje,IACA,OAAA22B,EAAAG,GAAAnsB,EAAAqqB,EAAA+B,SAAA/2B,KAAA2K,EAAAqqB,EAAA+B,SAAA/2B,GACA22B,EAAA,MAAAhsB,EAAA,SACA6d,EAAAkO,EAAA/rB,QAAA6d,EAAAgL,EAAAmD,IACAC,EAAAnnB,KAAA9E,GACAsT,EAAAje,EAAA,EAKA,OADA42B,GAAAnnB,KAAAulB,EAAA5iB,MAAA6L,EAAAje,IACA42B,EAAAvH,KAAA,KAIA,QAAA2H,GAAAhC,EAAAiC,GACA,gBAAAL,GACA,GAAAzd,GAAAmd,GAAA,MACAt2B,EAAAk3B,EAAA/d,EAAA6b,EAAA4B,GAAA,KACA,IAAA52B,GAAA42B,EAAA9vB,OAAA,WAMA,IAHA,KAAAqS,OAAA2c,EAAA3c,EAAA2c,EAAA,MAAA3c,EAAA2K,GAGA,KAAA3K,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAge,EAAA,KAAAhe,GAAA,IACA,IAAAie,GAAA,KAAAje,GAAAgd,GAAAG,GAAAnd,EAAAlF,IAAA4gB,YAAAoC,EAAAX,GAAAnd,EAAAlF,IAAAogB,QACAlb,GAAA8M,EAAA,EACA9M,IAAA,KAAAA,MAAAge,EAAA,OAAAhe,EAAAke,GAAAD,EAAA,KAAAje,EAAAge,EAAA,EAAAhe,EAAAme,GAAAF,EAAA,KAKA,WAAAje,IACAA,EAAA2c,GAAA3c,EAAAoe,EAAA,MACApe,EAAA4c,GAAA5c,EAAAoe,EAAA,IACApB,GAAAhd,IAIA8d,EAAA9d,IAIA,QAAA+d,GAAA/d,EAAA6b,EAAA4B,EAAA3Y,GAOA,IANA,GAGAtT,GACAwjB,EAJAnuB,EAAA,EACAkN,EAAA8nB,EAAAluB,OACAmf,EAAA2Q,EAAA9vB,OAIA9G,EAAAkN,GAAA,CACA,GAAA+Q,GAAAgI,EAAA,QAEA,IADAtb,EAAAqqB,EAAA6B,WAAA72B,KACA,KAAA2K,GAGA,GAFAA,EAAAqqB,EAAA+B,OAAA/2B,KACAmuB,EAAAqJ,EAAA7sB,IAAAmsB,IAAA9B,EAAA+B,OAAA/2B,KAAA2K,IACAwjB,IAAAlQ,EAAAkQ,EAAAhV,EAAAyd,EAAA3Y,IAAA,eACO,IAAAtT,GAAAisB,EAAAC,WAAA5Y,KACP,SAIA,MAAAA,GAGA,QAAAwZ,GAAAte,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAwqB,EAAA9O,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAA2K,EAAA6T,EAAAzqB,EAAA,GAAAwb,eAAA1oB,EAAAkN,EAAA,GAAApG,WAGA,QAAA8wB,GAAAze,EAAAyd,EAAA52B,GACA,GAAAkN,GAAA2qB,EAAAjP,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAAge,EAAAW,EAAA5qB,EAAA,GAAAwb,eAAA1oB,EAAAkN,EAAA,GAAApG,WAGA,QAAAixB,GAAA5e,EAAAyd,EAAA52B,GACA,GAAAkN,GAAA8qB,EAAApP,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAAge,EAAAc,EAAA/qB,EAAA,GAAAwb,eAAA1oB,EAAAkN,EAAA,GAAApG,WAGA,QAAAoxB,GAAA/e,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAirB,EAAAvP,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAA8M,EAAAmS,EAAAlrB,EAAA,GAAAwb,eAAA1oB,EAAAkN,EAAA,GAAApG,WAGA,QAAAuxB,GAAAlf,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAorB,EAAA1P,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAA8M,EAAAsS,EAAArrB,EAAA,GAAAwb,eAAA1oB,EAAAkN,EAAA,GAAApG,WAGA,QAAA0xB,GAAArf,EAAAyd,EAAA52B,GACA,MAAAk3B,GAAA/d,EAAAsf,EAAA7B,EAAA52B,GAGA,QAAA04B,GAAAvf,EAAAyd,EAAA52B,GACA,MAAAk3B,GAAA/d,EAAAwf,EAAA/B,EAAA52B,GAGA,QAAA44B,GAAAzf,EAAAyd,EAAA52B,GACA,MAAAk3B,GAAA/d,EAAA0f,EAAAjC,EAAA52B,GAGA,QAAA84B,GAAA3f,GACA,MAAA4f,GAAA5f,EAAAkb,UAGA,QAAA2E,GAAA7f,GACA,MAAA8f,GAAA9f,EAAAkb,UAGA,QAAA6E,GAAA/f,GACA,MAAAggB,GAAAhgB,EAAAigB,YAGA,QAAAC,GAAAlgB,GACA,MAAAmgB,GAAAngB,EAAAigB,YAGA,QAAAG,GAAApgB,GACA,MAAAqgB,KAAArgB,EAAAsgB,YAAA,KAGA,QAAAC,GAAAvgB,GACA,MAAA4f,GAAA5f,EAAA0b,aAGA,QAAA8E,GAAAxgB,GACA,MAAA8f,GAAA9f,EAAA0b,aAGA,QAAA+E,GAAAzgB,GACA,MAAAggB,GAAAhgB,EAAA0gB,eAGA,QAAAC,GAAA3gB,GACA,MAAAmgB,GAAAngB,EAAA0gB,eAGA,QAAAE,GAAA5gB,GACA,MAAAqgB,KAAArgB,EAAA6gB,eAAA,KAvQA,GAAAvB,GAAAjC,EAAAyD,SACAtB,EAAAnC,EAAAhD,KACAqF,EAAArC,EAAAlE,KACAkH,EAAAhD,EAAA0D,QACAjB,EAAAzC,EAAA2D,KACApB,EAAAvC,EAAA4D,UACAd,EAAA9C,EAAA6D,OACAlB,EAAA3C,EAAA8D,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAzC,GACAjsB,EAAAquB,EACA2B,EAAAzB,EACAtuB,EAAAwuB,EACAwB,EAAArB,EACA1uB,EAAA,KACAwO,EAAAwhB,GACAta,EAAAsa,GACA7E,EAAA8E,GACAC,EAAAC,GACA7c,EAAA8c,GACA9E,EAAA+E,GACA/U,EAAAgV,GACAlF,EAAAmF,GACApX,EAAAyV,EACAvD,EAAAmF,GACA7D,EAAA8D,GACAjE,EAAAkE,GACAhE,EAAAiE,GACAtnB,EAAA,KACAunB,EAAA,KACAtnB,EAAAunB,GACAC,EAAAC,GACAnE,EAAAoE,GACAC,IAAAC,IAGAC,GACArxB,EAAAivB,EACAe,EAAAd,EACAjvB,EAAAkvB,EACAc,EAAAZ,EACAnvB,EAAA,KACAwO,EAAA4iB,GACA1b,EAAA0b,GACAjG,EAAAkG,GACAnB,EAAAoB,GACAhe,EAAAie,GACAjG,EAAAkG,GACAlW,EAAAmW,GACArG,EAAAsG,GACAvY,EAAAiW,EACA/D,EAAAsG,GACAhF,EAAAiF,GACApF,EAAAqF,GACAnF,EAAAoF,GACAzoB,EAAA,KACAunB,EAAA,KACAtnB,EAAAyoB,GACAjB,EAAAkB,GACApF,EAAAqF,GACAhB,IAAAC,IAGArE,GACA/sB,EAAAmtB,EACA6C,EAAA1C,EACArtB,EAAAwtB,EACAwC,EAAArC,EACA1tB,EAAA6tB,EACArf,EAAA0jB,GACAxc,EAAAwc,GACA/G,EAAAgH,GACAjC,EAAAiC,GACA7e,EAAA8e,GACA9G,EAAA+G,GACA/W,EAAAgX,GACAlH,EAAAmH,GACApZ,EAAA2T,EACAzB,EAAAmH,GACA7F,EAAA8F,GACAjG,EAAAkG,GACAhG,EAAAiG,GACAtpB,EAAA0kB,EACA6C,EAAA3C,EACA3kB,EAAAspB,GACA9B,EAAA+B,GACAjG,EAAAkG,GACA7B,IAAA8B,GAwKA,OApKAhH,GAAA1iB,EAAAyiB,EAAAkC,EAAAjC,GACAA,EAAA6E,EAAA9E,EAAAoC,EAAAnC,GACAA,EAAA/rB,EAAA8rB,EAAAgC,EAAA/B,GACAoF,EAAA9nB,EAAAyiB,EAAAkC,EAAAmD,GACAA,EAAAP,EAAA9E,EAAAoC,EAAAiD,GACAA,EAAAnxB,EAAA8rB,EAAAgC,EAAAqD,IAgKAtT,OAAA,SAAAwM,GACA,GAAA9b,GAAAud,EAAAzB,GAAA,GAAA0B,EAEA,OADAxd,GAAAykB,SAAA,WAA+B,MAAA3I,IAC/B9b,GAEAiV,MAAA,SAAA6G,GACA,GAAAlR,GAAAkT,EAAAhC,GAAA,GAAAa,GAEA,OADA/R,GAAA6Z,SAAA,WAA+B,MAAA3I,IAC/BlR,GAEA8Z,UAAA,SAAA5I,GACA,GAAA9b,GAAAud,EAAAzB,GAAA,GAAA8G,EAEA,OADA5iB,GAAAykB,SAAA,WAA+B,MAAA3I,IAC/B9b,GAEA2kB,SAAA,SAAA7I,GACA,GAAAlR,GAAAkT,EAAAhC,EAAAmB,GAEA,OADArS,GAAA6Z,SAAA,WAA+B,MAAA3I,IAC/BlR,IAUA,QAAA6S,IAAA/hB,EAAAsgB,EAAAv4B,GACA,GAAA6pB,GAAA5R,EAAA,SACAgiB,GAAApQ,GAAA5R,KAAA,GACA9N,EAAA8vB,EAAA9vB,MACA,OAAA0f,IAAA1f,EAAAnK,EAAA,GAAAoc,OAAApc,EAAAmK,EAAA,GAAAuoB,KAAA6F,GAAA0B,KAGA,QAAAkH,IAAA5V,GACA,MAAAA,GAAA6V,QAAAC,GAAA,QAGA,QAAAzD,IAAA0D,GACA,UAAAC,QAAA,OAAAD,EAAA9jB,IAAA2jB,IAAAzO,KAAA;CAGA,QAAAmL,IAAAyD,GAEA,IADA,GAAA9jB,MAAcna,KAAAkN,EAAA+wB,EAAAn3B,SACd9G,EAAAkN,GAAAiN,EAAA8jB,EAAAj+B,GAAA0oB,eAAA1oB,CACA,OAAAma,GAGA,QAAAkjB,IAAAlkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAAge,GAAAjqB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAs2B,IAAAjkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAAme,GAAApqB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAw2B,IAAAnkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,GACA,OAAAkN,IAAAiM,EAAAke,GAAAnqB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAA02B,IAAArkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAAlF,GAAA/G,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAy2B,IAAApkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAAlF,GAAA/G,EAAA,KAAAA,EAAA,gBAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAA22B,IAAAtkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAA,gCAAA0b,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAAoe,EAAArqB,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAm2B,IAAA9jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA8M,EAAA/Y,EAAA,KAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAA+1B,IAAA1jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,KAAAjM,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAi2B,IAAA5jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA8M,EAAA,EAAA9M,KAAAjM,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAg2B,IAAA3jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA2c,GAAA5oB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAo2B,IAAA/jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA4c,GAAA7oB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAq2B,IAAAhkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA6c,GAAA9oB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAAk2B,IAAA7jB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAixB,GAAAvV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,IAAAiM,EAAA8c,GAAA/oB,EAAA,GAAAlN,EAAAkN,EAAA,GAAApG,WAGA,QAAA42B,IAAAvkB,EAAAyd,EAAA52B,GACA,GAAAkN,GAAAkxB,GAAAxV,KAAAgO,EAAAxkB,MAAApS,IAAA,GACA,OAAAkN,GAAAlN,EAAAkN,EAAA,GAAApG,UAGA,QAAA6zB,IAAAxhB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAib,UAAAtQ,EAAA,GAGA,QAAA8W,IAAAzhB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAsgB,WAAA3V,EAAA,GAGA,QAAAgX,IAAA3hB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAsgB,WAAA,OAAA3V,EAAA,GAGA,QAAAiX,IAAA5hB,EAAA2K,GACA,MAAA6S,IAAA,EAAA0H,GAAA7kB,MAAA8kB,GAAAnlB,MAAA2K,EAAA,GAGA,QAAAkX,IAAA7hB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAolB,kBAAAza,EAAA,GAGA,QAAAmX,IAAA9hB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAigB,WAAA,EAAAtV,EAAA,GAGA,QAAAoX,IAAA/hB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAqlB,aAAA1a,EAAA,GAGA,QAAAqX,IAAAhiB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAslB,aAAA3a,EAAA,GAGA,QAAAsX,IAAAjiB,EAAA2K,GACA,MAAA6S,IAAA+H,GAAAllB,MAAA8kB,GAAAnlB,MAAA2K,EAAA,GAGA,QAAAuX,IAAAliB,GACA,MAAAA,GAAAkb,SAGA,QAAAiH,IAAAniB,EAAA2K,GACA,MAAA6S,IAAAgI,GAAAnlB,MAAA8kB,GAAAnlB,MAAA2K,EAAA,GAGA,QAAA0X,IAAAriB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAylB,cAAA,IAAA9a,EAAA,GAGA,QAAA4X,IAAAviB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAylB,cAAA,IAAA9a,EAAA,GAGA,QAAA6X,IAAAxiB,GACA,GAAAuR,GAAAvR,EAAAob,mBACA,QAAA7J,EAAA,OAAAA,MAAA,MACAiM,GAAAjM,EAAA,YACAiM,GAAAjM,EAAA,UAGA,QAAAqR,IAAA5iB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAyb,aAAA9Q,EAAA,GAGA,QAAAkY,IAAA7iB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA6gB,cAAAlW,EAAA,GAGA,QAAAmY,IAAA9iB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA6gB,cAAA,OAAAlW,EAAA,GAGA,QAAAoY,IAAA/iB,EAAA2K,GACA,MAAA6S,IAAA,EAAAkI,GAAArlB,MAAAslB,GAAA3lB,MAAA2K,EAAA,GAGA,QAAAqY,IAAAhjB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA4lB,qBAAAjb,EAAA,GAGA,QAAAsY,IAAAjjB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA0gB,cAAA,EAAA/V,EAAA,GAGA,QAAAuY,IAAAljB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA6lB,gBAAAlb,EAAA,GAGA,QAAAwY,IAAAnjB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAA8lB,gBAAAnb,EAAA,GAGA,QAAAyY,IAAApjB,EAAA2K,GACA,MAAA6S,IAAAuI,GAAA1lB,MAAAslB,GAAA3lB,MAAA2K,EAAA,GAGA,QAAA0Y,IAAArjB,GACA,MAAAA,GAAA0b,YAGA,QAAA4H,IAAAtjB,EAAA2K,GACA,MAAA6S,IAAAwI,GAAA3lB,MAAAslB,GAAA3lB,MAAA2K,EAAA,GAGA,QAAA4Y,IAAAvjB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAimB,iBAAA,IAAAtb,EAAA,GAGA,QAAA6Y,IAAAxjB,EAAA2K,GACA,MAAA6S,IAAAxd,EAAAimB,iBAAA,IAAAtb,EAAA,GAGA,QAAA8Y,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAwD,IAAAlX,GAMA,MALAmX,IAAA/I,GAAApO,GACAjsB,EAAAqjC,WAAAD,GAAA9W,OACAtsB,EAAAsjC,UAAAF,GAAAnR,MACAjyB,EAAA0hC,UAAA0B,GAAA1B,UACA1hC,EAAA2hC,SAAAyB,GAAAzB,SACAyB,GAKA,QAAAG,IAAAjM,GACA,MAAAA,GAAAkM,cAOA,QAAAC,IAAA/I,GACA,GAAApD,GAAA,GAAAC,MAAAmD,EACA,OAAAjZ,OAAA6V,GAAA,KAAAA,EAcA,QAAAoM,IAAAhM,GAOA,QAAA5E,GAAA7V,GACA,GAAAiB,GAAAjB,EAAA,GAAAnZ,EAAA2G,EAAAwE,IAAAiP,EACA,KAAApa,EAAA,CACA,GAAA6/B,IAAAC,GAAA,MAAAD,EACAl5B,GAAA0T,IAAAD,EAAApa,EAAA+/B,EAAAtwB,KAAA0J,IAEA,MAAAya,IAAA5zB,EAAA,GAAA4zB,EAAA9sB,QAZA,GAAAH,GAAAsT,IACA8lB,KACAF,EAAAC,EAoCA,OAlCAlM,GAAA,MAAAA,KAAAoM,GAAAp3B,KAAAgrB,GAWA5E,EAAA+Q,OAAA,SAAA9gC,GACA,IAAA4V,UAAA/N,OAAA,MAAAi5B,GAAA3tB,OACA2tB,MAAAp5B,EAAAsT,GAEA,KADA,GAAAd,GAAAiB,EAAApa,KAAAkN,EAAAjO,EAAA6H,SACA9G,EAAAkN,GAAAvG,EAAAs5B,IAAA7lB,GAAAjB,EAAAla,EAAAe,IAAA,KAAA2G,EAAA0T,IAAAD,EAAA2lB,EAAAtwB,KAAA0J,GACA,OAAA6V,IAGAA,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAA8sB,EAAAoM,GAAAp3B,KAAA3J,GAAA+vB,GAAA4E,EAAAxhB,SAGA4c,EAAA6Q,QAAA,SAAA5gC,GACA,MAAA4V,WAAA/N,QAAA+4B,EAAA5gC,EAAA+vB,GAAA6Q,GAGA7Q,EAAAzP,KAAA,WACA,MAAAqgB,MACAG,UACAnM,SACAiM,YAGA7Q,EAGA,QAAAkR,MAcA,QAAAC,KACA,GAAAjzB,GAAA6yB,IAAAj5B,OACAs5B,EAAAC,EAAA,GAAAA,EAAA,GACA/mB,EAAA+mB,EAAAD,EAAA,GACA7mB,EAAA8mB,EAAA,EAAAD,EACA93B,IAAAiR,EAAAD,GAAA9Q,KAAA+G,IAAA,EAAArC,EAAAozB,EAAA,EAAAC,GACAlpB,IAAA/O,EAAAE,KAAAyG,MAAA3G,IACAgR,IAAAC,EAAAD,EAAAhR,GAAA4E,EAAAozB,IAAAnL,EACAqL,EAAAl4B,GAAA,EAAAg4B,GACAjpB,IAAAiC,EAAA9Q,KAAA6O,MAAAiC,GAAAknB,EAAAh4B,KAAA6O,MAAAmpB,GACA,IAAAC,GAAA7M,GAAA1mB,GAAAiN,IAAA,SAAAna,GAA2C,MAAAsZ,GAAAhR,EAAAtI,GAC3C,OAAA0gC,GAAAN,EAAAK,EAAAL,UAAAK,GAxBA,GAIAn4B,GACAk4B,EALAxR,EAAA4Q,KAAAC,QAAAhhC,QACAkhC,EAAA/Q,EAAA+Q,OACAW,EAAA1R,EAAA4E,MACAyM,GAAA,KAGAhpB,GAAA,EACAipB,EAAA,EACAC,EAAA,EACApL,EAAA,EAoEA,cAlEAnG,GAAA6Q,QAgBA7Q,EAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAA9gC,GAAAkhC,KAAAJ,KAGA/Q,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAu5B,IAAAphC,EAAA,IAAAA,EAAA,IAAAkhC,KAAAE,EAAAjuB,SAGA4c,EAAA2R,WAAA,SAAA1hC,GACA,MAAAohC,KAAAphC,EAAA,IAAAA,EAAA,IAAAoY,GAAA,EAAA8oB,KAGAnR,EAAAwR,UAAA,WACA,MAAAA,IAGAxR,EAAA1mB,KAAA,WACA,MAAAA,IAGA0mB,EAAA3X,MAAA,SAAApY,GACA,MAAA4V,WAAA/N,QAAAuQ,IAAApY,EAAAkhC,KAAA9oB,GAGA2X,EAAA5a,QAAA,SAAAnV,GACA,MAAA4V,WAAA/N,QAAAw5B,EAAAC,EAAA/3B,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAA9M,IAAAkhC,KAAAG,GAGAtR,EAAAsR,aAAA,SAAArhC,GACA,MAAA4V,WAAA/N,QAAAw5B,EAAA93B,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAA9M,IAAAkhC,KAAAG,GAGAtR,EAAAuR,aAAA,SAAAthC,GACA,MAAA4V,WAAA/N,QAAAy5B,EAAA/3B,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAA9M,IAAAkhC,KAAAI,GAGAvR,EAAAmG,MAAA,SAAAl2B,GACA,MAAA4V,WAAA/N,QAAAquB,EAAA3sB,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAA9M,IAAAkhC,KAAAhL,GAGAnG,EAAAzP,KAAA,WACA,MAAA2gB,MACAH,YACAnM,MAAAyM,GACAhpB,SACAipB,gBACAC,gBACApL,UAGAgL,IAGA,QAAAS,IAAA5R,GACA,GAAAzP,GAAAyP,EAAAzP,IAUA,OARAyP,GAAA5a,QAAA4a,EAAAuR,mBACAvR,GAAAsR,mBACAtR,GAAAuR,aAEAvR,EAAAzP,KAAA,WACA,MAAAqhB,IAAArhB,MAGAyP,EAGA,QAAA6R,MACA,MAAAD,IAAAV,KAAAI,aAAA,IAeA,QAAAQ,IAAAr2B,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAAuJ,GAAqB,OAAAA,EAAAvJ,GAAAC,GACrBq2B,GAAAr2B,GAGA,QAAAs2B,IAAAC,GACA,gBAAAx2B,EAAAC,GACA,GAAAyO,GAAA8nB,EAAAx2B,KAAAC,KACA,iBAAAsJ,GAAwB,MAAAA,IAAAvJ,EAAA,EAAAuJ,GAAAtJ,EAAA,EAAAyO,EAAAnF,KAIxB,QAAAktB,IAAAC,GACA,gBAAA12B,EAAAC,GACA,GAAAoM,GAAAqqB,EAAA12B,KAAAC,KACA,iBAAAoQ,GAAwB,MAAAA,IAAA,EAAArQ,EAAAqQ,GAAA,EAAApQ,EAAAoM,EAAAgE,KAIxB,QAAAsmB,IAAArB,EAAAM,EAAAY,EAAAE,GACA,GAAAzN,GAAAqM,EAAA,GAAApM,EAAAoM,EAAA,GAAAsB,EAAAhB,EAAA,GAAApe,EAAAoe,EAAA,EAGA,OAFA1M,GAAAD,KAAAuN,EAAAtN,EAAAD,GAAA2N,EAAAF,EAAAlf,EAAAof,KACA3N,EAAAuN,EAAAvN,EAAAC,GAAA0N,EAAAF,EAAAE,EAAApf,IACA,SAAAjO,GAAsB,MAAAqtB,GAAA3N,EAAA1f,KAGtB,QAAAstB,IAAAvB,EAAAM,EAAAY,EAAAE,GACA,GAAAljB,GAAAzV,KAAAuD,IAAAg0B,EAAAj5B,OAAAu5B,EAAAv5B,QAAA,EACAqS,EAAA,GAAAJ,OAAAkF,GACAnH,EAAA,GAAAiC,OAAAkF,GACAje,IAQA,KALA+/B,EAAA9hB,GAAA8hB,EAAA,KACAA,IAAA3tB,QAAAguB,UACAC,IAAAjuB,QAAAguB,aAGApgC,EAAAie,GACA9E,EAAAnZ,GAAAihC,EAAAlB,EAAA//B,GAAA+/B,EAAA//B,EAAA,IACA8W,EAAA9W,GAAAmhC,EAAAd,EAAArgC,GAAAqgC,EAAArgC,EAAA,GAGA,iBAAAgU,GACA,GAAAhU,GAAAuhC,GAAAxB,EAAA/rB,EAAA,EAAAiK,GAAA,CACA,OAAAnH,GAAA9W,GAAAmZ,EAAAnZ,GAAAgU,KAIA,QAAAuL,IAAAiiB,EAAAv4B,GACA,MAAAA,GACA82B,OAAAyB,EAAAzB,UACAnM,MAAA4N,EAAA5N,SACA6N,YAAAD,EAAAC,eACAC,MAAAF,EAAAE,SAKA,QAAAC,IAAAV,EAAAE,GASA,QAAAhB,KAGA,MAFAyB,GAAAp5B,KAAAuD,IAAAg0B,EAAAj5B,OAAAu5B,EAAAv5B,QAAA,EAAAw6B,GAAAF,GACAS,EAAAC,EAAA,KACA9S,EAGA,QAAAA,GAAAhb,GACA,OAAA6tB,MAAAD,EAAA7B,EAAAM,EAAAqB,EAAAV,GAAAC,KAAAc,MAAA/tB,GAfA,GAIA4tB,GACAC,EACAC,EANA/B,EAAAiC,GACA3B,EAAA2B,GACAD,EAAAN,GACAC,GAAA,CAuCA,OAxBA1S,GAAAiT,OAAA,SAAAhuB,GACA,OAAA6tB,MAAAF,EAAAvB,EAAAN,EAAAe,GAAAY,EAAAR,GAAAC,SAAAltB,IAGA+a,EAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAAmC,GAAAt5B,KAAA3J,EAAAkjC,IAAAhC,KAAAJ,EAAA3tB,SAGA4c,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAu5B,EAAAL,GAAAp3B,KAAA3J,GAAAkhC,KAAAE,EAAAjuB,SAGA4c,EAAA2R,WAAA,SAAA1hC,GACA,MAAAohC,GAAAL,GAAAp3B,KAAA3J,GAAA8iC,EAAAK,GAAAjC,KAGAnR,EAAA0S,MAAA,SAAAziC,GACA,MAAA4V,WAAA/N,QAAA46B,IAAAziC,EAAAkhC,KAAAuB,GAGA1S,EAAAyS,YAAA,SAAAxiC,GACA,MAAA4V,WAAA/N,QAAAi7B,EAAA9iC,EAAAkhC,KAAA4B,GAGA5B,IAgCA,QAAAkC,IAAArT,GACA,GAAA+Q,GAAA/Q,EAAA+Q,MA6BA,OA3BA/Q,GAAAsT,MAAA,SAAA9oB,GACA,GAAAL,GAAA4mB,GACA,OAAAuC,IAAAnpB,EAAA,GAAAA,IAAArS,OAAA,SAAA0S,EAAA,GAAAA,IAGAwV,EAAAuT,WAAA,SAAA/oB,EAAAwb,GACA,MAAAuN,IAAAxC,IAAAvmB,EAAAwb,IAGAhG,EAAAwT,KAAA,SAAAhpB,GACA,GAAAL,GAAA4mB,IACA//B,EAAAmZ,EAAArS,OAAA,EACAoG,EAAA,MAAAsM,EAAA,GAAAA,EACAF,EAAAH,EAAA,GACAI,EAAAJ,EAAAnZ,GACAsI,EAAA+Q,EAAAC,EAAAC,EAAArM,EASA,OAPA5E,KACAA,EAAA+Q,EAAA7Q,KAAAyG,MAAAqK,EAAAhR,KAAAE,KAAAC,KAAA8Q,EAAAjR,KAAA4E,GACAiM,EAAA,GAAA3Q,KAAAyG,MAAAqK,EAAAhR,KACA6Q,EAAAnZ,GAAAwI,KAAAC,KAAA8Q,EAAAjR,KACAy3B,EAAA5mB,IAGA6V,GAGAA,EAGA,QAAAyT,MACA,GAAAzT,GAAA2S,GAAAb,GAAAjS,GAMA,OAJAG,GAAAzP,KAAA,WACA,MAAAA,IAAAyP,EAAAyT,OAGAJ,GAAArT,GAGA,QAAA0T,MAGA,QAAA1T,GAAAhb,GACA,OAAAA,EAHA,GAAA+rB,IAAA,IAgBA,OAVA/Q,GAAAiT,OAAAjT,EAEAA,EAAA+Q,OAAA/Q,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAAmC,GAAAt5B,KAAA3J,EAAAkjC,IAAAnT,GAAA+Q,EAAA3tB,SAGA4c,EAAAzP,KAAA,WACA,MAAAmjB,MAAA3C,WAGAsC,GAAArT,GAsBA,QAAAiS,IAAAx2B,EAAAC,GACA,OAAAA,EAAAlC,KAAAvL,IAAAyN,EAAAD,IACA,SAAAuJ,GAAqB,MAAAxL,MAAAvL,IAAA+W,EAAAvJ,GAAAC,GACrBq2B,GAAAr2B,GAGA,QAAAy2B,IAAA12B,EAAAC,GACA,MAAAD,GAAA,EACA,SAAAqQ,GAAqB,OAAAtS,KAAAgQ,KAAA9N,EAAAoQ,GAAAtS,KAAAgQ,KAAA/N,EAAA,EAAAqQ,IACrB,SAAAA,GAAqB,MAAAtS,MAAAgQ,IAAA9N,EAAAoQ,GAAAtS,KAAAgQ,IAAA/N,EAAA,EAAAqQ,IAGrB,QAAA6nB,IAAA3uB,GACA,MAAAigB,UAAAjgB,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAA4uB,IAAAC,GACA,YAAAA,EAAAF,GACAE,IAAAr6B,KAAAmjB,EAAAnjB,KAAA+mB,IACA,SAAAvb,GAAqB,MAAAxL,MAAAgQ,IAAAqqB,EAAA7uB,IAGrB,QAAA8uB,IAAAD,GACA,MAAAA,KAAAr6B,KAAAmjB,EAAAnjB,KAAAvL,IACA,KAAA4lC,GAAAr6B,KAAAu6B,OACA,IAAAF,GAAAr6B,KAAAw6B,OACAH,EAAAr6B,KAAAvL,IAAA4lC,GAAA,SAAA7uB,GAA8C,MAAAxL,MAAAvL,IAAA+W,GAAA6uB,IAG9C,QAAAI,IAAA/pB,GACA,gBAAAlF,GACA,OAAAkF,GAAAlF,IAIA,QAAA/W,MAOA,QAAAkjC,KAGA,MAFA+C,GAAAJ,GAAAD,GAAAM,EAAAP,GAAAC,GACA9C,IAAA,OAAAmD,EAAAD,GAAAC,GAAAC,EAAAF,GAAAE,IACAnU,EATA,GAAAA,GAAA2S,GAAAV,GAAAE,IAAApB,QAAA,OACAA,EAAA/Q,EAAA+Q,OACA8C,EAAA,GACAK,EAAAJ,GAAA,IACAK,EAAAP,GAAA,GAgFA,OAxEA5T,GAAA6T,KAAA,SAAA5jC,GACA,MAAA4V,WAAA/N,QAAA+7B,GAAA5jC,EAAAkhC,KAAA0C,GAGA7T,EAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAA9gC,GAAAkhC,KAAAJ,KAGA/Q,EAAAsT,MAAA,SAAA9oB,GACA,GAGA1C,GAHAqC,EAAA4mB,IACAqD,EAAAjqB,EAAA,GACA8O,EAAA9O,IAAArS,OAAA,IAGAgQ,EAAAmR,EAAAmb,KAAApjC,EAAAojC,IAAAnb,IAAAjoB,EAEA,IAEA8jB,GACA4H,EACA5Q,EAJA9a,EAAAkjC,EAAAE,GACAnlB,EAAAilB,EAAAjb,GAIA/a,EAAA,MAAAsM,EAAA,IAAAA,EACAkR,IAEA,MAAAmY,EAAA,IAAA5kB,EAAAje,EAAAkN,GAEA,GADAlN,EAAAwI,KAAA6O,MAAArX,GAAA,EAAAie,EAAAzV,KAAA6O,MAAA4G,GAAA,EACAmlB,EAAA,QAAuBpjC,EAAAie,IAAOje,EAC9B,IAAA0rB,EAAA,EAAA5H,EAAAqf,EAAAnjC,GAAgC0rB,EAAAmX,IAAUnX,EAE1C,GADA5Q,EAAAgJ,EAAA4H,IACA5Q,EAAAsoB,GAAA,CACA,GAAAtoB,EAAAmN,EAAA,KACAyC,GAAAjb,KAAAqL,QAEO,MAAY9a,EAAAie,IAAOje,EAC1B,IAAA0rB,EAAAmX,EAAA,EAAA/e,EAAAqf,EAAAnjC,GAAuC0rB,GAAA,IAAQA,EAE/C,GADA5Q,EAAAgJ,EAAA4H,IACA5Q,EAAAsoB,GAAA,CACA,GAAAtoB,EAAAmN,EAAA,KACAyC,GAAAjb,KAAAqL,QAIA4P,GAAA4X,GAAAtiC,EAAAie,EAAAzV,KAAAuD,IAAAkS,EAAAje,EAAAkN,IAAAiN,IAAAgpB,EAGA,OAAArsB,GAAA4T,EAAA0V,UAAA1V,GAGAsE,EAAAuT,WAAA,SAAA/oB,EAAAwb,GAGA,GAFA,MAAAA,MAAA,KAAA6N,EAAA,WACA,kBAAA7N,OAAA94B,EAAAssB,OAAAwM,IACAxb,IAAAsF,IAAA,MAAAkW,EACA,OAAAxb,MAAA,GACA,IAAAkS,GAAAljB,KAAA+G,IAAA,EAAAszB,EAAArpB,EAAAwV,EAAAsT,QAAAx7B,OACA,iBAAAqS,GACA,GAAAnZ,GAAAmZ,EAAAgqB,EAAA36B,KAAA6O,MAAA6rB,EAAA/pB,IAEA,OADAnZ,GAAA6iC,IAAA,KAAA7iC,GAAA6iC,GACA7iC,GAAA0rB,EAAAsJ,EAAA7b,GAAA,KAIA6V,EAAAwT,KAAA,WACA,MAAAzC,GAAAyC,GAAAzC,KACA9wB,MAAA,SAAA+E,GAA0B,MAAAmvB,GAAA36B,KAAAyG,MAAAi0B,EAAAlvB,MAC1BvL,KAAA,SAAAuL,GAAyB,MAAAmvB,GAAA36B,KAAAC,KAAAy6B,EAAAlvB,UAIzBgb,EAAAzP,KAAA,WACA,MAAAA,IAAAyP,EAAA/xB,KAAA4lC,UAGA7T,EAGA,QAAAqU,IAAArvB,EAAAsvB,GACA,MAAAtvB,GAAA,GAAAxL,KAAAgQ,KAAAxE,EAAAsvB,GAAA96B,KAAAgQ,IAAAxE,EAAAsvB,GAGA,QAAA9qB,MAKA,QAAAyoB,GAAAx2B,EAAAC,GACA,OAAAA,EAAA24B,GAAA34B,EAAA44B,IAAA74B,EAAA44B,GAAA54B,EAAA64B,KACA,SAAAtvB,GAAuB,OAAAqvB,GAAArvB,EAAAsvB,GAAA74B,GAAAC,GACvBq2B,GAAAr2B,GAGA,QAAAy2B,GAAA12B,EAAAC,GAEA,MADAA,GAAA24B,GAAA34B,EAAA44B,IAAA74B,EAAA44B,GAAA54B,EAAA64B,IACA,SAAAxoB,GAAwB,MAAAuoB,IAAA54B,EAAAC,EAAAoQ,EAAA,EAAAwoB,IAZxB,GAAAA,GAAA,EACAtU,EAAA2S,GAAAV,EAAAE,GACApB,EAAA/Q,EAAA+Q,MAqBA,OARA/Q,GAAAsU,SAAA,SAAArkC,GACA,MAAA4V,WAAA/N,QAAAw8B,GAAArkC,EAAA8gC,QAAAuD,GAGAtU,EAAAzP,KAAA,WACA,MAAAA,IAAAyP,EAAAxW,KAAA8qB,cAGAjB,GAAArT,GAGA,QAAAzW,MACA,MAAAC,MAAA8qB,SAAA,IAGA,QAAAC,MAKA,QAAApD,KACA,GAAAngC,GAAA,EAAAkN,EAAA1E,KAAA+G,IAAA,EAAA8wB,EAAAv5B,OAEA,KADA08B,EAAA,GAAAzqB,OAAA7L,EAAA,KACAlN,EAAAkN,GAAAs2B,EAAAxjC,EAAA,GAAAyjC,GAAA1D,EAAA//B,EAAAkN,EACA,OAAA8hB,GAGA,QAAAA,GAAAhb,GACA,IAAA2J,MAAA3J,MAAA,MAAAqsB,GAAAkB,GAAAiC,EAAAxvB,IAZA,GAAA+rB,MACAM,KACAmD,IA2CA,OA9BAxU,GAAA0U,aAAA,SAAAzvB,GACA,GAAAjU,GAAAqgC,EAAA1oB,QAAA1D,EACA,OAAAjU,GAAA,GAAAqf,UACArf,EAAA,EAAAwjC,EAAAxjC,EAAA,GAAA+/B,EAAA,GACA//B,EAAAwjC,EAAA18B,OAAA08B,EAAAxjC,GAAA+/B,IAAAj5B,OAAA,KAIAkoB,EAAA+Q,OAAA,SAAA9gC,GACA,IAAA4V,UAAA/N,OAAA,MAAAi5B,GAAA3tB,OACA2tB,KACA,QAAA5mB,GAAAnZ,EAAA,EAAAkN,EAAAjO,EAAA6H,OAAoC9G,EAAAkN,IAAOlN,EAAAmZ,EAAAla,EAAAe,GAAA,MAAAmZ,GAAAwE,MAAAxE,OAAA4mB,EAAAtwB,KAAA0J,EAE3C,OADA4mB,GAAAvsB,KAAA4F,IACA+mB,KAGAnR,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAu5B,EAAAL,GAAAp3B,KAAA3J,GAAAkhC,KAAAE,EAAAjuB,SAGA4c,EAAA2U,UAAA,WACA,MAAAH,GAAApxB,SAGA4c,EAAAzP,KAAA,WACA,MAAAgkB,MACAxD,UACAnM,MAAAyM,IAGArR,EAGA,QAAA4U,MAOA,QAAA5U,GAAAhb,GACA,GAAAA,KAAA,MAAAqsB,GAAAkB,GAAAxB,EAAA/rB,EAAA,EAAA9G,IAGA,QAAAizB,KACA,GAAAngC,KAEA,KADA+/B,EAAA,GAAAhnB,OAAA7L,KACAlN,EAAAkN,GAAA6yB,EAAA//B,OAAA,GAAAue,GAAAve,EAAAkN,GAAAmR,IAAAnR,EAAA,EACA,OAAA8hB,GAdA,GAAA3Q,GAAA,EACAE,EAAA,EACArR,EAAA,EACA6yB,GAAA,IACAM,GAAA,IAmCA,OAtBArR,GAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAuX,GAAApf,EAAA,GAAAsf,GAAAtf,EAAA,GAAAkhC,MAAA9hB,EAAAE,IAGAyQ,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAoG,GAAAmzB,EAAAL,GAAAp3B,KAAA3J,IAAA6H,OAAA,EAAAq5B,KAAAE,EAAAjuB,SAGA4c,EAAA0U,aAAA,SAAAzvB,GACA,GAAAjU,GAAAqgC,EAAA1oB,QAAA1D,EACA,OAAAjU,GAAA,GAAAqf,SACArf,EAAA,GAAAqe,EAAA0hB,EAAA,IACA//B,GAAAkN,GAAA6yB,EAAA7yB,EAAA,GAAAqR,IACAwhB,EAAA//B,EAAA,GAAA+/B,EAAA//B,KAGAgvB,EAAAzP,KAAA,WACA,MAAAqkB,MACA7D,QAAA1hB,EAAAE,IACAqV,MAAAyM,IAGAgC,GAAArT,GAGA,QAAA6U,MAKA,QAAA7U,GAAAhb,GACA,GAAAA,KAAA,MAAAqsB,GAAAkB,GAAAxB,EAAA/rB,EAAA,EAAA9G,IALA,GAAA6yB,IAAA,IACAM,GAAA,KACAnzB,EAAA,CAyBA,OAnBA8hB,GAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAAC,GAAAp3B,KAAA3J,GAAAiO,EAAA1E,KAAAuD,IAAAg0B,EAAAj5B,OAAAu5B,EAAAv5B,OAAA,GAAAkoB,GAAA+Q,EAAA3tB,SAGA4c,EAAA4E,MAAA,SAAA30B,GACA,MAAA4V,WAAA/N,QAAAu5B,EAAAL,GAAAp3B,KAAA3J,GAAAiO,EAAA1E,KAAAuD,IAAAg0B,EAAAj5B,OAAAu5B,EAAAv5B,OAAA,GAAAkoB,GAAAqR,EAAAjuB,SAGA4c,EAAA0U,aAAA,SAAAzvB,GACA,GAAAjU,GAAAqgC,EAAA1oB,QAAA1D,EACA,QAAA8rB,EAAA//B,EAAA,GAAA+/B,EAAA//B,KAGAgvB,EAAAzP,KAAA,WACA,MAAAskB,MACA9D,UACAnM,MAAAyM,IAGArR,EAWA,QAAA8U,IAAAhpB,GACA,UAAA2Y,MAAA3Y,GAGA,QAAAipB,IAAAjpB,GACA,MAAAA,aAAA2Y,OAAA3Y,GAAA,GAAA2Y,QAAA3Y,IAGA,QAAAkpB,IAAAC,EAAAC,EAAAC,EAAA/M,EAAAgN,EAAAC,EAAAC,EAAAC,EAAA/b,GAmCA,QAAA+Z,GAAA/O,GACA,OAAA8Q,EAAA9Q,KAAAgR,EACAH,EAAA7Q,KAAAiR,EACAL,EAAA5Q,KAAAkR,EACAtN,EAAA5D,KAAAmR,EACAT,EAAA1Q,KAAA2Q,EAAA3Q,KAAAoR,EAAAC,EACAZ,EAAAzQ,KAAA6F,EACAmC,GAAAhI,GAGA,QAAAsR,GAAA3R,EAAA7Z,EAAAC,EAAAjR,GAMA,GALA,MAAA6qB,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAAlqB,GAAAT,KAAAuH,IAAAwJ,EAAAD,GAAA6Z,EACAnzB,EAAA+kC,GAAA,SAAA/kC,GAAoC,MAAAA,GAAA,KAAeuU,MAAAywB,EAAA/7B,EACnDjJ,KAAAglC,EAAAl+B,QACAwB,EAAA+Q,EAAAC,EAAA2rB,GAAA1rB,EAAA0rB,GAAA9R,GACAA,EAAA8Q,GACOjkC,GACPA,EAAAglC,EAAA/7B,EAAA+7B,EAAAhlC,EAAA,MAAAglC,EAAAhlC,GAAA,GAAAiJ,EAAAjJ,EAAA,EAAAA,GACAsI,EAAAtI,EAAA,GACAmzB,EAAAnzB,EAAA,KAEAsI,EAAA+Q,EAAAC,EAAAC,EAAA4Z,GACAA,EAAAoR,GAIA,aAAAj8B,EAAA6qB,IAAAa,MAAA1rB,GAlEA,GAAA0mB,GAAA2S,GAAAb,GAAAjS,IACAoT,EAAAjT,EAAAiT,OACAlC,EAAA/Q,EAAA+Q,OAEAyE,EAAAhc,EAAA,OACAic,EAAAjc,EAAA,OACAkc,EAAAlc,EAAA,SACAmc,EAAAnc,EAAA,SACAoc,EAAApc,EAAA,SACAqc,EAAArc,EAAA,SACA6Q,EAAA7Q,EAAA,MACAgT,EAAAhT,EAAA,MAEAwc,IACAV,EAAA,EAAAY,KACAZ,EAAA,IAAAY,KACAZ,EAAA,MAAAY,KACAZ,EAAA,MAAAY,KACAb,EAAA,EAAAc,KACAd,EAAA,IAAAc,KACAd,EAAA,MAAAc,KACAd,EAAA,MAAAc,KACAf,EAAA,EAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,MAAAgB,KACAhO,EAAA,EAAAiO,KACAjO,EAAA,IAAAiO,KACAlB,EAAA,EAAAmB,KACApB,EAAA,EAAAqB,KACArB,EAAA,IAAAqB,KACAtB,EAAA,EAAAgB,IAyEA,OAnCAjW,GAAAiT,OAAA,SAAAhuB,GACA,UAAAwf,MAAAwO,EAAAhuB,KAGA+a,EAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,OAAAi5B,EAAAmC,GAAAt5B,KAAA3J,EAAA8kC,KAAAhE,IAAA5lB,IAAA2pB,KAGA9U,EAAAsT,MAAA,SAAAnP,EAAA7qB,GACA,GAIAwS,GAJA3B,EAAA4mB,IACA9Y,EAAA9N,EAAA,GACA+N,EAAA/N,IAAArS,OAAA,GACAgQ,EAAAoQ,EAAAD,CAKA,OAHAnQ,KAAAgE,EAAAmM,IAAAC,IAAApM,GACAA,EAAAgqB,EAAA3R,EAAAlM,EAAAC,EAAA5e,GACAwS,MAAA8Y,MAAA3M,EAAAC,EAAA,MACApQ,EAAAgE,EAAAslB,UAAAtlB,GAGAkU,EAAAuT,WAAA,SAAA/oB,EAAAwb,GACA,aAAAA,EAAAuN,EAAA/Z,EAAAwM,IAGAhG,EAAAwT,KAAA,SAAArP,EAAA7qB,GACA,GAAA6Q,GAAA4mB,GACA,QAAA5M,EAAA2R,EAAA3R,EAAAha,EAAA,GAAAA,IAAArS,OAAA,GAAAwB,IACAy3B,EAAAyC,GAAArpB,EAAAga,IACAnE,GAGAA,EAAAzP,KAAA,WACA,MAAAA,IAAAyP,EAAAgV,GAAAC,EAAAC,EAAAC,EAAA/M,EAAAgN,EAAAC,EAAAC,EAAAC,EAAA/b,KAGAwG,EA0CA,QAAAwW,IAAA5R,GACA,GAAA1mB,GAAA0mB,EAAA9sB,MACA,iBAAAgU,GACA,MAAA8Y,GAAAprB,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAAmB,EAAA,EAAA1E,KAAAyG,MAAA6L,EAAA5N,OAYA,QAAAu4B,IAAAC,GAKA,QAAA1W,GAAAhb,GACA,GAAA8G,IAAA9G,EAAAqK,IAAAE,EAAAF,EACA,OAAAqnB,GAAAhE,EAAAl5B,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAA+O,OANA,GAAAuD,GAAA,EACAE,EAAA,EACAmjB,GAAA,CAuBA,OAhBA1S,GAAA+Q,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAuX,GAAApf,EAAA,GAAAsf,GAAAtf,EAAA,GAAA+vB,IAAA3Q,EAAAE,IAGAyQ,EAAA0S,MAAA,SAAAziC,GACA,MAAA4V,WAAA/N,QAAA46B,IAAAziC,EAAA+vB,GAAA0S,GAGA1S,EAAA0W,aAAA,SAAAzmC,GACA,MAAA4V,WAAA/N,QAAA4+B,EAAAzmC,EAAA+vB,GAAA0W,GAGA1W,EAAAzP,KAAA,WACA,MAAAkmB,IAAAC,GAAA3F,QAAA1hB,EAAAE,IAAAmjB,UAGAW,GAAArT,GAmBA,QAAA2W,IAAArV,GACA,kBACA,GAAAtrB,GAAAtI,KAAAkpC,cACAC,EAAAnpC,KAAAopC,YACA,OAAAD,KAAAE,IAAA/gC,EAAAmoB,gBAAA2Y,eAAAC,GACA/gC,EAAAiG,cAAAqlB,GACAtrB,EAAA6oB,gBAAAgY,EAAAvV,IAIA,QAAA0V,IAAAC,GACA,kBACA,MAAAvpC,MAAAkpC,cAAA/X,gBAAAoY,EAAAC,MAAAD,EAAAE,QAaA,QAAAA,MACA,UAAAC,IAGA,QAAAA,MACA1pC,KAAAuC,EAAA,OAAAonC,IAAA1I,SAAA,IAgDA,QAAA2I,IAAAC,EAAA5/B,EAAA6/B,GAEA,MADAD,GAAAE,GAAAF,EAAA5/B,EAAA6/B,GACA,SAAAp6B,GACA,GAAAs6B,GAAAt6B,EAAAu6B,aACAD,SAAAhqC,MAAA,EAAAgqC,EAAAE,wBAAAlqC,QACA6pC,EAAA39B,KAAAlM,KAAA0P,IAKA,QAAAq6B,IAAAF,EAAA5/B,EAAA6/B,GACA,gBAAAK,GACA,GAAAC,GAAA5qC,EAAAkQ,KACAlQ,GAAAkQ,MAAAy6B,CACA,KACAN,EAAA39B,KAAAlM,UAAAqqC,SAAApgC,EAAA6/B,GACK,QACLtqC,EAAAkQ,MAAA06B,IAKA,QAAAE,IAAA5W,GACA,MAAAA,GAAA3H,OAAAgF,MAAA,SAAAtT,IAAA,SAAAW,GACA,GAAAwV,GAAA,GAAAtwB,EAAA8a,EAAAnD,QAAA,IAEA,OADA3X,IAAA,IAAAswB,EAAAxV,EAAA1I,MAAApS,EAAA,GAAA8a,IAAA1I,MAAA,EAAApS,KACYsT,KAAAwH,EAAAwV,UAIZ,QAAA2W,IAAAC,GACA,kBACA,GAAAzqC,GAAAC,KAAAyqC,IACA,IAAA1qC,EAAA,CACA,OAAA8d,GAAA0D,EAAA,EAAAje,KAAAimB,EAAAxpB,EAAAqK,OAA6CmX,EAAAgI,IAAOhI,EACpD1D,EAAA9d,EAAAwhB,GAAAipB,EAAA5zB,MAAAiH,EAAAjH,OAAA4zB,EAAA5zB,MAAAiH,EAAA+V,OAAA4W,EAAA5W,KAGA7zB,IAAAuD,GAAAua,EAFA7d,KAAA0qC,oBAAA7sB,EAAAjH,KAAAiH,EAAAgsB,SAAAhsB,EAAA8sB,WAKArnC,EAAAvD,EAAAqK,OAAA9G,QACAtD,MAAAyqC,OAIA,QAAAG,IAAAJ,EAAAtyB,EAAAyyB,GACA,GAAAj9B,GAAAm9B,GAAAv7B,eAAAk7B,EAAA5zB,MAAAgzB,GAAAG,EACA,iBAAAttB,EAAAnZ,EAAAwmC,GACA,GAAAjsB,GAAA9d,EAAAC,KAAAyqC,KAAAZ,EAAAn8B,EAAAwK,EAAA5U,EAAAwmC,EACA,IAAA/pC,EAAA,OAAAwhB,GAAA,EAAAgI,EAAAxpB,EAAAqK,OAA0CmX,EAAAgI,IAAOhI,EACjD,IAAA1D,EAAA9d,EAAAwhB,IAAA3K,OAAA4zB,EAAA5zB,MAAAiH,EAAA+V,OAAA4W,EAAA5W,KAIA,MAHA5zB,MAAA0qC,oBAAA7sB,EAAAjH,KAAAiH,EAAAgsB,SAAAhsB,EAAA8sB,SACA3qC,KAAA8qC,iBAAAjtB,EAAAjH,KAAAiH,EAAAgsB,WAAAhsB,EAAA8sB,gBACA9sB,EAAA3F,QAIAlY,MAAA8qC,iBAAAN,EAAA5zB,KAAAizB,EAAAc,GACA9sB,GAASjH,KAAA4zB,EAAA5zB,KAAAgd,KAAA4W,EAAA5W,KAAA1b,QAAA2xB,WAAAc,WACT5qC,EACAA,EAAAgT,KAAA8K,GADA7d,KAAAyqC,MAAA5sB,IA0BA,QAAAktB,IAAAZ,EAAAN,EAAA/hB,EAAA1L,GACA,GAAAguB,GAAA5qC,EAAAkQ,KACAy6B,GAAAa,YAAAxrC,EAAAkQ,MACAlQ,EAAAkQ,MAAAy6B,CACA,KACA,MAAAN,GAAA3nC,MAAA4lB,EAAA1L,GACG,QACH5c,EAAAkQ,MAAA06B,GA8BA,QAAAa,OAuBA,QAAAt8B,MACA,SA8CA,QAAAu8B,IAAAz9B,EAAA09B,GACAnrC,KAAAkpC,cAAAz7B,EAAAy7B,cACAlpC,KAAAopC,aAAA37B,EAAA27B,aACAppC,KAAAy1B,MAAA,KACAz1B,KAAAorC,QAAA39B,EACAzN,KAAAqqC,SAAAc,EAmBA,QAAAE,IAAA59B,EAAAq8B,EAAAwB,EAAAC,EAAAC,EAAArjC,GASA,IARA,GACAqZ,GADAle,EAAA,EAEAmoC,EAAA3B,EAAA1/B,OACAshC,EAAAvjC,EAAAiC,OAKQ9G,EAAAooC,IAAgBpoC,GACxBke,EAAAsoB,EAAAxmC,KACAke,EAAA6oB,SAAAliC,EAAA7E,GACAioC,EAAAjoC,GAAAke,GAEA8pB,EAAAhoC,GAAA,GAAA4nC,IAAAz9B,EAAAtF,EAAA7E,GAKA,MAAQA,EAAAmoC,IAAiBnoC,GACzBke,EAAAsoB,EAAAxmC,MACAkoC,EAAAloC,GAAAke,GAKA,QAAAmqB,IAAAl+B,EAAAq8B,EAAAwB,EAAAC,EAAAC,EAAArjC,EAAAuV,GACA,GAAApa,GACAke,EAKAoqB,EAJAC,KACAJ,EAAA3B,EAAA1/B,OACAshC,EAAAvjC,EAAAiC,OACA0hC,EAAA,GAAAzvB,OAAAovB,EAKA,KAAAnoC,EAAA,EAAaA,EAAAmoC,IAAiBnoC,GAC9Bke,EAAAsoB,EAAAxmC,MACAwoC,EAAAxoC,GAAAsoC,EAAAG,GAAAruB,EAAAxR,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,GACA8B,IAAAC,GACAL,EAAAloC,GAAAke,EAEAqqB,EAAAD,GAAApqB,EAQA,KAAAle,EAAA,EAAaA,EAAAooC,IAAgBpoC,EAC7BsoC,EAAAG,GAAAruB,EAAAxR,KAAAuB,EAAAtF,EAAA7E,KAAA6E,IACAqZ,EAAAqqB,EAAAD,KACAL,EAAAjoC,GAAAke,EACAA,EAAA6oB,SAAAliC,EAAA7E,GACAuoC,EAAAD,GAAA,MAEAN,EAAAhoC,GAAA,GAAA4nC,IAAAz9B,EAAAtF,EAAA7E,GAKA,KAAAA,EAAA,EAAaA,EAAAmoC,IAAiBnoC,GAC9Bke,EAAAsoB,EAAAxmC,KAAAuoC,EAAAC,EAAAxoC,MAAAke,IACAgqB,EAAAloC,GAAAke,GAsGA,QAAAwqB,IAAAj+B,EAAAC,GACA,MAAAD,GAAAC,KAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA2U,IAiDA,QAAAspB,IAAArY,GACA,kBACA5zB,KAAAksC,gBAAAtY,IAIA,QAAAuY,IAAA5C,GACA,kBACAvpC,KAAAosC,kBAAA7C,EAAAC,MAAAD,EAAAE,QAIA,QAAA4C,IAAAzY,EAAA1b,GACA,kBACAlY,KAAAoxB,aAAAwC,EAAA1b,IAIA,QAAAo0B,IAAA/C,EAAArxB,GACA,kBACAlY,KAAAusC,eAAAhD,EAAAC,MAAAD,EAAAE,MAAAvxB,IAIA,QAAAs0B,IAAA5Y,EAAA1b,GACA,kBACA,GAAAqT,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACA,OAAAoT,EAAAvrB,KAAAksC,gBAAAtY,GACA5zB,KAAAoxB,aAAAwC,EAAArI,IAIA,QAAAkhB,IAAAlD,EAAArxB,GACA,kBACA,GAAAqT,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACA,OAAAoT,EAAAvrB,KAAAosC,kBAAA7C,EAAAC,MAAAD,EAAAE,OACAzpC,KAAAusC,eAAAhD,EAAAC,MAAAD,EAAAE,MAAAle,IA0BA,QAAAmhB,IAAA9Y,GACA,kBACA5zB,KAAAwY,MAAAm0B,eAAA/Y,IAIA,QAAAgZ,IAAAhZ,EAAA1b,EAAA20B,GACA,kBACA7sC,KAAAwY,MAAAs0B,YAAAlZ,EAAA1b,EAAA20B,IAIA,QAAAE,IAAAnZ,EAAA1b,EAAA20B,GACA,kBACA,GAAAthB,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACA,OAAAoT,EAAAvrB,KAAAwY,MAAAm0B,eAAA/Y,GACA5zB,KAAAwY,MAAAs0B,YAAAlZ,EAAArI,EAAAshB,IAgBA,QAAAG,IAAApZ,GACA,wBACA5zB,MAAA4zB,IAIA,QAAAqZ,IAAArZ,EAAA1b,GACA,kBACAlY,KAAA4zB,GAAA1b,GAIA,QAAAg1B,IAAAtZ,EAAA1b,GACA,kBACA,GAAAqT,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACA,OAAAoT,QAAAvrB,MAAA4zB,GACA5zB,KAAA4zB,GAAArI,GAaA,QAAA4hB,IAAAjT,GACA,MAAAA,GAAAnO,OAAAgF,MAAA,SAGA,QAAAqc,IAAA5rB,GACA,MAAAA,GAAA4rB,WAAA,GAAAC,IAAA7rB,GAGA,QAAA6rB,IAAA7rB,GACAxhB,KAAAstC,MAAA9rB,EACAxhB,KAAAutC,OAAAJ,GAAA3rB,EAAAgsB,aAAA,cAuBA,QAAAC,IAAAjsB,EAAA+f,GAEA,IADA,GAAAmM,GAAAN,GAAA5rB,GAAAle,KAAAkN,EAAA+wB,EAAAn3B,SACA9G,EAAAkN,GAAAk9B,EAAAzgC,IAAAs0B,EAAAj+B,IAGA,QAAAqqC,IAAAnsB,EAAA+f,GAEA,IADA,GAAAmM,GAAAN,GAAA5rB,GAAAle,KAAAkN,EAAA+wB,EAAAn3B,SACA9G,EAAAkN,GAAAk9B,EAAAt8B,OAAAmwB,EAAAj+B,IAGA,QAAAsqC,IAAArM,GACA,kBACAkM,GAAAztC,KAAAuhC,IAIA,QAAAsM,IAAAtM,GACA,kBACAoM,GAAA3tC,KAAAuhC,IAIA,QAAAuM,IAAAvM,EAAArpB,GACA,mBACAA,EAAAhW,MAAAlC,KAAAmY,WAAAs1B,GAAAE,IAAA3tC,KAAAuhC,IAmBA,QAAAwM,MACA/tC,KAAAguC,YAAA,GAGA,QAAAC,IAAA/1B,GACA,kBACAlY,KAAAguC,YAAA91B,GAIA,QAAAg2B,IAAAh2B,GACA,kBACA,GAAAqT,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACAnY,MAAAguC,YAAA,MAAAziB,EAAA,GAAAA,GAaA,QAAA4iB,MACAnuC,KAAAouC,UAAA,GAGA,QAAAC,IAAAn2B,GACA,kBACAlY,KAAAouC,UAAAl2B,GAIA,QAAAo2B,IAAAp2B,GACA,kBACA,GAAAqT,GAAArT,EAAAhW,MAAAlC,KAAAmY,UACAnY,MAAAouC,UAAA,MAAA7iB,EAAA,GAAAA,GAaA,QAAAgjB,MACAvuC,KAAAwuC,aAAAxuC,KAAAyuC,WAAA//B,YAAA1O,MAOA,QAAA0uC,MACA1uC,KAAA2uC,iBAAA3uC,KAAAyuC,WAAAnkC,aAAAtK,UAAAyuC,WAAAG,YAcA,QAAAC,MACA,YAWA,QAAAz9B,MACA,GAAA3D,GAAAzN,KAAAyuC,UACAhhC,MAAAqjB,YAAA9wB,MAaA,QAAA8uC,IAAAttB,EAAA5K,EAAAm4B,GACA,GAAAC,GAAAlvC,GAAA0hB,GACA9R,EAAAs/B,EAAAC,WAEAv/B,GACAA,EAAA,GAAAA,GAAAkH,EAAAm4B,IAEAr/B,EAAAs/B,EAAA1mC,SAAA4mC,YAAA,SACAH,GAAAr/B,EAAAy/B,UAAAv4B,EAAAm4B,EAAAK,QAAAL,EAAAM,YAAA3/B,EAAA4/B,OAAAP,EAAAO,QACA5/B,EAAAy/B,UAAAv4B,GAAA,OAGA4K,EAAAstB,cAAAp/B,GAGA,QAAA6/B,IAAA34B,EAAAm4B,GACA,kBACA,MAAAD,IAAA9uC,KAAA4W,EAAAm4B,IAIA,QAAAS,IAAA54B,EAAAm4B,GACA,kBACA,MAAAD,IAAA9uC,KAAA4W,EAAAm4B,EAAA7sC,MAAAlC,KAAAmY,aAYA,QAAAs3B,IAAAC,EAAAh2B,GACA1Z,KAAA2vC,QAAAD,EACA1vC,KAAA4vC,SAAAl2B,EAGA,QAAAm2B,MACA,UAAAJ,MAAAnnC,SAAAmoB,kBAAAqf,IAoGA,QAAAvmC,IAAAiY,EAAApN,GACA,GAAA27B,GAAAvuB,EAAAwuB,YACA,KAAAD,SAAA37B,KAAA27B,EAAAE,MAAAC,GAAA,SAAAntB,OAAA,WACA,OAAAgtB,GAGA,QAAAI,IAAA3uB,EAAApN,GACA,GAAA27B,GAAAvuB,EAAAwuB,YACA,KAAAD,SAAA37B,KAAA27B,EAAAE,MAAAG,GAAA,SAAArtB,OAAA,WACA,OAAAgtB,GAGA,QAAAM,IAAA7uB,EAAApN,GACA,GAAA27B,GAAAvuB,EAAAwuB,YACA,KAAAD,SAAA37B,IAAA,SAAA2O,OAAA,WACA,OAAAgtB,GAGA,QAAApkB,IAAAnK,EAAApN,EAAAk8B,GASA,QAAAP,GAAAQ,GACAD,EAAAL,MAAAO,GACAF,EAAA5a,MAAAG,QAAAjZ,EAAA0zB,EAAA3a,MAAA2a,EAAA1a,MAGA0a,EAAA3a,OAAA4a,GAAA3zB,EAAA2zB,EAAAD,EAAA3a,OAGA,QAAA/Y,GAAA2zB,GACA,GAAAjtC,GAAAie,EAAA/Q,EAAAqN,CAGA,IAAAyyB,EAAAL,QAAAO,GAAA,MAAA3zB,IAEA,KAAAvZ,IAAAmtC,GAEA,GADA5yB,EAAA4yB,EAAAntC,GACAua,EAAA+V,OAAA0c,EAAA1c,KAAA,CAKA,GAAA/V,EAAAoyB,QAAAS,GAAA,MAAAC,IAAA/zB,EAIAiB,GAAAoyB,QAAAW,IACA/yB,EAAAoyB,MAAAY,GACAhzB,EAAA6X,MAAA7Y,OACAgB,EAAA9d,GAAAmM,KAAA,YAAAsV,IAAA6oB,SAAAxsB,EAAA5T,MAAA4T,EAAAisB,aACA2G,GAAAntC,KAMAA,EAAA8Q,IACAyJ,EAAAoyB,MAAAY,GACAhzB,EAAA6X,MAAA7Y,aACA4zB,GAAAntC,IAoBA,GAZAqtC,GAAA,WACAL,EAAAL,QAAAS,KACAJ,EAAAL,MAAAW,GACAN,EAAA5a,MAAAG,QAAAib,EAAAR,EAAA3a,MAAA2a,EAAA1a,MACAkb,EAAAP,MAMAD,EAAAL,MAAAG,GACAE,EAAAvwC,GAAAmM,KAAA,QAAAsV,IAAA6oB,SAAAiG,EAAArmC,MAAAqmC,EAAAxG,OACAwG,EAAAL,QAAAG,GAAA,CAKA,IAJAE,EAAAL,MAAAS,GAGAK,EAAA,GAAA10B,OAAA7L,EAAA8/B,EAAAS,MAAA3mC,QACA9G,EAAA,EAAAie,KAAuBje,EAAAkN,IAAOlN,GAC9Bua,EAAAyyB,EAAAS,MAAAztC,GAAA4U,MAAAhM,KAAAsV,IAAA6oB,SAAAiG,EAAArmC,MAAAqmC,EAAAxG,UACAiH,IAAAxvB,GAAA1D,EAGAkzB,GAAA3mC,OAAAmX,EAAA,GAGA,QAAAuvB,GAAAP,GAKA,IAJA,GAAAnyB,GAAAmyB,EAAAD,EAAA3kC,SAAA2kC,EAAAU,KAAA9kC,KAAA,KAAAqkC,EAAAD,EAAA3kC,WAAA2kC,EAAA5a,MAAAG,QAAAhZ,GAAAyzB,EAAAL,MAAAgB,GAAA,GACA3tC,KACAkN,EAAAugC,EAAA3mC,SAEA9G,EAAAkN,GACAugC,EAAAztC,GAAA4I,KAAA,KAAAkS,EAIAkyB,GAAAL,QAAAgB,KACAX,EAAAvwC,GAAAmM,KAAA,MAAAsV,IAAA6oB,SAAAiG,EAAArmC,MAAAqmC,EAAAxG,OACAjtB,KAIA,QAAAA,KACAyzB,EAAAL,MAAAY,GACAP,EAAA5a,MAAA7Y,aACA4zB,GAAAr8B,EACA,QAAA9Q,KAAAmtC,GAAA,aACAjvB,GAAAwuB,aApGA,GACAe,GADAN,EAAAjvB,EAAAwuB,YAKAS,GAAAr8B,GAAAk8B,EACAA,EAAA5a,SAAAqa,EAAA,EAAAO,EAAA1a,MA+HA,QAAAsb,IAAA98B,EAAAwf,GACA,GAAAud,GAAAC,CACA,mBACA,GAAArB,GAAAI,GAAAnwC,KAAAoU,GACA28B,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAI,EAAA,CACAC,EAAAD,EAAAJ,CACA,QAAAztC,GAAA,EAAAkN,EAAA4gC,EAAAhnC,OAAwC9G,EAAAkN,IAAOlN,EAC/C,GAAA8tC,EAAA9tC,GAAAswB,SAAA,CACAwd,IAAA17B,QACA07B,EAAAv6B,OAAAvT,EAAA,EACA,QAKAysC,EAAAgB,MAAAK,GAIA,QAAAC,IAAAj9B,EAAAwf,EAAA1b,GACA,GAAAi5B,GAAAC,CACA,sBAAAl5B,GAAA,SAAA6K,MACA,mBACA,GAAAgtB,GAAAI,GAAAnwC,KAAAoU,GACA28B,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAI,EAAA,CACAC,GAAAD,EAAAJ,GAAAr7B,OACA,QAAA0I,IAAoBwV,OAAA1b,SAAyB5U,EAAA,EAAAkN,EAAA4gC,EAAAhnC,OAA2B9G,EAAAkN,IAAOlN,EAC/E,GAAA8tC,EAAA9tC,GAAAswB,SAAA,CACAwd,EAAA9tC,GAAA8a,CACA,OAGA9a,IAAAkN,GAAA4gC,EAAAr+B,KAAAqL,GAGA2xB,EAAAgB,MAAAK,GAsBA,QAAAE,IAAA7kC,EAAAmnB,EAAA1b,GACA,GAAA9D,GAAA3H,EAAA8kC,GAOA,OALA9kC,GAAA5B,KAAA,WACA,GAAAklC,GAAAI,GAAAnwC,KAAAoU,IACA27B,EAAA73B,QAAA63B,EAAA73B,WAA2C0b,GAAA1b,EAAAhW,MAAAlC,KAAAmY,aAG3C,SAAAqJ,GACA,MAAA6uB,IAAA7uB,EAAApN,GAAA8D,MAAA0b,IAYA,QAAA4d,IAAA5d,GACA,kBACA5zB,KAAAksC,gBAAAtY,IAIA,QAAA6d,IAAAlI,GACA,kBACAvpC,KAAAosC,kBAAA7C,EAAAC,MAAAD,EAAAE,QAIA,QAAAiI,IAAA9d,EAAAyR,EAAAsM,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA9xC,KAAAwtC,aAAA5Z,EACA,OAAAke,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAH,IAIA,QAAAI,IAAAxI,EAAAlE,EAAAsM,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA9xC,KAAAgyC,eAAAzI,EAAAC,MAAAD,EAAAE,MACA,OAAAqI,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAH,IAIA,QAAAM,IAAAre,EAAAyR,EAAAntB,GACA,GAAA05B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAz5B,EAAAlY,KACA,cAAA2xC,MAAA3xC,MAAAksC,gBAAAtY,IACAke,EAAA9xC,KAAAwtC,aAAA5Z,GACAke,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAA5I,EAAAlE,EAAAntB,GACA,GAAA05B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAAz5B,EAAAlY,KACA,cAAA2xC,MAAA3xC,MAAAosC,kBAAA7C,EAAAC,MAAAD,EAAAE,QACAqI,EAAA9xC,KAAAgyC,eAAAzI,EAAAC,MAAAD,EAAAE,OACAqI,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAA7I,EAAArxB,GACA,QAAA64B,KACA,GAAAvvB,GAAAxhB,KAAAsD,EAAA4U,EAAAhW,MAAAsf,EAAArJ,UACA,OAAA7U,IAAA,SAAA8a,GACAoD,EAAA+qB,eAAAhD,EAAAC,MAAAD,EAAAE,MAAAnmC,EAAA8a,KAIA,MADA2yB,GAAAsB,OAAAn6B,EACA64B,EAGA,QAAAuB,IAAA1e,EAAA1b,GACA,QAAA64B,KACA,GAAAvvB,GAAAxhB,KAAAsD,EAAA4U,EAAAhW,MAAAsf,EAAArJ,UACA,OAAA7U,IAAA,SAAA8a,GACAoD,EAAA4P,aAAAwC,EAAAtwB,EAAA8a,KAIA,MADA2yB,GAAAsB,OAAAn6B,EACA64B,EAYA,QAAAwB,IAAAn+B,EAAA8D,GACA,kBACA3O,GAAAvJ,KAAAoU,GAAAuhB,OAAAzd,EAAAhW,MAAAlC,KAAAmY,YAIA,QAAAq6B,IAAAp+B,EAAA8D,GACA,MAAAA,MAAA,WACA3O,GAAAvJ,KAAAoU,GAAAuhB,MAAAzd,GAcA,QAAAu6B,IAAAr+B,EAAA8D,GACA,kBACAi4B,GAAAnwC,KAAAoU,GAAAzI,UAAAuM,EAAAhW,MAAAlC,KAAAmY,YAIA,QAAAu6B,IAAAt+B,EAAA8D,GACA,MAAAA,MAAA,WACAi4B,GAAAnwC,KAAAoU,GAAAzI,SAAAuM,GAcA,QAAAy6B,IAAAv+B,EAAA8D,GACA,qBAAAA,GAAA,SAAA6K,MACA,mBACAotB,GAAAnwC,KAAAoU,GAAA48B,KAAA94B,GA4CA,QAAA06B,IAAAhf,GACA,OAAAA,EAAA,IAAA7H,OAAAgF,MAAA,SAAAuG,MAAA,SAAAlZ,GACA,GAAA9a,GAAA8a,EAAAnD,QAAA,IAEA,OADA3X,IAAA,IAAA8a,IAAA1I,MAAA,EAAApS,KACA8a,GAAA,UAAAA,IAIA,QAAAy0B,IAAAz+B,EAAAwf,EAAAiW,GACA,GAAAiJ,GAAAC,EAAAC,EAAAJ,GAAAhf,GAAArqB,GAAA4mC,EACA,mBACA,GAAAJ,GAAAiD,EAAAhzC,KAAAoU,GACArU,EAAAgwC,EAAAhwC,EAKAA,KAAA+yC,IAAAC,GAAAD,EAAA/yC,GAAA8iB,QAAA9iB,GAAA6zB,EAAAiW,GAEAkG,EAAAhwC,GAAAgzC,GAYA,QAAAE,IAAA7+B,GACA,kBACA,GAAA3G,GAAAzN,KAAAyuC,UACA,QAAAnrC,KAAAtD,MAAAgwC,aAAA,IAAA1sC,IAAA8Q,EAAA,MACA3G,MAAAqjB,YAAA9wB,OAwDA,QAAAkzC,IAAAtf,EAAAyR,GACA,GAAAuM,GACAM,EACAL,CACA,mBACA,GAAAr5B,GAAA1Y,GAAAE,MAAA4wB,iBAAA5wB,KAAA,MACA8xC,EAAAt5B,EAAAqY,iBAAA+C,GACA+d,GAAA3xC,KAAAwY,MAAAm0B,eAAA/Y,GAAApb,EAAAqY,iBAAA+C,GACA,OAAAke,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAI,EAAAP,IAIA,QAAAwB,IAAAvf,GACA,kBACA5zB,KAAAwY,MAAAm0B,eAAA/Y,IAIA,QAAAwf,IAAAxf,EAAAyR,EAAAsM,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAhyC,GAAAE,MAAA4wB,iBAAA5wB,KAAA,MAAA6wB,iBAAA+C,EACA,OAAAke,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAH,IAIA,QAAA0B,IAAAzf,EAAAyR,EAAAntB,GACA,GAAA05B,GACAM,EACAL,CACA,mBACA,GAAAr5B,GAAA1Y,GAAAE,MAAA4wB,iBAAA5wB,KAAA,MACA8xC,EAAAt5B,EAAAqY,iBAAA+C,GACA+d,EAAAz5B,EAAAlY,KAEA,OADA,OAAA2xC,IAAA3xC,KAAAwY,MAAAm0B,eAAA/Y,GAAA+d,EAAAn5B,EAAAqY,iBAAA+C,IACAke,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAxM,EAAAuM,EAAAE,EAAAI,EAAAP,IAcA,QAAA2B,IAAA1f,EAAA1b,EAAA20B,GACA,QAAAkE,KACA,GAAAvvB,GAAAxhB,KAAAsD,EAAA4U,EAAAhW,MAAAsf,EAAArJ,UACA,OAAA7U,IAAA,SAAA8a,GACAoD,EAAAhJ,MAAAs0B,YAAAlZ,EAAAtwB,EAAA8a,GAAAyuB,IAIA,MADAkE,GAAAsB,OAAAn6B,EACA64B,EAWA,QAAAwC,IAAAr7B,GACA,kBACAlY,KAAAguC,YAAA91B,GAIA,QAAAs7B,IAAAt7B,GACA,kBACA,GAAAy5B,GAAAz5B,EAAAlY,KACAA,MAAAguC,YAAA,MAAA2D,EAAA,GAAAA,GAkCA,QAAA8B,IAAA/D,EAAAh2B,EAAAka,EAAAxf,GACApU,KAAA2vC,QAAAD,EACA1vC,KAAA4vC,SAAAl2B,EACA1Z,KAAA0zC,MAAA9f,EACA5zB,KAAAuxC,IAAAn9B,EAGA,QAAA3H,IAAAmnB,GACA,MAAAic,MAAApjC,WAAAmnB,GAGA,QAAA+f,MACA,QAAAv/B,GAuCA,QAAAw/B,IAAApyB,EAAApN,GAEA,IADA,GAAAy/B,KACAA,EAAAryB,EAAAwuB,iBAAA6D,IAAAz/B,KACA,KAAAoN,IAAAitB,YACA,MAAAqF,IAAAle,KAAA/pB,KAAAioC,EAGA,OAAAD,GA0DA,QAAAthB,IAAAwhB,EAAAC,EAAAv3B,GACA,GAAAnF,GAAAy8B,EAAAt3B,EACA,qBAAA8a,SAAAjgB,KAAA08B,EAAAv3B,IAAA,MAGA,QAAA+V,IAAAuhB,EAAAC,EAAAv3B,GACA,GAAAlF,GAAAw8B,EAAAt3B,EACA,uBAAA8a,SAAAhgB,KAAAy8B,EAAAv3B,IAAA,IAGA,QAAAw3B,IAAA3hB,GACA,GAAA3a,GAAA2a,EAAAwR,YAAA,CAEA,OADAxR,GAAA3X,UAAAhD,EAAA7L,KAAA6O,MAAAhD,IACA,SAAA8E,GACA,MAAA6V,GAAA7V,GAAA9E,GAIA,QAAAu8B,MACA,OAAAl0C,KAAAm0C,OAGA,QAAAC,IAAAC,EAAA/hB,GAQA,QAAA8hB,GAAAltB,GACA,GAgBA5P,GAhBAysB,EAAA,MAAAuQ,EAAAhiB,EAAAsT,MAAAtT,EAAAsT,MAAA1jC,MAAAowB,EAAAiiB,GAAAjiB,EAAA+Q,SAAAiR,EACAxoB,EAAA,MAAA+Z,EAAAvT,EAAAuT,WAAAvT,EAAAuT,WAAA3jC,MAAAowB,EAAAiiB,GAAAC,GAAA3O,EACA4O,EAAA3oC,KAAA+G,IAAA6hC,EAAA,GAAAC,EACAx7B,EAAAk7B,IAAA5oC,IAAA4oC,IAAA/yB,GAAAiR,GAAAC,GACA0E,EAAA5E,EAAA4E,QACA0d,EAAA1d,EAAA,MACA2d,EAAA3d,IAAA9sB,OAAA,MACAiN,GAAAib,EAAAwR,UAAAmQ,GAAAO,IAAAliB,EAAAzP,QACAgtB,EAAA3oB,EAAA2oB,UAAA3oB,EAAA2oB,YAAA3oB,EACAnG,EAAA8uB,EAAAiF,UAAA,WAAA3sC,MAAA,OACA2oC,EAAAjB,EAAAiF,UAAA,SAAA3sC,KAAA47B,EAAAzR,GAAAyiB,QACAC,EAAAlE,EAAAtF,OACAyJ,EAAAnE,EAAAxF,QAAA1gC,OAAA,KAAAjB,KAAA,gBACAurC,EAAApE,EAAAqE,OAAA,QACA5xC,EAAAutC,EAAAqE,OAAA,QACAnmB,EAAAqlB,IAAA5oC,IAAA4oC,IAAA7oC,MAAA,EACA+L,EAAA88B,IAAA7oC,IAAA6oC,IAAAx8B,IAAAP,EAAA,UAAAA,EAAA,QAEAyJ,KAAAq0B,MAAAr0B,EAAAuqB,QAAA+J,OAAA,gBACA1rC,KAAA,kBACAA,KAAA,kBAEAmnC,IAAAsE,MAAAH,GAEAC,IAAAE,MAAAH,EAAArqC,OAAA,QACAjB,KAAA,iBACAA,KAAA2N,EAAA,IAAA0X,EAAA0lB,GACA/qC,KAAA4N,EAAA,QACA5N,KAAA4N,EAAA,SAEAhU,IAAA6xC,MAAAH,EAAArqC,OAAA,QACAjB,KAAA,eACAA,KAAA2N,EAAA0X,EAAAylB,GACA9qC,KAAA4N,EAAA,IACA5N,KAAA,KAAA0qC,IAAA5oC,GAAA,MAAA4oC,IAAA/yB,GAAA,oBAEA4F,IAAA2oB,IACA9uB,IAAAtU,WAAAya,GACA4pB,IAAArkC,WAAAya,GACAguB,IAAAzoC,WAAAya,GACA3jB,IAAAkJ,WAAAya,GAEA8tB,IAAAvoC,WAAAya,GACAvd,KAAA,UAAA2rC,IACA3rC,KAAA,qBAAA8S,GAA0C,MAAAtD,GAAA9B,EAAArX,KAAAyuC,WAAA0F,QAAA98B,EAAAoF,KAE1Cw4B,EACAtrC,KAAA,UAAA2rC,IACA3rC,KAAA,qBAAA8S,GAA0C,MAAAtD,GAAAnZ,KAAAyuC,WAAA0F,QAAA98B,IAAAoF,MAG1Cu4B,EAAA5jC,SAEA2P,EACApX,KAAA,IAAA0qC,IAAA7oC,IAAA6oC,GAAAx8B,GACA,IAAAmX,EAAAumB,EAAA,IAAAX,EAAA,QAAAC,EAAA,IAAA7lB,EAAAumB,EACA,IAAAX,EAAA,IAAA5lB,EAAAumB,EAAA,QAAAV,EAAA,IAAA7lB,EAAAumB,GAEAzE,EACAnnC,KAAA,aACAA,KAAA,qBAAA8S,GAAwC,MAAAtD,GAAA9B,IAAAoF,KAExCy4B,EACAvrC,KAAA2N,EAAA,IAAA0X,EAAA0lB,GAEAnxC,EACAoG,KAAA2N,EAAA0X,EAAAylB,GACAlxC,KAAAuoB,GAEA+jB,EAAAl+B,OAAAuiC,IACAvqC,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAA0qC,IAAAx8B,GAAA,QAAAw8B,IAAA7oC,GAAA,gBAEAqkC,EACAhlC,KAAA,WAA0B7K,KAAAm0C,OAAA98B,IApF1B,GAAAk9B,MACAD,EAAA,KACAzO,EAAA,KACA6O,EAAA,EACAa,EAAA,EACAZ,EAAA,CAsHA,OApCAP,GAAA9hB,MAAA,SAAA/vB,GACA,MAAA4V,WAAA/N,QAAAkoB,EAAA/vB,EAAA6xC,GAAA9hB,GAGA8hB,EAAAxO,MAAA,WACA,MAAA2O,GAAAiB,GAAAtpC,KAAAiM,WAAAi8B,GAGAA,EAAAG,cAAA,SAAAhyC,GACA,MAAA4V,WAAA/N,QAAAmqC,EAAA,MAAAhyC,KAAAizC,GAAAtpC,KAAA3J,GAAA6xC,GAAAG,EAAA7+B,SAGA0+B,EAAAE,WAAA,SAAA/xC,GACA,MAAA4V,WAAA/N,QAAAkqC,EAAA,MAAA/xC,EAAA,KAAAizC,GAAAtpC,KAAA3J,GAAA6xC,GAAAE,KAAA5+B,SAGA0+B,EAAAvO,WAAA,SAAAtjC,GACA,MAAA4V,WAAA/N,QAAAy7B,EAAAtjC,EAAA6xC,GAAAvO,GAGAuO,EAAAqB,SAAA,SAAAlzC,GACA,MAAA4V,WAAA/N,QAAAsqC,EAAAa,GAAAhzC,EAAA6xC,GAAAM,GAGAN,EAAAM,cAAA,SAAAnyC,GACA,MAAA4V,WAAA/N,QAAAsqC,GAAAnyC,EAAA6xC,GAAAM,GAGAN,EAAAmB,cAAA,SAAAhzC,GACA,MAAA4V,WAAA/N,QAAAmrC,GAAAhzC,EAAA6xC,GAAAmB,GAGAnB,EAAAO,YAAA,SAAApyC,GACA,MAAA4V,WAAA/N,QAAAuqC,GAAApyC,EAAA6xC,GAAAO,GAGAP,EAGA,QAAAsB,IAAApjB,GACA,MAAA8hB,IAAA3oC,GAAA6mB,GAGA,QAAAqjB,IAAArjB,GACA,MAAA8hB,IAAAv8B,GAAAya,GAGA,QAAAsjB,IAAAtjB,GACA,MAAA8hB,IAAA9yB,GAAAgR,GAGA,QAAAujB,IAAAvjB,GACA,MAAA8hB,IAAA5oC,GAAA8mB,GAGA,QAAAwjB,IAAA/nC,EAAAC,GACA,MAAAD,GAAAN,SAAAO,EAAAP,OAAA,IAGA,QAAAsoC,IAAArrC,GACA,MAAAA,GAAAsrC,OAAAC,GAAA,GAAAvrC,EAAAN,OAGA,QAAA6rC,IAAA3+B,EAAArJ,GACA,MAAAqJ,GAAArJ,EAAAqJ,EAGA,QAAA4+B,IAAAxrC,GACA,SAAAA,EAAAsrC,OAAAG,GAAA,GAGA,QAAAA,IAAA5+B,EAAAtJ,GACA,MAAAnC,MAAA+G,IAAA0E,EAAAtJ,EAAAsJ,GAGA,QAAA6+B,IAAA50B,GAEA,IADA,GAAA9W,GACAA,EAAA8W,EAAA9W,UAAA8W,EAAA9W,EAAA,EACA,OAAA8W,GAGA,QAAA60B,IAAA70B,GAEA,IADA,GAAA9W,GACAA,EAAA8W,EAAA9W,UAAA8W,EAAA9W,IAAAN,OAAA,EACA,OAAAoX,GAiIA,QAAA80B,IAAAvoC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EACA,IAAAwoC,GAAAxoC,EAAAyoC,YACAC,EAAAzoC,EAAAwoC,YACAvoC,EAAA,IAGA,KAFAF,EAAAwoC,EAAA1kB,MACA7jB,EAAAyoC,EAAA5kB,MACA9jB,IAAAC,GACAC,EAAAF,EACAA,EAAAwoC,EAAA1kB,MACA7jB,EAAAyoC,EAAA5kB,KAEA,OAAA5jB,GAuCA,QAAAyoC,IAAAvuC,EAAAuC,GACA,GAEA8W,GAEAm1B,EACAC,EACAtzC,EACAkN,EAPAs/B,EAAA,GAAA+G,IAAA1uC,GACA2uC,GAAA3uC,EAAA+P,QAAA43B,EAAA53B,MAAA/P,EAAA+P,OAEAuK,GAAAqtB,EAQA,KAFA,MAAAplC,MAAAqsC,IAEAv1B,EAAAiB,EAAAoP,OAEA,GADAilB,IAAAt1B,EAAAtJ,OAAAsJ,EAAArZ,KAAA+P,QACA0+B,EAAAlsC,EAAA8W,EAAArZ,SAAAqI,EAAAomC,EAAAxsC,QAEA,IADAoX,EAAA9W,SAAA,GAAA2R,OAAA7L,GACAlN,EAAAkN,EAAA,EAAqBlN,GAAA,IAAQA,EAC7Bmf,EAAA1P,KAAA4jC,EAAAn1B,EAAA9W,SAAApH,GAAA,GAAAuzC,IAAAD,EAAAtzC,KACAqzC,EAAAlpC,OAAA+T,EACAm1B,EAAAK,MAAAx1B,EAAAw1B,MAAA,CAKA,OAAAlH,GAAAmH,WAAAC,IAGA,QAAAC,MACA,MAAAT,IAAA12C,MAAAi3C,WAAAG,IAGA,QAAAL,IAAAt6B,GACA,MAAAA,GAAA/R,SAGA,QAAA0sC,IAAA51B,GACAA,EAAArZ,KAAAqZ,EAAArZ,UAGA,QAAA+uC,IAAA11B,GACA,GAAArW,GAAA,CACA,GAAAqW,GAAArW,gBACAqW,IAAA/T,SAAA+T,EAAArW,YAGA,QAAA0rC,IAAA1uC,GACAnI,KAAAmI,OACAnI,KAAAg3C,MACAh3C,KAAAmL,OAAA,EACAnL,KAAAyN,OAAA,KAkBA,QAAA4pC,IAAAn/B,GACAlY,KAAAuC,EAAA2V,EACAlY,KAAA4V,KAAA,KA0BA,QAAA0hC,IAAAvpC,EAAAC,GACA,GAAAmY,GAAAnY,EAAAsJ,EAAAvJ,EAAAuJ,EACA8O,EAAApY,EAAAuJ,EAAAxJ,EAAAwJ,EACAggC,EAAAxpC,EAAAqM,EAAApM,EAAAoM,CACA,OAAAm9B,KAAA,KAAApxB,IAAAC,IAIA,QAAAoxB,IAAAje,EAAAyE,GACA,GAAAyZ,GAGAC,EACAC,EAHAC,EAAA,KACAC,EAAAte,EAAAue,IAIA,QAAA9Z,EAAA5zB,QACA,OAAAqtC,EAAAM,GAAA/Z,EAAA,GAAoC,MACpC,QAAAyZ,EAAAO,GAAAha,EAAA,GAAAA,EAAA,GAA0C,MAC1C,QAAAyZ,EAAAQ,GAAAja,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,KAAA6Z,GACAF,EAAAE,EAAAt1C,EAAAm1C,EAAAG,EAAAjiC,KACA6hC,GAAAH,GAAAG,EAAAE,GAgBAC,EAAAC,GAbAD,GAAAre,EAAA2e,KAAAN,IAAAhiC,KAAA,MACA2jB,EAAAue,KAAAve,EAAA2e,KAAA,KAEAla,EAAAjrB,KAAA4kC,GACAF,EAAAD,GAAAje,EAAAyE,GACAA,EAAAnM,MAGA0H,EAAAue,MAAAD,EAAAjiC,KAAA2jB,EAAAue,KAAAve,EAAAue,KAAAD,IACAA,EAAAjiC,KAAA,KAAA2jB,EAAAue,KAAAve,EAAA2e,KAAAL,GACAD,EAAAre,EAAA2e,KAAAN,EAAAhiC,KAAA8hC,GAKAG,EAAAH,CAIA,OADAne,GAAA2e,KAAAN,EACAH,EAGA,QAAAM,IAAAhqC,GACA,OACAuJ,EAAAvJ,EAAAuJ,EACAC,EAAAxJ,EAAAwJ,EACA6C,EAAArM,EAAAqM,GAIA,QAAA49B,IAAAjqC,EAAAC,GACA,GAAA6T,GAAA9T,EAAAuJ,EAAAwK,EAAA/T,EAAAwJ,EAAAgO,EAAAxX,EAAAqM,EACA0K,EAAA9W,EAAAsJ,EAAAyN,EAAA/W,EAAAuJ,EAAA4gC,EAAAnqC,EAAAoM,EACAg+B,EAAAtzB,EAAAjD,EAAAw2B,EAAAtzB,EAAAjD,EAAAw2B,EAAAH,EAAA5yB,EACA7O,EAAA5K,KAAA+P,KAAAu8B,IAAAC,IACA,QACA/gC,GAAAuK,EAAAiD,EAAAszB,EAAA1hC,EAAA4hC,GAAA,EACA/gC,GAAAuK,EAAAiD,EAAAszB,EAAA3hC,EAAA4hC,GAAA,EACAl+B,GAAA1D,EAAA6O,EAAA4yB,GAAA,GAIA,QAAAF,IAAAlqC,EAAAC,EAAAC,GACA,GAAA4T,GAAA9T,EAAAuJ,EAAAwK,EAAA/T,EAAAwJ,EAAAgO,EAAAxX,EAAAqM,EACA0K,EAAA9W,EAAAsJ,EAAAyN,EAAA/W,EAAAuJ,EAAA4gC,EAAAnqC,EAAAoM,EACA4K,EAAA/W,EAAAqJ,EAAA2N,EAAAhX,EAAAsJ,EAAAghC,EAAAtqC,EAAAmM,EACAo+B,EAAA,GAAA32B,EAAAiD,GACAjF,EAAA,GAAAiC,EAAAiD,GACA0zB,EAAA,GAAAN,EAAA5yB,GACAc,EAAAxE,IAAAC,IAAAyD,IAAAT,IAAAC,IAAAozB,IACAO,EAAA,GAAA72B,EAAAmD,GACApF,EAAA,GAAAkC,EAAAmD,GACA0zB,EAAA,GAAAJ,EAAAhzB,GACAqzB,EAAA/2B,IAAAC,IAAAyD,IAAAP,IAAAC,IAAAszB,IACAM,EAAAH,EAAA74B,EAAA24B,EAAA54B,EACAmS,GAAAlS,EAAA+4B,EAAAh5B,EAAAyG,GAAAwyB,EAAAh3B,EACAoQ,GAAArS,EAAA64B,EAAA54B,EAAA84B,GAAAE,EACA7mB,GAAA0mB,EAAAryB,EAAAmyB,EAAAI,GAAAC,EAAA/2B,EACAoQ,GAAAsmB,EAAAG,EAAAD,EAAAD,GAAAI,EACA9a,EAAA9L,IAAAC,IAAA,EACA8L,EAAA,GAAAjM,EAAAE,EAAAD,EAAAE,EAAA3M,GACA2J,EAAA6C,IAAAC,IAAAzM,IACAnL,IAAA4jB,EAAAlyB,KAAA+P,KAAAmiB,IAAA,EAAAD,EAAA7O,KAAA,EAAA6O,EACA,QACAzmB,EAAAya,EAAAE,EAAA7X,EAAAyH,EACAtK,EAAAya,EAAAE,EAAA9X,EAAA0H,EACA1H,KAIA,QAAA0+B,IAAA/qC,EAAAC,EAAAC,GACA,GAAA8qC,GAAAhrC,EAAAuJ,EACA0hC,EAAAjrC,EAAAwJ,EACA0hC,EAAAjrC,EAAAoM,EAAAnM,EAAAmM,EACA8+B,EAAAnrC,EAAAqM,EAAAnM,EAAAmM,EACA+L,EAAAnY,EAAAsJ,EAAAyhC,EACA3yB,EAAApY,EAAAuJ,EAAAyhC,EACAG,EAAAhzB,IAAAC,GACA,IAAA+yB,EAAA,CACA,GAAA7hC,GAAA,KAAA4hC,OAAAD,QAAA,EAAAE,GACA5hC,EAAAzL,KAAA+P,KAAA/P,KAAA+G,IAAA,IAAAomC,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACAlrC,GAAAqJ,EAAAyhC,EAAAzhC,EAAA6O,EAAA5O,EAAA6O,EACAnY,EAAAsJ,EAAAyhC,EAAA1hC,EAAA8O,EAAA7O,EAAA4O,MAEAlY,GAAAqJ,EAAAyhC,EAAAG,EACAjrC,EAAAsJ,EAAAyhC,EAIA,QAAAI,IAAArrC,EAAAC,GACA,GAAAmY,GAAAnY,EAAAsJ,EAAAvJ,EAAAuJ,EACA8O,EAAApY,EAAAuJ,EAAAxJ,EAAAwJ,EACAggC,EAAAxpC,EAAAqM,EAAApM,EAAAoM,CACA,OAAAm9B,KAAApxB,IAAAC,IAGA,QAAAizB,IAAA5B,EAAAngC,EAAAC,GACA,GAAA4O,GAAAsxB,EAAAngC,IACA8O,EAAAqxB,EAAAlgC,GACA,OAAA4O,KAAAC,IAGA,QAAAkzB,IAAA7B,GACAz3C,KAAAuC,EAAAk1C,EACAz3C,KAAA4V,KAAA,KACA5V,KAAAu5C,SAAA,KAGA,QAAAC,IAAAC,GACA,KAAAjpC,EAAAipC,EAAArvC,QAAA,QAEA,IAAA2D,GAAAC,EAAAC,EAAAuC,CAIA,IADAzC,EAAA0rC,EAAA,GAAA1rC,EAAAuJ,EAAA,EAAAvJ,EAAAwJ,EAAA,IACA/G,EAAA,SAAAzC,GAAAqM,CAIA,IADApM,EAAAyrC,EAAA,GAAA1rC,EAAAuJ,GAAAtJ,EAAAoM,EAAApM,EAAAsJ,EAAAvJ,EAAAqM,EAAApM,EAAAuJ,EAAA,IACA/G,EAAA,SAAAzC,GAAAqM,EAAApM,EAAAoM,CAGA0+B,IAAA9qC,EAAAD,EAAAE,EAAAwrC,EAAA,GAGA,IAMA1yB,GAAAC,EAAA1jB,EAAAie,EAAAyN,EAAA0qB,EAAAC,EANAC,EAAA7rC,EAAAqM,EAAArM,EAAAqM,EACAy/B,EAAA7rC,EAAAoM,EAAApM,EAAAoM,EACA0/B,EAAA7rC,EAAAmM,EAAAnM,EAAAmM,EACA2/B,EAAAH,EAAAC,EAAAC,EACAj0B,EAAA+zB,EAAA7rC,EAAAuJ,EAAAuiC,EAAA7rC,EAAAsJ,EAAAwiC,EAAA7rC,EAAAqJ,EACAwO,EAAA8zB,EAAA7rC,EAAAwJ,EAAAsiC,EAAA7rC,EAAAuJ,EAAAuiC,EAAA7rC,EAAAsJ,CAIAxJ,GAAA,GAAAurC,IAAAvrC,GAAAC,EAAA,GAAAsrC,IAAAtrC,GAAAC,EAAA,GAAAqrC,IAAArrC,GACAF,EAAA6H,KAAA3H,EAAAsrC,SAAAvrC,EACAA,EAAA4H,KAAA7H,EAAAwrC,SAAAtrC,EACAA,EAAA2H,KAAA5H,EAAAurC,SAAAxrC,CAGAisC,GAAA,IAAA12C,EAAA,EAAmBA,EAAAkN,IAAOlN,EAAA,CAI1B,GAHAw1C,GAAA/qC,EAAAxL,EAAAyL,EAAAzL,EAAA0L,EAAAwrC,EAAAn2C,IAAA2K,EAAA,GAAAqrC,IAAArrC,IAGA+gB,EAAAjhB,EAAAwrC,aAAAh4B,EAAAvT,EAAA4H,OAGA,GAAAwjC,GAAA73B,EAAAhf,EAAA0L,EAAA1L,GAAA,CACAwL,EAAAC,IAAAuT,IAAAje,CACA,SAAA02C,QAKA,CACAN,EAAAn4B,EAAAhf,EAAA6X,EAAAu/B,EAAA3qB,EAAAzsB,EAAA6X,CACA,GACA,IAAAs/B,GAAAC,EAAA,CACA,GAAAP,GAAA73B,EAAAhf,EAAA0L,EAAA1L,GAAA,CACAyL,EAAAuT,EAAAxT,EAAA6H,KAAA5H,IAAAurC,SAAAxrC,IAAAzK,CACA,SAAA02C,GAEAz4B,IAAA3L,KAAA8jC,GAAAn4B,EAAAhf,EAAA6X,MACS,CACT,GAAAg/B,GAAApqB,EAAAzsB,EAAA0L,EAAA1L,GAAA,CACAwL,EAAAihB,EAAAjhB,EAAA6H,KAAA5H,IAAAurC,SAAAxrC,IAAAzK,CACA,SAAA02C,GAEAhrB,IAAAuqB,SAAAI,GAAA3qB,EAAAzsB,EAAA6X,QAEOmH,IAAAyN,EAAApZ,MAaP,IATA3H,EAAAsrC,SAAAxrC,EAAAE,EAAA2H,KAAA5H,EAAAD,EAAA6H,KAAA5H,EAAAurC,SAAAvrC,EAAAC,EAGA8rC,GAAAD,EAAA7rC,EAAA1L,EAAA6X,EAAAnM,EAAA1L,EAAA6X,EACAyL,GAAAi0B,EAAA7rC,EAAA1L,EAAA+U,EACAwO,GAAAg0B,EAAA7rC,EAAA1L,EAAAgV,EAGAqiC,EAAAP,GAAAtrC,EAAAxL,EAAAwkB,EAAAlB,EAAAk0B,EAAA/yB,EAAAlB,EAAAi0B,IACA9rC,IAAA2H,QAAA5H,IACA8rC,EAAAT,GAAAprC,EAAA1L,EAAAwkB,EAAAC,IAAA4yB,IACA7rC,EAAAE,EAAA2rC,EAAAE,EAGA9rC,GAAAD,EAAA6H,KAImB,IAAnB7H,GAAAC,EAAAzL,GAAA0L,EAAAD,GAAmBC,IAAA2H,QAAA5H,GAAAD,EAAAgF,KAAA9E,EAAA1L,EAGnB,KAH2D0L,EAAAgsC,GAAAlsC,GAG3DzK,EAAA,EAAaA,EAAAkN,IAAOlN,EAAAyK,EAAA0rC,EAAAn2C,GAAAyK,EAAAuJ,GAAArJ,EAAAqJ,EAAAvJ,EAAAwJ,GAAAtJ,EAAAsJ,CAEpB,OAAAtJ,GAAAmM,EAQA,QAAA8/B,IAAA19B,GACA,aAAAA,EAAA,KAAA29B,GAAA39B,GAGA,QAAA29B,IAAA39B,GACA,qBAAAA,GAAA,SAAAuG,MACA,OAAAvG,GAGA,QAAA49B,MACA,SASA,QAAAC,IAAA59B,GACA,MAAA3Q,MAAA+P,KAAAY,EAAAvE,OAuCA,QAAAoiC,IAAA1yB,GACA,gBAAApG,GACAA,EAAA9W,WACA8W,EAAApH,EAAAtO,KAAA+G,IAAA,GAAA+U,EAAApG,IAAA,KAKA,QAAA+4B,IAAA7iC,EAAAsX,GACA,gBAAAxN,GACA,GAAA9W,EAAA8W,EAAA9W,SAAA,CACA,GAAAA,GACApH,EAGAqgB,EAFAnT,EAAA9F,EAAAN,OACAgQ,EAAA1C,EAAA8J,GAAAwN,GAAA,CAGA,IAAA5U,EAAA,IAAA9W,EAAA,EAAwBA,EAAAkN,IAAOlN,EAAAoH,EAAApH,GAAA8W,IAE/B,IADAuJ,EAAA61B,GAAA9uC,GACA0P,EAAA,IAAA9W,EAAA,EAAwBA,EAAAkN,IAAOlN,EAAAoH,EAAApH,GAAA8W,IAC/BoH,GAAApH,EAAAuJ,EAAAvJ,IAKA,QAAAogC,IAAAxrB,GACA,gBAAAxN,GACA,GAAA/T,GAAA+T,EAAA/T,MACA+T,GAAApH,GAAA4U,EACAvhB,IACA+T,EAAAlK,EAAA7J,EAAA6J,EAAA0X,EAAAxN,EAAAlK,EACAkK,EAAAjK,EAAA9J,EAAA8J,EAAAyX,EAAAxN,EAAAjK,IA+EA,QAAAkjC,IAAAh+B,GACA,MAAAA,GAAArI,GAGA,QAAAsmC,IAAAj+B,GACA,MAAAA,GAAAk+B,SA8DA,QAAAC,IAAA7sC,EAAAC,GACA,MAAAD,GAAAN,SAAAO,EAAAP,OAAA,IAWA,QAAAotC,IAAAtvB,GACA,GAAA7gB,GAAA6gB,EAAA7gB,QACA,OAAAA,KAAA,GAAA6gB,EAAAnN,EAIA,QAAA08B,IAAAvvB,GACA,GAAA7gB,GAAA6gB,EAAA7gB,QACA,OAAAA,OAAAN,OAAA,GAAAmhB,EAAAnN,EAKA,QAAA28B,IAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAD,EAAA33C,EAAA03C,EAAA13C,EACA23C,GAAAhtC,GAAAktC,EACAF,EAAAzvB,GAAA0vB,EACAF,EAAA/sC,GAAAktC,EACAF,EAAAjtB,GAAAktB,EACAD,EAAA1xB,GAAA2xB,EAMA,QAAAE,IAAA7vB,GAMA,IALA,GAIAkP,GAJAygB,EAAA,EACAC,EAAA,EACAzwC,EAAA6gB,EAAA7gB,SACApH,EAAAoH,EAAAN,SAEA9G,GAAA,GACAm3B,EAAA/vB,EAAApH,GACAm3B,EAAAzM,GAAAktB,EACAzgB,EAAAlR,GAAA2xB,EACAA,GAAAzgB,EAAAjP,GAAA2vB,GAAA1gB,EAAAxsB,GAMA,QAAAotC,IAAAC,EAAA/vB,EAAAgwB,GACA,MAAAD,GAAAvtC,EAAAN,SAAA8d,EAAA9d,OAAA6tC,EAAAvtC,EAAAwtC,EAGA,QAAAC,IAAAh6B,EAAAle,GACAtD,KAAAuC,EAAAif,EACAxhB,KAAAyN,OAAA,KACAzN,KAAA0K,SAAA,KACA1K,KAAA+9B,EAAA,KACA/9B,KAAA+N,EAAA/N,KACAA,KAAAguB,EAAA,EACAhuB,KAAAupB,EAAA,EACAvpB,KAAAiO,EAAA,EACAjO,KAAAwrB,EAAA,EACAxrB,KAAAoe,EAAA,KACApe,KAAAsD,IAKA,QAAAm4C,IAAA3L,GASA,IARA,GACAtuB,GAEAm1B,EACAjsC,EACApH,EACAkN,EANAwQ,EAAA,GAAAw6B,IAAA1L,EAAA,GAEArtB,GAAAzB,GAMAQ,EAAAiB,EAAAoP,OACA,GAAAnnB,EAAA8W,EAAAjf,EAAAmI,SAEA,IADA8W,EAAA9W,SAAA,GAAA2R,OAAA7L,EAAA9F,EAAAN,QACA9G,EAAAkN,EAAA,EAAqBlN,GAAA,IAAQA,EAC7Bmf,EAAA1P,KAAA4jC,EAAAn1B,EAAA9W,SAAApH,GAAA,GAAAk4C,IAAA9wC,EAAApH,OACAqzC,EAAAlpC,OAAA+T,CAMA,QADAR,EAAAvT,OAAA,GAAA+tC,IAAA,SAAA9wC,UAAAsW,GACAA,EA8JA,QAAA06B,IAAAC,EAAAluC,EAAAkU,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEAtT,GACAotC,EAEAC,EAEA11B,EAAAC,EAEA01B,EACAC,EACAC,EACAC,EACAC,EACAzyB,EACArB,EAfA/jB,KACAoe,EAAAhV,EAAA/C,SAGAyxC,EAAA,EAEA3rC,EAAAiS,EAAArY,OAEA8N,EAAAzK,EAAAyK,MASAikC,EAAA3rC,GAAA,CAQA,IAPA2V,EAAAtE,EAAAF,EAAAyE,EAAAtE,EAAAF,EACAm6B,EAAAC,EAAAF,EAAAr5B,EAAA05B,GAAAjkC,MACAuR,EAAA3d,KAAA+G,IAAAuT,EAAAD,IAAAC,IAAAlO,EAAAyjC,GACAvzB,EAAA0zB,IAAAryB,EACAyyB,EAAApwC,KAAA+G,IAAAmpC,EAAA5zB,IAAA2zB,GAGAF,EAAAM,EAAA,EAAqBN,EAAArrC,IAAQqrC,EAAA,CAM7B,GALAC,GAAAF,EAAAn5B,EAAAo5B,GAAA3jC,MACA0jC,EAAAG,MAAAH,GACAA,EAAAI,MAAAJ,GACAxzB,EAAA0zB,IAAAryB,EACAwyB,EAAAnwC,KAAA+G,IAAAmpC,EAAA5zB,IAAA2zB,GACAE,EAAAC,EAAA,CAAgCJ,GAAAF,CAAuB,OACvDM,EAAAD,EAIA53C,EAAA0O,KAAAvE,GAAqB0J,MAAA4jC,EAAAM,KAAAj2B,EAAAC,EAAA1b,SAAA+X,EAAA/M,MAAAymC,EAAAN,KACrBrtC,EAAA4tC,KAAAC,GAAA7tC,EAAAmT,EAAAC,EAAAC,EAAA3J,EAAA0J,GAAAwE,EAAA01B,EAAA5jC,EAAA4J,GACAw6B,GAAA9tC,EAAAmT,EAAAC,EAAA1J,EAAAyJ,GAAAwE,EAAA21B,EAAA5jC,EAAA2J,EAAAC,GACA5J,GAAA4jC,EAAAK,EAAAN,EAGA,MAAAx3C,GA2OA,QAAAk4C,IAAA9/B,GACA,MAAAA,GAAAnF,EAAAmF,EAAA+/B,GAGA,QAAAC,IAAAhgC,GACA,MAAAA,GAAAlF,EAAAkF,EAAAigC,GAmFA,QAAAC,IAAAlgC,EAAAnZ,GACA,MAAAA,GA6GA,QAAAs5C,IAAAngC,GACA,MAAAA,GAAAnF,EAGA,QAAAulC,IAAApgC,GACA,MAAAA,GAAAlF,EAqUA,QAAAulC,MACAt9C,EAAAkQ,MAAAuB,2BAmBA,QAAA8rC,IAAAC,EAAAC,GACA,GAAAnN,GAAAkN,EAAA10C,SAAAmoB,gBACAysB,EAAA/H,GAAA6H,GAAAj9C,GAAA,sBACAk9C,KACAC,EAAAn9C,GAAA,aAAAo9C,IAAA,GACAz8C,WAAA,WAA2Bw8C,EAAAn9C,GAAA,oBAAuC,IAElE,iBAAA+vC,GACAoN,EAAAn9C,GAAA,0BAEA+vC,EAAAt3B,MAAA4kC,cAAAtN,EAAAuN,iBACAvN,GAAAuN,YAUA,QAAAC,IAAA/wC,EAAAqK,EAAA2mC,EAAAnpC,EAAAopC,EAAAlmC,EAAAC,EAAA4O,EAAAC,EAAAmN,GACAvzB,KAAAuM,SACAvM,KAAA4W,OACA5W,KAAAu9C,UACAv9C,KAAAy9C,WAAArpC,EACApU,KAAAw9C,SACAx9C,KAAAsX,IACAtX,KAAAuX,IACAvX,KAAAmmB,KACAnmB,KAAAomB,KACApmB,KAAAuC,EAAAgxB,EASA,QAAAmqB,MACA,OAAAl+C,EAAAkQ,MAAAiuC,OAGA,QAAAC,MACA,MAAA59C,MAAAyuC,WAGA,QAAAoP,IAAAphC,GACA,aAAAA,GAAsBnF,EAAA9X,EAAAkQ,MAAA4H,EAAAC,EAAA/X,EAAAkQ,MAAA6H,GAAuCkF,EAsI7D,QAAAqhC,IAAArhC,GACA,MAAAA,GAAA,GAGA,QAAAshC,IAAAthC,GACA,MAAAA,GAAA,GAGA,QAAAuhC,MACAh+C,KAAAuC,EAAA,KAGA,QAAA07C,IAAAz8B,GACAA,EAAAoZ,EACApZ,EAAA0N,EACA1N,EAAA+X,EACA/X,EAAA08B,EACA18B,EAAA28B,EACA38B,EAAA48B,EAAA,KAuLA,QAAAC,IAAAr9B,EAAAQ,GACA,GAAA4F,GAAA5F,EACAkC,EAAAlC,EAAA08B,EACAzwC,EAAA2Z,EAAAwT,CAEAntB,GACAA,EAAA8rB,IAAAnS,EAAA3Z,EAAA8rB,EAAA7V,EACAjW,EAAAywC,EAAAx6B,EAEA1C,EAAAze,EAAAmhB,EAGAA,EAAAkX,EAAAntB,EACA2Z,EAAAwT,EAAAlX,EACA0D,EAAA82B,EAAAx6B,EAAA6V,EACAnS,EAAA82B,IAAA92B,EAAA82B,EAAAtjB,EAAAxT,GACA1D,EAAA6V,EAAAnS,EAGA,QAAAk3B,IAAAt9B,EAAAQ,GACA,GAAA4F,GAAA5F,EACAkC,EAAAlC,EAAA+X,EACA9rB,EAAA2Z,EAAAwT,CAEAntB,GACAA,EAAA8rB,IAAAnS,EAAA3Z,EAAA8rB,EAAA7V,EACAjW,EAAAywC,EAAAx6B,EAEA1C,EAAAze,EAAAmhB,EAGAA,EAAAkX,EAAAntB,EACA2Z,EAAAwT,EAAAlX,EACA0D,EAAAmS,EAAA7V,EAAAw6B,EACA92B,EAAAmS,IAAAnS,EAAAmS,EAAAqB,EAAAxT,GACA1D,EAAAw6B,EAAA92B,EAGA,QAAAm3B,IAAA/8B,GACA,KAAAA,EAAA+X,GAAA/X,IAAA+X,CACA,OAAA/X,GAGA,QAAAg9B,IAAAhzC,EAAAqM,EAAAwX,EAAAC,GACA,GAAAmvB,IAAA,WACAx0C,EAAAy0C,GAAA3rC,KAAA0rC,GAAA,CAOA,OANAA,GAAAjzC,OACAizC,EAAA5mC,QACAwX,GAAAsvB,GAAAF,EAAAjzC,EAAAqM,EAAAwX,GACAC,GAAAqvB,GAAAF,EAAA5mC,EAAArM,EAAA8jB,GACAsvB,GAAApzC,EAAAvB,OAAA40C,UAAA9rC,KAAA9I,GACA20C,GAAA/mC,EAAA5N,OAAA40C,UAAA9rC,KAAA9I,GACAw0C,EAGA,QAAAK,IAAAtzC,EAAA6jB,EAAAC,GACA,GAAAmvB,IAAApvB,EAAAC,EAEA,OADAmvB,GAAAjzC,OACAizC,EAGA,QAAAE,IAAAF,EAAAjzC,EAAAqM,EAAAknC,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAAjzC,OAAAqM,EACH4mC,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAAjzC,OACAizC,EAAA5mC,SASA,QAAAmnC,IAAAP,EAAA98B,EAAAC,EAAAC,EAAAC,GACA,GAUA1H,GAVArM,EAAA0wC,EAAA,GACAzwC,EAAAywC,EAAA,GACA1F,EAAAhrC,EAAA,GACAirC,EAAAjrC,EAAA,GACAkxC,EAAAjxC,EAAA,GACAkxC,EAAAlxC,EAAA,GACAuc,EAAA,EACAC,EAAA,EACArE,EAAA84B,EAAAlG,EACA3yB,EAAA84B,EAAAlG,CAIA,IADA5+B,EAAAuH,EAAAo3B,EACA5yB,KAAA/L,EAAA,IAEA,GADAA,GAAA+L,EACAA,EAAA,GACA,GAAA/L,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,OACG,IAAA+L,EAAA,GACH,GAAA/L,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,GAIA,GADAA,EAAAyH,EAAAk3B,EACA5yB,KAAA/L,EAAA,IAEA,GADAA,GAAA+L,EACAA,EAAA,GACA,GAAA/L,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,OACG,IAAA+L,EAAA,GACH,GAAA/L,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,GAIA,GADAA,EAAAwH,EAAAo3B,EACA5yB,KAAAhM,EAAA,IAEA,GADAA,GAAAgM,EACAA,EAAA,GACA,GAAAhM,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,OACG,IAAAgM,EAAA,GACH,GAAAhM,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,GAIA,GADAA,EAAA0H,EAAAk3B,EACA5yB,KAAAhM,EAAA,IAEA,GADAA,GAAAgM,EACAA,EAAA,GACA,GAAAhM,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,OACG,IAAAgM,EAAA,GACH,GAAAhM,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,GAGA,QAAAmQ,EAAA,GAAAC,EAAA,KAEAD,EAAA,IAAAk0B,EAAA,IAAA1F,EAAAxuB,EAAApE,EAAA6yB,EAAAzuB,EAAAnE,IACAoE,EAAA,IAAAi0B,EAAA,IAAA1F,EAAAvuB,EAAArE,EAAA6yB,EAAAxuB,EAAApE,KACA,OAGA,QAAA+4B,IAAAV,EAAA98B,EAAAC,EAAAC,EAAAC,GACA,GAAAwN,GAAAmvB,EAAA,EACA,IAAAnvB,EAAA,QAEA,IASA8vB,GACAC,EAVAhwB,EAAAovB,EAAA,GACAjzC,EAAAizC,EAAAjzC,KACAqM,EAAA4mC,EAAA5mC,MACAynC,EAAA9zC,EAAA,GACA+zC,EAAA/zC,EAAA,GACAg0C,EAAA3nC,EAAA,GACA4nC,EAAA5nC,EAAA,GACA6nC,GAAAJ,EAAAE,GAAA,EACAG,GAAAJ,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAA/9B,GAAA+9B,GAAA79B,EAAA,MACA,IAAAy9B,EAAAE,EAAA,CACA,GAAAnwB,GACA,GAAAA,EAAA,IAAAvN,EAAA,WADAuN,IAAAqwB,EAAA99B,EAEA0N,IAAAowB,EAAA59B,OACK,CACL,GAAAuN,GACA,GAAAA,EAAA,GAAAzN,EAAA,WADAyN,IAAAqwB,EAAA59B,EAEAwN,IAAAowB,EAAA99B,QAKA,IAFAw9B,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAAM,EAAAP,EAAAM,EACAN,QAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAnwB,GACA,GAAAA,EAAA,IAAAvN,EAAA,WADAuN,KAAAzN,EAAAy9B,GAAAD,EAAAx9B,EAEA0N,KAAAxN,EAAAu9B,GAAAD,EAAAt9B,OACO,CACP,GAAAuN,GACA,GAAAA,EAAA,GAAAzN,EAAA,WADAyN,KAAAvN,EAAAu9B,GAAAD,EAAAt9B,EAEAwN,KAAA1N,EAAAy9B,GAAAD,EAAAx9B,OAGA,IAAA29B,EAAAE,EAAA,CACA,GAAApwB,GACA,GAAAA,EAAA,IAAAxN,EAAA,WADAwN,IAAA1N,EAAAy9B,EAAAz9B,EAAA09B,EAEA/vB,IAAAzN,EAAAu9B,EAAAv9B,EAAAw9B,OACO,CACP,GAAAhwB,GACA,GAAAA,EAAA,GAAA1N,EAAA,WADA0N,IAAAxN,EAAAu9B,EAAAv9B,EAAAw9B,EAEA/vB,IAAA3N,EAAAy9B,EAAAz9B,EAAA09B;AAOA,MAFAZ,GAAA,GAAApvB,EACAovB,EAAA,GAAAnvB,GACA,EAGA,QAAAswB,IAAAj+B,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACA28B,GADAn7C,EAAAo7C,GAAAt0C,OAGA9G,KACA67C,GAAAV,EAAAC,GAAAp7C,GAAAqe,EAAAC,EAAAC,EAAAC,IACAk9B,GAAAP,EAAA98B,EAAAC,EAAAC,EAAAC,KACAhW,KAAAuH,IAAAorC,EAAA,MAAAA,EAAA,OAAAoB,IACA/zC,KAAAuH,IAAAorC,EAAA,MAAAA,EAAA,OAAAoB,WACAnB,IAAAp7C,GAKA,QAAAw8C,IAAAC,GACA,MAAAnB,IAAAmB,EAAA91C,QACA81C,OACAlB,cAIA,QAAAmB,IAAAC,EAAAxB,GACA,GAAAsB,GAAAE,EAAAF,KACAG,EAAAzB,EAAAjzC,KACA20C,EAAA1B,EAAA5mC,KAEA,OADAkoC,KAAAI,MAAAD,IAAAH,GACAI,EAAAr0C,KAAA4O,MAAAylC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,KACAyB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,IACA3yC,KAAA4O,MAAAwlC,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAxB,GACA,MAAAA,OAAAjzC,OAAAy0C,EAAAF,OAGA,QAAAM,IAAAJ,EAAAxB,GACA,MAAAA,OAAAjzC,OAAAy0C,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAApB,EAAAt9B,EAAAgI,EAAAjmB,EAAA,EAAAkN,EAAAouC,GAAAx0C,OAA0D9G,EAAAkN,IAAOlN,EACjE,IAAA28C,EAAArB,GAAAt7C,MAAAimB,GAAAs1B,EAAAoB,EAAApB,WAAAz0C,QAAA,CACA,GAAAH,GAAA,GAAAoS,OAAAkN,GACAg3B,EAAA,GAAAlkC,OAAAkN,EACA,KAAAhI,EAAA,EAAiBA,EAAAgI,IAAOhI,EAAAtX,EAAAsX,KAAAg/B,EAAAh/B,GAAAy+B,GAAAC,EAAAvB,GAAAG,EAAAt9B,IAExB,KADAtX,EAAA6M,KAAA,SAAAxT,EAAAie,GAAiC,MAAAg/B,GAAAh/B,GAAAg/B,EAAAj9C,KACjCie,EAAA,EAAiBA,EAAAgI,IAAOhI,EAAAg/B,EAAAh/B,GAAAs9B,EAAA50C,EAAAsX,GACxB,KAAAA,EAAA,EAAiBA,EAAAgI,IAAOhI,EAAAs9B,EAAAt9B,GAAAg/B,EAAAh/B,IAKxB,QAAAi/B,IAAA7+B,EAAAC,EAAAC,EAAAC,GACA,GACA2+B,GACAR,EACAF,EACAW,EACA7B,EACA8B,EACA/jC,EACAtC,EACAE,EACAnG,EACAusC,EACAC,EAZAC,EAAAlC,GAAAx0C,OAaAiY,GAAA,CAEA,KAAAo+B,EAAA,EAAiBA,EAAAK,IAAgBL,EACjC,GAAAR,EAAArB,GAAA6B,GAAA,CAMA,IALAV,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACA6B,EAAA7B,EAAAz0C,OAGAs2C,KACAhC,GAAAG,EAAA6B,KACA7B,EAAAhoC,OAAA6pC,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA9B,EAAAz0C,OACAs2C,EAAAC,GACAtsC,EAAAgsC,GAAAJ,EAAAvB,GAAAG,EAAA6B,KAAAE,EAAAvsC,EAAA,GAAAwsC,EAAAxsC,EAAA,GACAuI,EAAAwjC,GAAAH,EAAAvB,GAAAG,IAAA6B,EAAAC,KAAArmC,EAAAsC,EAAA,GAAApC,EAAAoC,EAAA,IACA9Q,KAAAuH,IAAAutC,EAAAtmC,GAAAulC,IAAA/zC,KAAAuH,IAAAwtC,EAAArmC,GAAAqlC,MACAhB,EAAAhoC,OAAA6pC,EAAA,EAAAhC,GAAA3rC,KAAA+rC,GAAAiB,EAAA1rC,EACAvI,KAAAuH,IAAAutC,EAAAj/B,GAAAk+B,IAAA/9B,EAAA++B,EAAAhB,IAAAl+B,EAAA7V,KAAAuH,IAAAiH,EAAAqH,GAAAk+B,GAAArlC,EAAAsH,GACAhW,KAAAuH,IAAAwtC,EAAA/+B,GAAA+9B,IAAAh+B,EAAA++B,EAAAf,IAAA/zC,KAAAuH,IAAAmH,EAAAsH,GAAA+9B,GAAAvlC,EAAAuH,EAAAC,GACAhW,KAAAuH,IAAAutC,EAAA/+B,GAAAg+B,IAAAgB,EAAAj/B,EAAAi+B,IAAAh+B,EAAA/V,KAAAuH,IAAAiH,EAAAuH,GAAAg+B,GAAArlC,EAAAoH,GACA9V,KAAAuH,IAAAwtC,EAAAj/B,GAAAi+B,IAAAe,EAAAj/B,EAAAk+B,IAAA/zC,KAAAuH,IAAAmH,EAAAoH,GAAAi+B,GAAAvlC,EAAAqH,EAAAC,GACA,YACA++B,EAIAA,KAAAt+B,GAAA,GAMA,GAAAA,EAAA,CACA,GAAA8D,GAAAC,EAAAC,EAAA8yB,EAAA/2B,GAEA,KAAAq+B,EAAA,EAAAp+B,EAAA,KAAiCo+B,EAAAK,IAAgBL,GACjDR,EAAArB,GAAA6B,MACAV,EAAAE,EAAAF,KACA55B,EAAA45B,EAAA,GAAAp+B,EACAyE,EAAA25B,EAAA,GAAAn+B,EACAyE,EAAAF,IAAAC,IACAC,EAAA8yB,MAAA9yB,EAAAhE,EAAA49B,GAIA,IAAA59B,EAAA,CACA,GAAA0+B,IAAAp/B,EAAAC,GAAAo/B,GAAAr/B,EAAAG,GAAAm/B,GAAAp/B,EAAAC,GAAAo/B,GAAAr/B,EAAAD,EACAS,GAAAw8B,UAAA9rC,KACA2rC,GAAA3rC,KAAA+rC,GAAAiB,EAAA19B,EAAA09B,KAAAgB,EAAAC,IAAA,EACAtC,GAAA3rC,KAAA+rC,GAAAiB,EAAAiB,EAAAC,IAAA,EACAvC,GAAA3rC,KAAA+rC,GAAAiB,EAAAkB,EAAAC,IAAA,EACAxC,GAAA3rC,KAAA+rC,GAAAiB,EAAAmB,EAAAH,IAAA,IAMA,IAAAN,EAAA,EAAiBA,EAAAK,IAAgBL,GACjCR,EAAArB,GAAA6B,MACAR,EAAApB,UAAAz0C,cACAw0C,IAAA6B,IAUA,QAAAU,MACAlD,GAAAj+C,MACAA,KAAAsX,EACAtX,KAAAuX,EACAvX,KAAAohD,IACAphD,KAAA+/C,KACA//C,KAAAgnB,GAAA,KAGA,QAAAq6B,IAAAD,GACA,GAAAE,GAAAF,EAAAjD,EACAoD,EAAAH,EAAAhD,CAEA,IAAAkD,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAvB,KACA0B,EAAAL,EAAArB,KACA2B,EAAAH,EAAAxB,IAEA,IAAAyB,IAAAE,EAAA,CAEA,GAAAzC,GAAAwC,EAAA,GACAvC,EAAAuC,EAAA,GACA1I,EAAAyI,EAAA,GAAAvC,EACAjG,EAAAwI,EAAA,GAAAtC,EACAn4B,EAAA26B,EAAA,GAAAzC,EACAj4B,EAAA06B,EAAA,GAAAxC,EAEAziC,EAAA,GAAAs8B,EAAA/xB,EAAAgyB,EAAAjyB,EACA,MAAAtK,IAAAklC,IAAA,CAEA,GAAAC,GAAA7I,IAAAC,IACA6I,EAAA96B,IAAAC,IACA1P,GAAA0P,EAAA46B,EAAA5I,EAAA6I,GAAAplC,EACAlF,GAAAwhC,EAAA8I,EAAA96B,EAAA66B,GAAAnlC,EAEAg7B,EAAAqK,GAAAjwB,OAAA,GAAAsvB,GACA1J,GAAA2J,MACA3J,EAAAsI,KAAA0B,EACAhK,EAAAngC,IAAA2nC,EACAxH,EAAAlgC,GAAAkgC,EAAAzwB,GAAAzP,EAAA2nC,GAAApzC,KAAA+P,KAAAvE,IAAAC,KAEA6pC,EAAA3J,QAKA,KAHA,GAAAsK,GAAA,KACAvgC,EAAAi4B,GAAAl3C,EAEAif,GACA,GAAAi2B,EAAAlgC,EAAAiK,EAAAjK,GAAAkgC,EAAAlgC,IAAAiK,EAAAjK,GAAAkgC,EAAAngC,GAAAkK,EAAAlK,EAAA,CACA,IAAAkK,EAAA+X,EACA,CAAYwoB,EAAAvgC,EAAA28B,CAAiB,OAD7B38B,IAAA+X,MAEK,CACL,IAAA/X,EAAA08B,EACA,CAAY6D,EAAAvgC,CAAe,OAD3BA,IAAA08B,EAKAzE,GAAApE,OAAA0M,EAAAtK,GACAsK,IAAAC,GAAAvK,MAGA,QAAAwK,IAAAb,GACA,GAAA3J,GAAA2J,EAAA3J,MACAA,KACAA,EAAA0G,IAAA6D,GAAAvK,EAAA2G,GACA3E,GAAAroC,OAAAqmC,GACAqK,GAAA/uC,KAAA0kC,GACAwG,GAAAxG,GACA2J,EAAA3J,OAAA,MAMA,QAAAyK,MACAjE,GAAAj+C,MACAA,KAAAy+C,KACAz+C,KAAA+/C,KACA//C,KAAAy3C,OAAA,KAGA,QAAA0K,IAAApC,GACA,GAAAqC,GAAAC,GAAAxwB,OAAA,GAAAqwB,GAEA,OADAE,GAAArC,OACAqC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAAnxC,OAAAgxC,GACAC,GAAAtvC,KAAAqvC,GACAnE,GAAAmE,GAGA,QAAAI,IAAAJ,GACA,GAAA3K,GAAA2K,EAAA3K,OACAngC,EAAAmgC,EAAAngC,EACAC,EAAAkgC,EAAAzwB,GACA+3B,GAAAznC,EAAAC,GACAgiC,EAAA6I,EAAAjE,EACAvoC,EAAAwsC,EAAAhE,EACAqE,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAd,GAAA/H,EACA+H,EAAA7J,QACA3rC,KAAAuH,IAAAiE,EAAAgqC,EAAA7J,OAAAngC,GAAAuoC,IACA/zC,KAAAuH,IAAAkE,EAAA+pC,EAAA7J,OAAAzwB,IAAA64B,IACAtG,EAAA+H,EAAAnD,EACAsE,EAAAC,QAAApB,GACAgB,GAAAhB,GACAA,EAAA/H,CAGAkJ,GAAAC,QAAApB,GACAW,GAAAX,EAGA,KADA,GAAAC,GAAA3rC,EACA2rC,EAAA9J,QACA3rC,KAAAuH,IAAAiE,EAAAiqC,EAAA9J,OAAAngC,GAAAuoC,IACA/zC,KAAAuH,IAAAkE,EAAAgqC,EAAA9J,OAAAzwB,IAAA64B,IACAjqC,EAAA2rC,EAAAnD,EACAqE,EAAA1vC,KAAAwuC,GACAe,GAAAf,GACAA,EAAA3rC,CAGA6sC,GAAA1vC,KAAAwuC,GACAU,GAAAV,EAEA,IACAoB,GADAC,EAAAH,EAAAr4C,MAEA,KAAAu4C,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BpB,EAAAkB,EAAAE,GACArB,EAAAmB,EAAAE,EAAA,GACAhE,GAAA4C,EAAA9C,KAAA6C,EAAAvB,KAAAwB,EAAAxB,KAAAhB,EAGAuC,GAAAmB,EAAA,GACAlB,EAAAkB,EAAAG,EAAA,GACArB,EAAA9C,KAAAD,GAAA8C,EAAAvB,KAAAwB,EAAAxB,KAAA,KAAAhB,GAEAsC,GAAAC,GACAD,GAAAE,GAGA,QAAAsB,IAAA9C,GASA,IARA,GAEAuB,GACAC,EACAuB,EACAC,EALAzrC,EAAAyoC,EAAA,GACAiD,EAAAjD,EAAA,GAKAv+B,EAAA+gC,GAAAhgD,EAEAif,GAEA,GADAshC,EAAAG,GAAAzhC,EAAAwhC,GAAA1rC,EACAwrC,EAAAjD,GAAAr+B,IAAA+X,MAAuC,CAEvC,GADAwpB,EAAAzrC,EAAA4rC,GAAA1hC,EAAAwhC,KACAD,EAAAlD,IAMO,CACPiD,GAAAjD,IACAyB,EAAA9/B,EAAA28B,EACAoD,EAAA//B,GACSuhC,GAAAlD,IACTyB,EAAA9/B,EACA+/B,EAAA//B,EAAA48B,GAEAkD,EAAAC,EAAA//B,CAEA,OAfA,IAAAA,EAAA08B,EAAA,CACAoD,EAAA9/B,CACA,OAEAA,IAAA08B,EAgBA4B,GAAAC,EACA,IAAAoD,GAAAhB,GAAApC,EAGA,IAFAwC,GAAAlN,OAAAiM,EAAA6B,GAEA7B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAU,IAAAX,GACAC,EAAAY,GAAAb,EAAAvB,MACAwC,GAAAlN,OAAA8N,EAAA5B,GACA4B,EAAA1E,KAAA8C,EAAA9C,KAAAD,GAAA8C,EAAAvB,KAAAoD,EAAApD,MACAsB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA4B,EAAA1E,KAAAD,GAAA8C,EAAAvB,KAAAoD,EAAApD,MAKAkC,IAAAX,GACAW,GAAAV,EAEA,IAAAC,GAAAF,EAAAvB,KACAhH,EAAAyI,EAAA,GACAxI,EAAAwI,EAAA,GACAvC,EAAAc,EAAA,GAAAhH,EACAmG,EAAAa,EAAA,GAAA/G,EACA0I,EAAAH,EAAAxB,KACAh5B,EAAA26B,EAAA,GAAA3I,EACA/xB,EAAA06B,EAAA,GAAA1I,EACAv8B,EAAA,GAAAwiC,EAAAj4B,EAAAk4B,EAAAn4B,GACAq8B,EAAAnE,IAAAC,IACA2C,EAAA96B,IAAAC,IACA+3B,IAAA/3B,EAAAo8B,EAAAlE,EAAA2C,GAAAplC,EAAAs8B,GAAAkG,EAAA4C,EAAA96B,EAAAq8B,GAAA3mC,EAAAu8B,EAEA2F,IAAA4C,EAAA9C,KAAA+C,EAAAE,EAAA3C,GACAoE,EAAA1E,KAAAD,GAAAgD,EAAAzB,EAAA,KAAAhB,GACAwC,EAAA9C,KAAAD,GAAAuB,EAAA2B,EAAA,KAAA3C,GACAsC,GAAAC,GACAD,GAAAE,IAGA,QAAA0B,IAAA7B,EAAA4B,GACA,GAAAjD,GAAAqB,EAAArB,KACAsD,EAAAtD,EAAA,GACAuD,EAAAvD,EAAA,GACAwD,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA/B,GAAAF,EAAAjD,CACA,KAAAmD,EAAA,QAAAl/B,IAEA29B,GAAAuB,EAAAvB,IACA,IAAAyD,GAAAzD,EAAA,GACA0D,EAAA1D,EAAA,GACA2D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACA11C,EAAA21C,EAAAD,CAEA,OAAAE,KAAA51C,EAAAlC,KAAA+P,KAAA7N,IAAA,EAAA41C,GAAAD,QAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAA9B,EAAA4B,GACA,GAAAzB,GAAAH,EAAAhD,CACA,IAAAmD,EAAA,MAAA0B,IAAA1B,EAAAyB,EACA,IAAAjD,GAAAqB,EAAArB,IACA,OAAAA,GAAA,KAAAiD,EAAAjD,EAAA,GAAA39B,IAUA,QAAAyhC,IAAA91C,EAAAC,EAAAC,GACA,OAAAF,EAAA,GAAAE,EAAA,KAAAD,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAAC,EAAA,GAAAF,EAAA,IAGA,QAAA+1C,IAAA/1C,EAAAC,GACA,MAAAA,GAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,QAAAg2C,IAAAC,EAAAC,GACA,GACA3sC,GACAC,EACAkgC,EAHAsI,EAAAiE,EAAAltC,KAAAgtC,IAAAjyB,KAUA,KALA6sB,MACAE,GAAA,GAAAviC,OAAA2nC,EAAA55C,QACAm4C,GAAA,GAAAvE,IACAvE,GAAA,GAAAuE,MAIA,GADAvG,EAAAuK,GACAjC,KAAAtI,GAAAsI,EAAA,GAAAtI,EAAAlgC,GAAAwoC,EAAA,KAAAtI,EAAAlgC,GAAAwoC,EAAA,GAAAtI,EAAAngC,GACAyoC,EAAA,KAAAzoC,GAAAyoC,EAAA,KAAAxoC,IACAsrC,GAAA9C,GACAzoC,EAAAyoC,EAAA,GAAAxoC,EAAAwoC,EAAA,IAEAA,EAAAiE,EAAAnyB,UACK,KAAA4lB,EAGL,KAFA+K,IAAA/K,EAAA2J,KAQA,GAFAd,KAEA2D,EAAA,CACA,GAAAtiC,IAAAsiC,EAAA,MACAriC,GAAAqiC,EAAA,MACApiC,GAAAoiC,EAAA,MACAniC,GAAAmiC,EAAA,KACArE,IAAAj+B,EAAAC,EAAAC,EAAAC,GACA0+B,GAAA7+B,EAAAC,EAAAC,EAAAC,GAGA9hB,KAAA0+C,SACA1+C,KAAA4+C,SAEA2D,GACA9I,GACAiF,GACAE,GAAA,KAyGA,QAAAsF,IAAA33C,EAAAqK,EAAAuC,GACAnZ,KAAAuM,SACAvM,KAAA4W,OACA5W,KAAAmZ,YAGA,QAAAgrC,IAAAn1B,EAAA1X,EAAAC,GACAvX,KAAAgvB,IACAhvB,KAAAsX,IACAtX,KAAAuX,IA4CA,QAAA4B,IAAAqI,GACA,MAAAA,GAAA4iC,QAAAC,GAGA,QAAAC,MACA9kD,EAAAkQ,MAAAuB,2BASA,QAAAszC,MACA,OAAA/kD,EAAAkQ,MAAAiuC,OAGA,QAAA6G,MACA,GAAA/pB,GAAApQ,EAAA1G,EAAA3jB,IASA,OARA2jB,aAAA8gC,aACA9gC,IAAA+gC,iBAAA/gC,EACA8W,EAAA9W,EAAA1jB,MAAAoxB,QAAAnZ,MACAmS,EAAA1G,EAAAxY,OAAAkmB,QAAAnZ,QAEAuiB,EAAA9W,EAAAghC,YACAt6B,EAAA1G,EAAAihC,gBAEA,MAAAnqB,EAAApQ,IAGA,QAAAw6B,MACA,MAAA7kD,MAAAokD,QAAAC,GA0VA,QAAAS,MACAtlD,EAAAkQ,MAAAuB,2BA2FA,QAAA8zC,IAAA3mC,GACA,OAAUxH,KAAAwH,GAIV,QAAA4mC,MACA,OAAAxlD,EAAAkQ,MAAAiuC,OAGA,QAAAsH,MACA,GAAAC,GAAAllD,KAAA0kD,iBAAA1kD,IACA,eAAAklD,EAAAjlD,MAAAoxB,QAAAnZ,MAAAgtC,EAAA/5C,OAAAkmB,QAAAnZ,QAIA,QAAAitC,IAAA3jC,GACA,MAAAA,EAAA4jC,SAAA,KAAA5jC,IAAAitB,YAAA,MACA,OAAAjtB,GAAA4jC,QAGA,QAAAC,IAAApB,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAqB,IAAA9jC,GACA,GAAAyuB,GAAAzuB,EAAA4jC,OACA,OAAAnV,KAAAsV,IAAApgB,OAAA8K,EAAAJ,WAAA,KAGA,QAAA2V,MACA,MAAAC,IAAA5mB,IAGA,QAAA6mB,MACA,MAAAD,IAAA1mB,IAOA,QAAA0mB,IAAAF,GAOA,QAAAI,GAAA7b,GACA,GAAA8b,GAAA9b,EACA+b,SAAA,UAAAC,GACAhR,UAAA,YACA3sC,MAAA48C,GAAA,YAEAa,GAAAta,QAAA1gC,OAAA,QACAjB,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAAo8C,GAAAH,SACAxQ,MAAAwQ,GACA/6C,KAAA,WACA,GAAAo5C,GAAAkB,GAAAnlD,MAAAikD,MACA9O,IAAAn1C,MACA2J,KAAA,IAAAs6C,EAAA,OACAt6C,KAAA,IAAAs6C,EAAA,OACAt6C,KAAA,QAAAs6C,EAAA,MAAAA,EAAA,OACAt6C,KAAA,SAAAs6C,EAAA,MAAAA,EAAA,SAGAna,EAAAgL,UAAA,cACA3sC,MAAA48C,GAAA,eACAzZ,QAAA1gC,OAAA,QACAjB,KAAA,qBACAA,KAAA,SAAAo8C,GAAAlW,WACAlmC,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAAq8C,GAAAlc,EAAAgL,UAAA,WACA3sC,KAAAo9C,EAAAU,QAAA,SAAAxpC,GAAsC,MAAAA,GAAA7F,MAEtCovC,GAAAxa,OAAAp6B,SAEA40C,EAAA1a,QAAA1gC,OAAA,QACAjB,KAAA,iBAAA8S,GAAoC,wBAAAA,EAAA7F,OACpCjN,KAAA,kBAAA8S,GAAqC,MAAAspC,IAAAtpC,EAAA7F,QAErCkzB,EACAj/B,KAAAq7C,GACAv8C,KAAA,eACAA,KAAA,wBACA6O,MAAA,+CACAzY,GAAA,mCAAAomD,GAyCA,QAAAD,KACA,GAAApc,GAAAqL,GAAAn1C,MACAk9C,EAAAiI,GAAAnlD,MAAA6vC,SAEAqN,IACApT,EAAAgL,UAAA,cACAt8B,MAAA,gBACA7O,KAAA,IAAAuzC,EAAA,OACAvzC,KAAA,IAAAuzC,EAAA,OACAvzC,KAAA,QAAAuzC,EAAA,MAAAA,EAAA,OACAvzC,KAAA,SAAAuzC,EAAA,MAAAA,EAAA,OAEApT,EAAAgL,UAAA,WACAt8B,MAAA,gBACA7O,KAAA,aAAA8S,GAAkC,YAAAA,EAAA7F,KAAA6F,EAAA7F,KAAAxM,OAAA,GAAA8yC,EAAA,MAAAkJ,EAAA,EAAAlJ,EAAA,MAAAkJ,EAAA,IAClCz8C,KAAA,aAAA8S,GAAkC,YAAAA,EAAA7F,KAAA,GAAAsmC,EAAA,MAAAkJ,EAAA,EAAAlJ,EAAA,MAAAkJ,EAAA,IAClCz8C,KAAA,iBAAA8S,GAAsC,YAAAA,EAAA7F,MAAA,MAAA6F,EAAA7F,KAAAsmC,EAAA,MAAAA,EAAA,MAAAkJ,MACtCz8C,KAAA,kBAAA8S,GAAuC,YAAAA,EAAA7F,MAAA,MAAA6F,EAAA7F,KAAAsmC,EAAA,MAAAA,EAAA,MAAAkJ,OAIvCtc,EAAAgL,UAAA,sBACAt8B,MAAA,kBACA7O,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAA08C,GAAAv+B,EAAA1L,GACA,MAAA0L,GAAAs9B,QAAAiB,SAAA,GAAAC,GAAAx+B,EAAA1L,GAGA,QAAAkqC,GAAAx+B,EAAA1L,GACApc,KAAA8nB,OACA9nB,KAAAoc,OACApc,KAAAiwC,MAAAnoB,EAAAs9B,QACAplD,KAAAw9C,OAAA,EAyBA,QAAA2I,KAqEA,QAAAI,KACA,GAAAC,GAAAC,GAAA3+B,IACA4+B,GAAAC,GAAAC,IACA96C,KAAAuH,IAAAmzC,EAAA,GAAA3+B,EAAA,IAAA/b,KAAAuH,IAAAmzC,EAAA,GAAA3+B,EAAA,IAAA++B,GAAA,EACAD,GAAA,GAEA9+B,EAAA2+B,EACAK,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAA3oC,EAKA,QAHA+H,EAAA0B,EAAA,GAAAm/B,EAAA,GACA5gC,EAAAyB,EAAA,GAAAm/B,EAAA,GAEAC,GACA,IAAAC,IACA,IAAAC,IACAC,IAAAjhC,EAAAra,KAAA+G,IAAA8nB,EAAA0sB,EAAAv7C,KAAAuD,IAAA4f,EAAAq4B,EAAAnhC,IAAAohC,EAAAF,EAAAlhC,EAAAqhC,EAAAF,EAAAnhC,GACAshC,IAAArhC,EAAAta,KAAA+G,IAAAurC,EAAAsJ,EAAA57C,KAAAuD,IAAAiqB,EAAApP,EAAA9D,IAAAuhC,EAAAD,EAAAthC,EAAA+D,EAAAD,EAAA9D,EACA,MAEA,KAAAwhC,IACAR,EAAA,GAAAjhC,EAAAra,KAAA+G,IAAA8nB,EAAA0sB,EAAAv7C,KAAAuD,IAAA4f,EAAAo4B,EAAAlhC,IAAAohC,EAAAF,EAAAlhC,EAAAqhC,EAAAF,GACAF,EAAA,IAAAjhC,EAAAra,KAAA+G,IAAA8nB,EAAA2sB,EAAAx7C,KAAAuD,IAAA4f,EAAAq4B,EAAAnhC,IAAAohC,EAAAF,EAAAG,EAAAF,EAAAnhC,GACAshC,EAAA,GAAArhC,EAAAta,KAAA+G,IAAAurC,EAAAsJ,EAAA57C,KAAAuD,IAAAiqB,EAAAouB,EAAAthC,IAAAuhC,EAAAD,EAAAthC,EAAA+D,EAAAD,GACAu9B,EAAA,IAAArhC,EAAAta,KAAA+G,IAAAurC,EAAAl0B,EAAApe,KAAAuD,IAAAiqB,EAAApP,EAAA9D,IAAAuhC,EAAAD,EAAAv9B,EAAAD,EAAA9D,EACA,MAEA,KAAAyhC,IACAT,IAAAG,EAAAz7C,KAAA+G,IAAA8nB,EAAA7uB,KAAAuD,IAAA4f,EAAAo4B,EAAAlhC,EAAAihC,IAAAI,EAAA17C,KAAA+G,IAAA8nB,EAAA7uB,KAAAuD,IAAA4f,EAAAq4B,EAAAnhC,EAAAihC,KACAK,IAAAE,EAAA77C,KAAA+G,IAAAurC,EAAAtyC,KAAAuD,IAAAiqB,EAAAouB,EAAAthC,EAAAqhC,IAAAt9B,EAAAre,KAAA+G,IAAAurC,EAAAtyC,KAAAuD,IAAAiqB,EAAApP,EAAA9D,EAAAqhC,KAKAD,EAAAD,IACAH,MACAhpC,EAAAipC,IAAAC,IAAAlpC,EACAA,EAAAmpC,IAAAC,IAAAppC,EACAxH,IAAAkxC,KAAAlC,EAAAj8C,KAAA,SAAAo8C,GAAAnvC,EAAAkxC,GAAAlxC,MAGAuT,EAAAw9B,IACAF,MACArpC,EAAAspC,IAAAx9B,IAAA9L,EACAA,EAAAupC,IAAAx9B,IAAA/L,EACAxH,IAAAmxC,KAAAnC,EAAAj8C,KAAA,SAAAo8C,GAAAnvC,EAAAmxC,GAAAnxC,MAGAsmC,EAAAjN,EAAAJ,UAEA8W,IAAAY,EAAArK,EAAA,MAAAsK,EAAAtK,EAAA,OACA0J,IAAAe,EAAAzK,EAAA,MAAA/yB,EAAA+yB,EAAA,OAEAA,EAAA,QAAAqK,GACArK,EAAA,QAAAyK,GACAzK,EAAA,QAAAsK,GACAtK,EAAA,QAAA/yB,IACA8lB,EAAAJ,YAAA0X,EAAAI,IAAAH,EAAAr9B,IACA+7B,EAAAh6C,KAAA4b,GACAkgC,EAAArC,SAIA,QAAAsC,KAEA,GADAnD,KACAtlD,EAAAkQ,MAAA0L,QAAA,CACA,GAAA5b,EAAAkQ,MAAA0L,QAAAhR,OAAA,MACA89C,IAAA9nD,aAAA8nD,GACAA,EAAAxnD,WAAA,WAA6CwnD,EAAA,MAAsB,KACnEpe,EAAA/pC,GAAA,6DAEAg9C,IAAAv9C,EAAAkQ,MAAAstC,KAAA6J,GACA7J,EAAAj9C,GAAA,+DAEA+pC,GAAAngC,KAAA,wBACAi8C,EAAAj8C,KAAA,SAAAo8C,GAAAH,SACAP,GAAAnI,KAAAjN,EAAAJ,UAAA,KAAAqW,EAAAh6C,KAAA4b,IACAkgC,EAAA3zC,MAGA,QAAA8zC,KACA,OAAA3oD,EAAAkQ,MAAAmF,SACA,QACA6xC,EAAAU,GAAAK,CACA,MAEA,SACAR,IAAAW,KACAR,IAAAE,EAAAE,EAAArhC,EAAAihC,EAAAC,EAAAE,EAAAphC,EAAAihC,GACAK,IAAAv9B,EAAAC,EAAA/D,EAAAqhC,EAAAC,EAAAC,EAAAvhC,EAAAqhC,GACAR,EAAAY,GACAd,IAEA,MAEA,SACAE,IAAAW,IAAAX,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAArhC,EAAwCihC,EAAA,IAAAC,EAAAE,EAAAphC,GACxCshC,EAAA,EAAAv9B,EAAAC,EAAA/D,EAAwCqhC,EAAA,IAAAC,EAAAC,EAAAvhC,GACxC6gC,EAAAC,GACAtB,EAAAj8C,KAAA,SAAAo8C,GAAAlW,WACAkX,IAEA,MAEA,gBAEAD,KAGA,QAAAsB,KACA,OAAA5oD,EAAAkQ,MAAAmF,SACA,QACA6xC,IACAC,EAAAC,EAAAF,GAAA,EACAK,IAEA,MAEA,SACAE,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAmCJ,EAAA,IAAAC,EAAAE,GACnCE,EAAA,EAAAv9B,EAAAC,EAAmCs9B,EAAA,IAAAC,EAAAC,GACnCV,EAAAW,GACAb,IAEA,MAEA,SACAE,IAAAC,KACA1nD,EAAAkQ,MAAA24C,QACAjB,IAAAE,EAAAE,EAAArhC,EAAAihC,EAAAC,EAAAE,EAAAphC,EAAAihC,GACAK,IAAAv9B,EAAAC,EAAA/D,EAAAqhC,EAAAC,EAAAC,EAAAvhC,EAAAqhC,GACAR,EAAAY,KAEAT,EAAA,EAAAE,EAAAE,EAAqCJ,EAAA,IAAAC,EAAAE,GACrCE,EAAA,EAAAv9B,EAAAC,EAAqCs9B,EAAA,IAAAC,EAAAC,GACrCV,EAAAW,IAEAhC,EAAAj8C,KAAA,SAAAo8C,GAAAnvC,IACAmwC,IAEA,MAEA,gBAEAD,KA3NA,GAAAtnD,EAAAkQ,MAAA0L,SAAgC,GAAA5b,EAAAkQ,MAAA44C,eAAAl+C,OAAA5K,EAAAkQ,MAAA0L,QAAAhR,OAAA,MAAA08C,UAChC,IAAAoB,EAAA,MACA,IAAAv2C,EAAAzP,MAAAlC,KAAAmY,WAAA,CAEA,GAQAkvC,GAAAE,EACAG,EAAAC,EACAL,EAAAE,EACAt9B,EAAAC,EACAhE,EACAC,EACAygC,EAEAF,EACAC,EAjBA9+B,EAAA9nB,KACA4W,EAAApX,EAAAkQ,MAAAnD,OAAA89B,SAAAzzB,KACAqwC,EAAA,eAAAznD,EAAAkQ,MAAA64C,QAAA3xC,EAAA,UAAAA,GAAAuwC,GAAA3nD,EAAAkQ,MAAA24C,OAAAR,GAAAD,GACAR,EAAA7B,IAAAxmB,GAAA,KAAAypB,GAAA5xC,GACA6wC,EAAAlC,IAAA1mB,GAAA,KAAA4pB,GAAA7xC,GACAq5B,EAAAkV,GAAAr9B,GACAm8B,EAAAhU,EAAAgU,OACA/G,EAAAjN,EAAAJ,UACAlV,EAAAspB,EAAA,MACA7F,EAAA6F,EAAA,MACAh1B,EAAAg1B,EAAA,MACA3qB,EAAA2qB,EAAA,MAIAyC,EAAAU,GAAAK,GAAAjoD,EAAAkQ,MAAAg5C,SAGA1B,EAAAP,GAAA3+B,GACAD,EAAAm/B,EACAgB,EAAA3B,EAAAv+B,EAAA3P,WAAAwwC,aAEA,aAAA/xC,EACAq5B,EAAAJ,UAAAqN,IACAmK,EAAA9B,IAAAxmB,GAAApE,EAAAqsB,EAAA,GAAAU,EAAAnC,IAAA1mB,GAAAuf,EAAA4I,EAAA,KACAM,EAAA/B,IAAAxmB,GAAA9P,EAAAo4B,EAAAn9B,EAAAq7B,IAAA1mB,GAAAvF,EAAAouB,KAGAL,EAAAnK,EAAA,MACAwK,EAAAxK,EAAA,MACAoK,EAAApK,EAAA,MACAhzB,EAAAgzB,EAAA,OAGAqK,EAAAF,EACAM,EAAAD,EACAF,EAAAF,EACAn9B,EAAAD,CAEA,IAAA4f,GAAAqL,GAAArtB,GACAne,KAAA,yBAEAi8C,EAAA9b,EAAAgL,UAAA,YACAnrC,KAAA,SAAAo8C,GAAAnvC,GAEA,IAAApX,EAAAkQ,MAAA0L,QACA0uB,EACA/pC,GAAA,kBAAAwmD,GAAA,GACAxmD,GAAA,mCAAAkoD,GAAA,OACK,CACL,GAAAjL,GAAA7H,GAAA31C,EAAAkQ,MAAAstC,MACAj9C,GAAA,gBAAAooD,GAAA,GACApoD,GAAA,cAAAqoD,GAAA,GACAroD,GAAA,kBAAAwmD,GAAA,GACAxmD,GAAA,gBAAAkoD,GAAA,EAEAW,IAAAppD,EAAAkQ,MAAAstC,MAGA8H,KACAn0C,GAAAmX,GACAo+B,EAAAh6C,KAAA4b,GACAkgC,EAAAprC,SA6JA,QAAAkpC,KACA,GAAA7V,GAAAjwC,KAAAolD,UAAiCvV,UAAA,KAGjC,OAFAI,GAAAgU,SAAA/hD,MAAAlC,KAAAmY,WACA83B,EAAAsV,MACAtV,EA9XA,GAIAiY,GAJAjE,EAAAgB,GACAtzC,EAAAqzC,GACA6D,EAAAt1B,GAAAoyB,EAAA,uBACAS,EAAA,CA+YA,OA7VAT,GAAAoB,KAAA,SAAAjd,EAAAoT,GACApT,EAAA+F,UACA/F,EACA/pC,GAAA,yBAAyCsmD,EAAArmD,KAAAmY,WAAAwwC,cAAA/rC,UACzC7c,GAAA,uCAAuDsmD,EAAArmD,KAAAmY,WAAA9D,QACvD08B,MAAA,mBAQA,QAAAA,GAAA3yB,GACA6xB,EAAAJ,UAAA,IAAAzxB,GAAAinC,GAAAyD,GAAA,KAAAxlD,EAAA8a,GACA8nC,EAAAh6C,KAAA4b,GACAkgC,EAAArC,QAVA,GAAA79B,GAAA9nB,KACAiwC,EAAAnoB,EAAAs9B,QACA4C,EAAA3B,EAAAv+B,EAAA3P,WACA4wC,EAAA9Y,EAAAJ,UACAiZ,EAAAvD,EAAAngB,MAAA,kBAAA8X,KAAAh7C,MAAAlC,KAAAmY,WAAA+kC,EAAAjN,EAAAgU,QACA3gD,EAAAyhC,GAAAgkB,EAAAD,EAQA,OAAAC,IAAAD,EAAA/X,IAAA,KAGAjH,EACAj/B,KAAA,WACA,GAAAid,GAAA9nB,KACAoc,EAAAjE,UACA83B,EAAAnoB,EAAAs9B,QACA0D,EAAAvD,EAAAngB,MAAA,kBAAA8X,KAAAh7C,MAAA4lB,EAAA1L,GAAA8gC,EAAAjN,EAAAgU,QACA+D,EAAA3B,EAAAv+B,EAAA1L,GAAAusC,aAEAh4C,IAAAmX,GACAmoB,EAAAJ,UAAA,MAAAiZ,GAAAzD,GAAAyD,GAAA,KAAAA,EACA5C,EAAAh6C,KAAA4b,GACAkgC,EAAAprC,QAAA+oC,QAAAtxC,SA8CAiyC,EAAA98C,WACAm/C,YAAA,WAEA,MADA,OAAA3oD,KAAAw9C,SAAAx9C,KAAAiwC,MAAAoW,QAAArmD,UAAAgpD,UAAA,GACAhpD,MAEA4c,MAAA,WAEA,MADA5c,MAAAgpD,WAAAhpD,KAAAgpD,UAAA,EAAAhpD,KAAAgoD,KAAA,UACAhoD,MAEA2lD,MAAA,WAEA,MADA3lD,MAAAgoD,KAAA,SACAhoD,MAEAqU,IAAA,WAEA,MADA,OAAArU,KAAAw9C,eAAAx9C,MAAAiwC,MAAAoW,QAAArmD,KAAAgoD,KAAA,QACAhoD,MAEAgoD,KAAA,SAAApxC,GACAm0B,GAAA,GAAAke,IAAAtD,EAAA/uC,EAAA2uC,EAAApgB,OAAAnlC,KAAAiwC,MAAAJ,YAAAgZ,EAAA3mD,MAAA2mD,GAAAjyC,EAAA5W,KAAA8nB,KAAA9nB,KAAAoc,SA2OAupC,EAAA1B,OAAA,SAAA1hD,GACA,MAAA4V,WAAA/N,QAAA65C,EAAA,kBAAA1hD,KAAA2mD,MAAA3mD,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAojD,GAAA1B,GAGA0B,EAAAh0C,OAAA,SAAApP,GACA,MAAA4V,WAAA/N,QAAAuH,EAAA,kBAAApP,KAAA2mD,KAAA3mD,GAAAojD,GAAAh0C,GAGAg0C,EAAAS,WAAA,SAAA7jD,GACA,MAAA4V,WAAA/N,QAAAg8C,GAAA7jD,EAAAojD,GAAAS,GAGAT,EAAA5lD,GAAA,WACA,GAAAmY,GAAA2wC,EAAA9oD,GAAAmC,MAAA2mD,EAAA1wC,UACA,OAAAD,KAAA2wC,EAAAlD,EAAAztC,GAGAytC,EAUA,QAAAwD,IAAAC,GACA,gBAAAr7C,EAAAC,GACA,MAAAo7C,GACAr7C,EAAA+2B,OAAA5sB,MAAAnK,EAAAxB,OAAA2L,MACAlK,EAAA82B,OAAA5sB,MAAAlK,EAAAzB,OAAA2L,QA2HA,QAAAmxC,IAAA5sC,GACA,MAAAA,GAAAqoB,OAGA,QAAAwkB,IAAA7sC,GACA,MAAAA,GAAAlQ,OAGA,QAAAg9C,IAAA9sC,GACA,MAAAA,GAAAmL,OAGA,QAAA4hC,IAAA/sC,GACA,MAAAA,GAAA6H,WAGA,QAAAmlC,IAAAhtC,GACA,MAAAA,GAAA+H,SA6EA,QAAAklC,MACA1pD,KAAA2pD,QAsBA,QAAAC,IAAAC,EAAA97C,EAAAC,GACA,GAAAsJ,GAAAuyC,EAAAr+B,EAAAzd,EAAAC,EACA87C,EAAAxyC,EAAAvJ,EACAg8C,EAAAzyC,EAAAwyC,CACAD,GAAAzrC,EAAArQ,EAAAg8C,GAAA/7C,EAAA87C,GA2BA,QAAAE,IAAA1yC,GACA,MAAAA,GAAA,IAAAA,KAAA2yC,GAAAn+C,KAAAk+C,KAAA1yC,GAGA,QAAA4yC,IAAA5yC,GACA,MAAAA,GAAA,EAAA6yC,GAAA7yC,MAAA6yC,GAAAr+C,KAAA6Y,KAAArN,GAGA,QAAA8yC,IAAA9yC,GACA,OAAAA,EAAA+yC,GAAA/yC,EAAA,IAAAA,EAGA,QAAAgzC,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAAp7C,eAAAk7C,EAAA5zC,OACA8zC,GAAAF,EAAA5zC,MAAA4zC,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAAxnD,KAAAkN,EAAAo6C,EAAAxgD,OAAAygD,CAEA,KADAJ,EAAAM,cACAznD,EAAAkN,GAAAs6C,EAAAF,EAAAtnD,GAAAmnD,EAAA5iC,MAAAijC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAAnnD,MAAAkN,EAAAo6C,EAAAxgD,MAEA,KADAqgD,EAAAS,iBACA5nD,EAAAkN,GAAAm6C,GAAAC,EAAAtnD,GAAAmnD,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAAxjC,MAAAyjC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAAxjC,MAAA2jC,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACA58B,EAAAk9B,GAAAK,EACA7lB,EAAAqlB,GAAAO,EAAAt9B,EAAAg9B,GAAAK,GACA9gC,EAAAyD,EAAAo9B,EAAA/B,GAAAgC,EACAG,IAAAv/C,IAAAyN,GAAA6Q,EAAAmb,IAGAolB,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAE,IAAAC,GACA,OAAAhyC,GAAAgyC,EAAA,GAAAA,EAAA,IAAAxC,GAAAwC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAd,GAAAc,EAAA,GAAAb,EAAAa,EAAA,GAAAH,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAe,IAAA5+C,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA4+C,IAAA7+C,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,QAAA6+C,IAAA9+C,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,QAAA8+C,IAAAC,EAAA/9B,GACA,OAAA+9B,EAAA,GAAA/9B,EAAA+9B,EAAA,GAAA/9B,EAAA+9B,EAAA,GAAA/9B,GAIA,QAAAg+B,IAAAvwC,GACA,GAAA/F,GAAAu2C,GAAAxwC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA/F,EAAA+F,EAAA,IAAA/F,EAAA+F,EAAA,IAAA/F,EAsCA,QAAAw2C,IAAAvB,EAAAC,GACAuB,GAAAp6C,KAAAq6C,IAAAC,GAAA1B,EAAA2B,GAAA3B,IACAC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,GAGA,QAAA6B,IAAA9B,EAAAC,GACA,GAAAxkC,GAAAslC,IAAAf,EAAAE,GAAAD,EAAAC,IACA,IAAA6B,GAAA,CACA,GAAAC,GAAAf,GAAAc,GAAAtmC,GACAwmC,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAjB,GAAAgB,EAAAD,EACAX,IAAAa,GACAA,EAAApB,GAAAoB,EACA,IAGAC,GAHAC,EAAApC,EAAAqC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAA/6C,GAAA06C,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACAmC,EAAAD,EAAA,GAAAM,GACAL,EAAAN,QAAAM,KACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACLmC,GAAAD,EAAA,GAAAM,GACAL,EAAAP,QAAAO,KAEAlC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,KAEAwC,EACAzC,EAAAqC,GACArmC,GAAA0lC,GAAA1B,GAAAhkC,GAAA0lC,GAAAC,SAAA3B,GAEAhkC,GAAAgkC,EAAA2B,IAAA3lC,GAAA0lC,GAAAC,MAAAD,GAAA1B,GAGA2B,IAAAD,IACA1B,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,IAEAA,EAAAqC,GACArmC,GAAA0lC,GAAA1B,GAAAhkC,GAAA0lC,GAAAC,SAAA3B,GAEAhkC,GAAAgkC,EAAA2B,IAAA3lC,GAAA0lC,GAAAC,MAAAD,GAAA1B,OAKAuB,IAAAvB,EAAAC,EAEA8B,IAAAtmC,EAAA4mC,GAAArC,EAGA,QAAA0C,MACAC,GAAAzmC,MAAA4lC,GAGA,QAAAc,MACAnB,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAgB,GAAAzmC,MAAAqlC,GACAQ,GAAA,KAGA,QAAAc,IAAA7C,EAAAC,GACA,GAAA8B,GAAA,CACA,GAAAK,GAAApC,EAAAqC,EACAS,IAAAxhD,IAAAoG,GAAA06C,GAAA,IAAAA,KAAA,YAAAA,OAEAW,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAAxjC,MAAA8jC,EAAAC,GACA6B,GAAA9B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACA33C,GAAAo7C,IAAAK,KAAAzB,KAAAC,GAAA,MACAF,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAI,GAAA,KAMA,QAAA/lC,IAAAmkC,EAAAwB,GACA,OAAAA,GAAAxB,GAAA,EAAAwB,EAAA,IAAAA,EAGA,QAAAyB,IAAAhhD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAGA,QAAAghD,IAAA93B,EAAA5f,GACA,MAAA4f,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA5f,MAAA4f,EAAA,GAAA5f,EAAA4f,EAAA,IAAAA,EAAA,GAAA5f,EAyEA,QAAA23C,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAA53C,EAAAC,EAAAyW,KACAmhC,GACAC,KAAA93C,EAAA83C,IAAAD,GACAE,KAAA93C,EAAA83C,IAAAF,GACAG,KAAAthC,EAAAshC,IAAAH,GAGA,QAAAI,MACAC,GAAA3nC,MAAA4nC,GAGA,QAAAA,IAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAjqC,IAAA2qC,EAAAN,GAAAL,GACA/pC,GAAA0qC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACA4D,GAAA3nC,MAAA8nC,GACAT,GAAAvtC,GAAAC,GAAA8tC,IAGA,QAAAC,IAAAhE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAt0C,EAAAg1C,EAAAN,GAAAL,GACAp0C,EAAA+0C,EAAAjC,GAAAsB,GACA39B,EAAAq8B,GAAAuB,GACAnxB,EAAA/f,GAAAuyC,IAAAxyB,EAAA7Y,GAAAoM,EAAA0hC,GAAAn4C,GAAAkjB,KAAAi1B,GAAAp4C,EAAAqK,GAAAqM,GAAAyM,KAAA9Y,GAAApK,EAAAqK,GAAAtK,GAAAmjB,GAAA9Y,GAAArK,EAAAsK,GAAArK,EAAAm4C,GAAA1hC,EACA4hC,KAAAn1B,EACAo1B,IAAAp1B,GAAA9Y,OAAArK,IACAw4C,IAAAr1B,GAAA7Y,OAAArK,IACAw4C,IAAAt1B,GAAAi1B,OAAA1hC,IACAkhC,GAAAvtC,GAAAC,GAAA8tC,IAGA,QAAAM,MACAR,GAAA3nC,MAAAonC,GAKA,QAAAgB,MACAT,GAAA3nC,MAAAqoC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAd,GAAA3nC,MAAAonC,GAGA,QAAAiB,IAAAvE,EAAAC,GACAyE,GAAA1E,EAAA2E,GAAA1E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAA3nC,MAAAuoC,EACA,IAAA9D,GAAAN,GAAAJ,EACAjqC,IAAA2qC,EAAAN,GAAAL,GACA/pC,GAAA0qC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACAsD,GAAAvtC,GAAAC,GAAA8tC,IAGA,QAAAU,IAAAzE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAt0C,EAAAg1C,EAAAN,GAAAL,GACAp0C,EAAA+0C,EAAAjC,GAAAsB,GACA39B,EAAAq8B,GAAAuB,GACA7kC,EAAAnF,GAAAoM,EAAA0hC,GAAAn4C,EACAyP,EAAA0oC,GAAAp4C,EAAAqK,GAAAqM,EACAuiC,EAAA5uC,GAAApK,EAAAqK,GAAAtK,EACAiS,EAAA0jC,GAAAlmC,IAAAC,IAAAupC,KACA7pB,EAAA/kB,GAAArK,EAAAsK,GAAArK,EAAAm4C,GAAA1hC,EACAzC,EAAAhC,IAAAygC,GAAAtjB,GAAAnd,EACAkR,EAAA/f,GAAA6O,EAAAmd,EACA8pB,KAAAjlC,EAAAxE,EACA0pC,IAAAllC,EAAAvE,EACA0pC,IAAAnlC,EAAAglC,EACAX,IAAAn1B,EACAo1B,IAAAp1B,GAAA9Y,OAAArK,IACAw4C,IAAAr1B,GAAA7Y,OAAArK,IACAw4C,IAAAt1B,GAAAi1B,OAAA1hC,IACAkhC,GAAAvtC,GAAAC,GAAA8tC,IA+CA,QAAAiB,IAAAhF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,GAKA,QAAAiF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAAnF,EAAAC,GACA,MAAAD,IAAAmF,GAAAnF,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,IAIA,QAAAsF,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAA9rB,OAAA6rB,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA1F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAt0C,EAAA00C,GAAAL,GAAAW,EACA/0C,EAAA8yC,GAAAsB,GAAAW,EACAt+B,EAAAq8B,GAAAuB,GACA58B,EAAAhB,EAAAsjC,EAAAh6C,EAAAi6C,CACA,QACA72C,GAAAnD,EAAAi6C,EAAAxiC,EAAAyiC,EAAAn6C,EAAAg6C,EAAAtjC,EAAAujC,GACArH,GAAAl7B,EAAAwiC,EAAAj6C,EAAAk6C,IAbA,GAAAH,GAAAtF,GAAA+E,GACAQ,EAAAlH,GAAA0G,GACAS,EAAAxF,GAAAgF,GACAS,EAAApH,GAAA2G,EA0BA,OAZAK,GAAA9rB,OAAA,SAAAomB,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAt0C,EAAA00C,GAAAL,GAAAW,EACA/0C,EAAA8yC,GAAAsB,GAAAW,EACAt+B,EAAAq8B,GAAAuB,GACA58B,EAAAhB,EAAAwjC,EAAAj6C,EAAAk6C,CACA,QACA/2C,GAAAnD,EAAAi6C,EAAAxjC,EAAAyjC,EAAAn6C,EAAAg6C,EAAAtiC,EAAAuiC,GACArH,GAAAl7B,EAAAsiC,EAAAh6C,EAAAi6C,KAIAF,EAoBA,QAAAK,IAAAjH,EAAA7iC,EAAAmmC,EAAAnoD,EAAA2kB,EAAAC,GACA,GAAAujC,EAAA,CACA,GAAA4D,GAAA3F,GAAApkC,GACAgqC,EAAAvH,GAAAziC,GACAhc,EAAAhG,EAAAmoD,CACA,OAAAxjC,GACAA,EAAA3C,EAAAhiB,EAAAgrD,GACApmC,EAAA5C,EAAAhc,EAAA,IAEA2e,EAAAsnC,GAAAF,EAAApnC,GACAC,EAAAqnC,GAAAF,EAAAnnC,IACA5kB,EAAA,EAAA2kB,EAAAC,EAAAD,EAAAC,KAAAD,GAAA3kB,EAAAgrD,IAEA,QAAA/oC,GAAAzJ,EAAAmM,EAAyB3kB,EAAA,EAAAwY,EAAAoM,EAAApM,EAAAoM,EAAiCpM,GAAAxS,EAC1Dic,EAAA4kC,IAAAkF,GAAAC,EAAA5F,GAAA5tC,IAAAwzC,EAAAvH,GAAAjsC,KACAqsC,EAAA5iC,QAAA,GAAAA,EAAA,KAKA,QAAAgqC,IAAAF,EAAA9pC,GACAA,EAAA6kC,GAAA7kC,KAAA,IAAA8pC,EACA3E,GAAAnlC,EACA,IAAAD,GAAAoiC,IAAAniC,EAAA,GACA,UAAAA,EAAA,MAAAD,KAAAgpC,GAAA9B,IAAA8B,GAkIA,QAAAkB,IAAAjqC,EAAAtH,EAAAwxC,EAAAC,GACAhyD,KAAAsX,EAAAuQ,EACA7nB,KAAAguB,EAAAzN,EACAvgB,KAAA6d,EAAAk0C,EACA/xD,KAAA2jB,EAAAquC,EACAhyD,KAAAurB,GAAA,EACAvrB,KAAAwQ,EAAAxQ,KAAAonB,EAAA,KA+EA,QAAA6qC,IAAA1R,GACA,GAAA/vC,EAAA+vC,EAAAn2C,OAAA,CAKA,IAJA,GAAAoG,GAGAxC,EAFA1K,EAAA,EACAyK,EAAAwyC,EAAA,KAEAj9C,EAAAkN,GACAzC,EAAAyC,EAAAxC,EAAAuyC,EAAAj9C,GACA0K,EAAAoZ,EAAArZ,EACAA,EAAAC,CAEAD,GAAAyC,EAAAxC,EAAAuyC,EAAA,GACAvyC,EAAAoZ,EAAArZ,GASA,QAAAmkD,IAAAvwC,EAAAC,EAAAC,EAAAC,GAEA,QAAAqwC,GAAA76C,EAAAC,GACA,MAAAoK,IAAArK,MAAAuK,GAAAD,GAAArK,MAAAuK,EAGA,QAAAijB,GAAAqtB,EAAAC,EAAAzsD,EAAA6kD,GACA,GAAA18C,GAAA,EAAAukD,EAAA,CACA,UAAAF,IACArkD,EAAAwkD,EAAAH,EAAAxsD,OAAA0sD,EAAAC,EAAAF,EAAAzsD,KACA4sD,EAAAJ,EAAAC,GAAA,EAAAzsD,EAAA,GACA,EAAA6kD,GAAA5iC,MAAA,IAAA9Z,GAAA,IAAAA,EAAA4T,EAAAE,EAAA9T,EAAA,EAAA+T,EAAAF,UACA7T,KAAAnI,EAAA,QAAA0sD,OAEA7H,GAAA5iC,MAAAwqC,EAAA,GAAAA,EAAA,IAIA,QAAAE,GAAAnrC,EAAAxhB,GACA,MAAAyN,IAAA+T,EAAA,GAAAzF,GAAAmtC,GAAAlpD,EAAA,MACAyN,GAAA+T,EAAA,GAAAvF,GAAAitC,GAAAlpD,EAAA,MACAyN,GAAA+T,EAAA,GAAAxF,GAAAktC,GAAAlpD,EAAA,MACAA,EAAA,MAGA,QAAA6sD,GAAA1kD,EAAAC,GACA,MAAAwkD,GAAAzkD,EAAAuJ,EAAAtJ,EAAAsJ,GAGA,QAAAk7C,GAAAzkD,EAAAC,GACA,GAAA8rC,GAAAyY,EAAAxkD,EAAA,GACA2kD,EAAAH,EAAAvkD,EAAA,EACA,OAAA8rC,KAAA4Y,EAAA5Y,EAAA4Y,EACA,IAAA5Y,EAAA9rC,EAAA,GAAAD,EAAA,GACA,IAAA+rC,EAAA/rC,EAAA,GAAAC,EAAA,GACA,IAAA8rC,EAAA/rC,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAA08C,GAmBA,QAAA5iC,GAAAvQ,EAAAC,GACA46C,EAAA76C,EAAAC,IAAAo7C,EAAA9qC,MAAAvQ,EAAAC,GAGA,QAAAq7C,KAGA,OAFAC,GAAA,EAEAvvD,EAAA,EAAAkN,EAAAsiD,EAAA1oD,OAAyC9G,EAAAkN,IAAOlN,EAChD,OAAAyvD,GAAAT,EAAAU,EAAAF,EAAAxvD,GAAAie,EAAA,EAAAgI,EAAAypC,EAAA5oD,OAAAyd,EAAAmrC,EAAA,GAAArzC,EAAAkI,EAAA,GAAAnI,EAAAmI,EAAA,GAAkHtG,EAAAgI,IAAOhI,EACzHwxC,EAAApzC,EAAA2yC,EAAA5yC,EAAAmI,EAAAmrC,EAAAzxC,GAAA5B,EAAAkI,EAAA,GAAAnI,EAAAmI,EAAA,GACAyqC,GAAAxwC,EAAyBpC,EAAAoC,IAAAnC,EAAAozC,IAAAjxC,EAAAwwC,IAAA5yC,EAAA4yC,IAAA3wC,EAAAoxC,MAAAF,EACTnzC,GAAAoC,IAAAnC,EAAAozC,IAAAjxC,EAAAwwC,IAAA5yC,EAAA4yC,IAAA3wC,EAAAoxC,MAAAF,CAIhB,OAAAA,GAIA,QAAA3H,KACAyH,EAAAM,EAAAC,KAAAJ,KAAAK,GAAA,EAGA,QAAAhI,KACA,GAAAiI,GAAAR,IACAS,EAAAF,GAAAC,EACAjB,GAAAe,EAAA9d,GAAA8d,IAAA9oD,QACAipD,GAAAlB,KACA1H,EAAAS,eACAmI,IACA5I,EAAAM,YACAhmB,EAAA,YAAA0lB,GACAA,EAAAO,WAEAmH,GACAmB,GAAAJ,EAAAT,EAAAW,EAAAruB,EAAA0lB,GAEAA,EAAAU,cAEAwH,EAAAlI,EAAAyI,EAAAJ,EAAAE,EAAA,KAGA,QAAAjI,KACAwI,EAAA1rC,MAAA4lC,EACAqF,KAAA//C,KAAAigD,MACA1lD,GAAA,EACAkmD,GAAA,EACAC,EAAAC,EAAA/wC,IAMA,QAAAqoC,KACAkI,IACAzF,EAAAkG,EAAAC,GACAC,GAAAL,GAAAP,EAAAa,SACAZ,EAAAngD,KAAAkgD,EAAAc,WAEAR,EAAA1rC,QACA2rC,GAAAb,EAAA3H,UAGA,QAAAyC,GAAAn2C,EAAAC,GACA,GAAAgU,GAAA4mC,EAAA76C,EAAAC,EAEA,IADAu7C,GAAAE,EAAAjgD,MAAAuE,EAAAC,IACAjK,EACAqmD,EAAAr8C,EAAAs8C,EAAAr8C,EAAAs8C,EAAAtoC,EACAje,GAAA,EACAie,IACAonC,EAAA5H,YACA4H,EAAA9qC,MAAAvQ,EAAAC,QAGA,IAAAgU,GAAAioC,EAAAb,EAAA9qC,MAAAvQ,EAAAC,OACA,CACA,GAAAxJ,IAAA0lD,EAAA3nD,KAAA+G,IAAAmhD,GAAAloD,KAAAuD,IAAA4kD,GAAAR,IAAAC,EAAA5nD,KAAA+G,IAAAmhD,GAAAloD,KAAAuD,IAAA4kD,GAAAP,KACA1lD,GAAAsJ,EAAAxL,KAAA+G,IAAAmhD,GAAAloD,KAAAuD,IAAA4kD,GAAA38C,IAAAC,EAAAzL,KAAA+G,IAAAmhD,GAAAloD,KAAAuD,IAAA4kD,GAAA18C,IACA28C,IAAAnmD,EAAAC,EAAA2T,EAAAC,EAAAC,EAAAC,IACA0xC,IACAb,EAAA5H,YACA4H,EAAA9qC,MAAA9Z,EAAA,GAAAA,EAAA,KAEA4kD,EAAA9qC,MAAA7Z,EAAA,GAAAA,EAAA,IACAud,GAAAonC,EAAA3H,UACAmI,GAAA,GACW5nC,IACXonC,EAAA5H,YACA4H,EAAA9qC,MAAAvQ,EAAAC,GACA47C,GAAA,GAIAM,EAAAn8C,EAAAo8C,EAAAn8C,EAAAi8C,EAAAjoC,EA/GA,GAEA2nC,GACAJ,EACAE,EACAW,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAlmD,EACA6lD,EARAR,EAAAlI,EACAwI,EAAAkB,KASAZ,GACA1rC,QACAkjC,YACAC,UACAE,eACAC,aAmGA,OAAAoI,IAqCA,QAAAa,MACAC,GAAAxsC,MAAAysC,GACAD,GAAArJ,QAAAuJ,GAGA,QAAAA,MACAF,GAAAxsC,MAAAwsC,GAAArJ,QAAAV,GAGA,QAAAgK,IAAA3I,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACA2I,GAAA7I,EAAA8I,GAAApK,GAAAuB,GAAA8I,GAAA1I,GAAAJ,GACAyI,GAAAxsC,MAAA8sC,GAGA,QAAAA,IAAAhJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAmC,EAAA16C,GAAAs4C,EAAA6I,IACAI,EAAA5I,GAAA+B,GACA8G,EAAAxK,GAAA0D,GACAz2C,EAAAg1C,EAAAuI,EACAt9C,EAAAm9C,GAAAnI,EAAAkI,GAAAnI,EAAAsI,EACA5mC,EAAAymC,GAAAlI,EAAAmI,GAAApI,EAAAsI,CACAE,IAAA7nD,IAAAyN,GAAAuyC,GAAA31C,IAAAC,KAAAyW,IACAwmC,GAAA7I,EAAA8I,GAAAlI,EAAAmI,GAAApI,EAkBA,QAAAyI,IAAAnzC,EAAAE,EAAAsE,GACA,GAAA7O,GAAA2f,GAAAtV,EAAAE,EAAAgtC,GAAA1oC,GAAA2N,OAAAjS,EACA,iBAAAxK,GAAsB,MAAAC,GAAAkG,IAAA,SAAAlG,GAA2B,OAAAD,EAAAC,MAGjD,QAAAy9C,IAAArzC,EAAAE,EAAAsE,GACA,GAAA7O,GAAA4f,GAAAvV,EAAAE,EAAAitC,GAAA3oC,GAAA4N,OAAAlS,EACA,iBAAAtK,GAAsB,MAAAD,GAAAmG,IAAA,SAAAnG,GAA2B,OAAAA,EAAAC,MA8JjD,QAAA09C,MACAC,GAAArtC,MAAAstC,GAGA,QAAAA,IAAA79C,EAAAC,GACA29C,GAAArtC,MAAAutC,GACAnvC,GAAAovC,GAAA/9C,EAAA4O,GAAAovC,GAAA/9C,EAGA,QAAA69C,IAAA99C,EAAAC,GACAg+C,GAAAtoD,IAAAqoD,GAAAh+C,EAAA+9C,GAAA99C,GACA89C,GAAA/9C,EAAAg+C,GAAA/9C,EAGA,QAAAi+C,MACAJ,GAAAnvC,GAAAC,IAqBA,QAAAuvC,IAAAn+C,EAAAC,GACAD,EAAAo+C,QAAAp+C,GACAA,EAAAuK,QAAAvK,GACAC,EAAAo+C,QAAAp+C,GACAA,EAAAuK,QAAAvK,GA4CA,QAAAq+C,IAAAt+C,EAAAC,GACAs+C,IAAAv+C,EACAw+C,IAAAv+C,IACAw+C,GAGA,QAAAC,MACAC,GAAApuC,MAAAquC,GAGA,QAAAA,IAAA5+C,EAAAC,GACA0+C,GAAApuC,MAAAsuC,GACAP,GAAAQ,GAAA9+C,EAAA++C,GAAA9+C,GAGA,QAAA4+C,IAAA7+C,EAAAC,GACA,GAAA4O,GAAA7O,EAAA8+C,GAAAhwC,EAAA7O,EAAA8+C,GAAAroC,EAAAi/B,GAAA9mC,IAAAC,IACAkwC,KAAAtoC,GAAAooC,GAAA9+C,GAAA,EACAi/C,IAAAvoC,GAAAqoC,GAAA9+C,GAAA,EACAi/C,IAAAxoC,EACA4nC,GAAAQ,GAAA9+C,EAAA++C,GAAA9+C,GAGA,QAAAk/C,MACAR,GAAApuC,MAAA+tC,GAGA,QAAAc,MACAT,GAAApuC,MAAA8uC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAr/C,EAAAC,GACA0+C,GAAApuC,MAAAgvC,GACAjB,GAAAkB,GAAAV,GAAA9+C,EAAAy/C,GAAAV,GAAA9+C,GAGA,QAAAs/C,IAAAv/C,EAAAC,GACA,GAAA4O,GAAA7O,EAAA8+C,GACAhwC,EAAA7O,EAAA8+C,GACAroC,EAAAi/B,GAAA9mC,IAAAC,IAEAkwC,KAAAtoC,GAAAooC,GAAA9+C,GAAA,EACAi/C,IAAAvoC,GAAAqoC,GAAA9+C,GAAA,EACAi/C,IAAAxoC,EAEAA,EAAAqoC,GAAA/+C,EAAA8+C,GAAA7+C,EACAy/C,IAAAhpC,GAAAooC,GAAA9+C,GACA2/C,IAAAjpC,GAAAqoC,GAAA9+C,GACA2/C,IAAA,EAAAlpC,EACA4nC,GAAAQ,GAAA9+C,EAAA++C,GAAA9+C,GAGA,QAAA4/C,IAAAjwC,GACAlnB,KAAAmnB,SAAAD,EA0CA,QAAAkwC,MACAp3D,KAAAq3D,WA+CA,QAAAC,IAAA1vC,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA6OA,QAAA2vC,IAAAC,GACA,MAAAA,GAAAptD,OAAA,EAKA,QAAAqoD,IAAA1kD,EAAAC,GACA,QAAAD,IAAAuJ,GAAA,KAAAvJ,EAAA,GAAAo8C,GAAA2E,GAAA3E,GAAAp8C,EAAA,MACAC,IAAAsJ,GAAA,KAAAtJ,EAAA,GAAAm8C,GAAA2E,GAAA3E,GAAAn8C,EAAA,IAaA,QAAAypD,IAAAhN,GACA,GAGA0I,GAHArH,EAAAnpC,IACA4qC,EAAA5qC,IACA+0C,EAAA/0C,GAGA,QACAooC,UAAA,WACAN,EAAAM,YACAoI,EAAA,GAEAtrC,MAAA,SAAAylC,EAAAE,GACA,GAAAmK,GAAArK,EAAA,EAAArD,OACA8D,EAAA16C,GAAAi6C,EAAAxB,EACAz4C,IAAA06C,EAAA9D,IAAA6E,IACArE,EAAA5iC,MAAAikC,EAAAyB,KAAAC,GAAA,IAAArD,QACAM,EAAA5iC,MAAA6vC,EAAAnK,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAA5iC,MAAA8vC,EAAApK,GACA9C,EAAA5iC,MAAAylC,EAAAC,GACA4F,EAAA,GACOuE,IAAAC,GAAA5J,GAAA9D,KACP52C,GAAAy4C,EAAA4L,GAAA5I,KAAAhD,GAAA4L,EAAA5I,IACAz7C,GAAAi6C,EAAAqK,GAAA7I,KAAAxB,GAAAqK,EAAA7I,IACAvB,EAAAqK,GAAA9L,EAAAyB,EAAAD,EAAAE,GACA/C,EAAA5iC,MAAA6vC,EAAAnK,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAA5iC,MAAA8vC,EAAApK,GACA4F,EAAA,GAEA1I,EAAA5iC,MAAAikC,EAAAwB,EAAAC,EAAAC,GACAkK,EAAAC,GAEA3M,QAAA,WACAP,EAAAO,UACAc,EAAAyB,EAAA5qC,KAEAwwC,MAAA,WACA,SAAAA,IAKA,QAAAyE,IAAA9L,EAAAyB,EAAAD,EAAAE,GACA,GAAAzB,GACA8L,EACAC,EAAAzN,GAAAyB,EAAAwB,EACA,OAAAj6C,IAAAykD,GAAAhJ,GACAiJ,IAAA1N,GAAAkD,IAAAsK,EAAA7L,GAAAwB,IAAAnD,GAAAiD,GACAjD,GAAAmD,IAAAzB,EAAAC,GAAAuB,IAAAlD,GAAAyB,KACAC,EAAA8L,EAAAC,KACAvK,EAAAC,GAAA,EAGA,QAAAwK,IAAA5F,EAAAC,EAAAzsD,EAAA6kD,GACA,GAAAmB,EACA,UAAAwG,EACAxG,EAAAhmD,EAAAukD,GACAM,EAAA5iC,OAAAoiC,GAAA2B,GACAnB,EAAA5iC,MAAA,EAAA+jC,GACAnB,EAAA5iC,MAAAoiC,GAAA2B,GACAnB,EAAA5iC,MAAAoiC,GAAA,GACAQ,EAAA5iC,MAAAoiC,IAAA2B,GACAnB,EAAA5iC,MAAA,GAAA+jC,GACAnB,EAAA5iC,OAAAoiC,IAAA2B,GACAnB,EAAA5iC,OAAAoiC,GAAA,GACAQ,EAAA5iC,OAAAoiC,GAAA2B,OACG,IAAAv4C,GAAA++C,EAAA,GAAAC,EAAA,IAAAvD,GAAA,CACH,GAAAnD,GAAAyG,EAAA,GAAAC,EAAA,GAAApI,MACA2B,GAAAhmD,EAAA+lD,EAAA,EACAlB,EAAA5iC,OAAA8jC,EAAAC,GACAnB,EAAA5iC,MAAA,EAAA+jC,GACAnB,EAAA5iC,MAAA8jC,EAAAC,OAEAnB,GAAA5iC,MAAAwqC,EAAA,GAAAA,EAAA,IA0LA,QAAA4F,IAAAzuD,GACA,QAAA0uD,MACA,GAAA9wC,GAAA8wC,EAAA1uD,UAAAkiB,OAAAC,OAAAwsC,GAAA3uD,UACA,QAAAwlB,KAAAxlB,GAAA4d,EAAA4H,GAAAxlB,EAAAwlB,EACA,iBAAAy7B,GACA,GAAArsC,GAAA,GAAA85C,EAEA,OADA95C,GAAAqsC,SACArsC,GAIA,QAAA+5C,OAWA,QAAAC,IAAAC,EAAApU,EAAAzmC,GACA,GAAAid,GAAAwpB,EAAA,MAAAA,EAAA,MACA55B,EAAA45B,EAAA,MAAAA,EAAA,MACAqU,EAAAD,EAAAnG,YAAAmG,EAAAnG,YAEAmG,GACA/lC,MAAA,KACAR,WAAA,MAEA,MAAAwmC,GAAAD,EAAAnG,WAAA,MAEAqG,GAAA/6C,EAAA66C,EAAA5N,OAAA+N,IAEA,IAAAxqD,GAAAwqD,GAAAzE,SACA/kC,EAAAljB,KAAAuD,IAAAorB,GAAAzsB,EAAA,MAAAA,EAAA,OAAAqc,GAAArc,EAAA,MAAAA,EAAA,QACAsJ,GAAA2sC,EAAA,OAAAxpB,EAAAzL,GAAAhhB,EAAA,MAAAA,EAAA,UACAuJ,GAAA0sC,EAAA,OAAA55B,EAAA2E,GAAAhhB,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAAsqD,GAAAD,EAAAnG,WAAAoG,GAEAD,EACA/lC,MAAA,IAAAtD,GACA8C,WAAAxa,EAAAC,IAGA,QAAAkhD,IAAAJ,GACA,gBAAA73C,EAAAhD,GACA,MAAA46C,IAAAC,IAAA,KAAA73C,GAAAhD,IAIA,QAAAk7C,IAAAL,GACA,gBAAApU,EAAAzmC,GACA,MAAA46C,IAAAC,EAAApU,EAAAzmC,IAWA,QAAAm7C,IAAAN,GACA,MAAAJ,KACApwC,MAAA,SAAAvQ,EAAAC,GACAD,EAAA+gD,EAAA/gD,EAAAC,GACAvX,KAAAyqD,OAAA5iC,MAAAvQ,EAAA,GAAAA,EAAA,OAKA,QAAAshD,IAAAP,EAAAQ,GAEA,QAAAC,GAAAn3C,EAAAC,EAAAkqC,EAAAiH,EAAApzC,EAAAo5C,EAAAl3C,EAAAC,EAAAwrC,EAAAgF,EAAA5yC,EAAAs5C,EAAAhiB,EAAAyT,GACA,GAAAtkC,GAAAtE,EAAAF,EACAyE,EAAAtE,EAAAF,EACAyE,EAAAF,IAAAC,GACA,IAAAC,EAAA,EAAAwyC,GAAA7hB,IAAA,CACA,GAAAjpC,GAAAglD,EAAAT,EACAtkD,EAAA2R,EAAAD,EACAzR,EAAA8qD,EAAAC,EACAzvC,EAAA0jC,GAAAl/C,IAAAC,IAAAC,KACAgrD,EAAA/O,GAAAj8C,GAAAsb,GACAykC,EAAA36C,MAAApF,GAAA,GAAA6gD,IAAAz7C,GAAAy4C,EAAAwB,GAAAwB,IAAAhD,EAAAwB,GAAA,EAAA5yC,GAAA1M,EAAAD,GACAqZ,EAAAixC,EAAArK,EAAAiL,GACAn0C,EAAAsC,EAAA,GACArC,EAAAqC,EAAA,GACA8xC,EAAAp0C,EAAAnD,EACAw3C,EAAAp0C,EAAAnD,EACAw3C,EAAAhzC,EAAA8yC,EAAA/yC,EAAAgzC,GACAC,IAAA/yC,EAAAwyC,GACAxlD,IAAA8S,EAAA+yC,EAAA9yC,EAAA+yC,GAAA9yC,EAAA,QACA0sC,EAAAT,EAAA3yC,EAAAD,EAAAq5C,EAAAC,EAAAK,MACAP,EAAAn3C,EAAAC,EAAAkqC,EAAAiH,EAAApzC,EAAAo5C,EAAAj0C,EAAAC,EAAAipC,EAAAjgD,GAAAwb,EAAAvb,GAAAub,EAAAtb,EAAA+oC,EAAAyT,GACAA,EAAA5iC,MAAA/C,EAAAC,GACA+zC,EAAAh0C,EAAAC,EAAAipC,EAAAjgD,EAAAC,EAAAC,EAAA4T,EAAAC,EAAAwrC,EAAAgF,EAAA5yC,EAAAs5C,EAAAhiB,EAAAyT,KAIA,gBAAAA,GAYA,QAAA5iC,GAAAvQ,EAAAC,GACAD,EAAA+gD,EAAA/gD,EAAAC,GACAkzC,EAAA5iC,MAAAvQ,EAAA,GAAAA,EAAA,IAGA,QAAAyzC,KACAppC,EAAAgB,IACA22C,EAAAzxC,MAAA4lC,EACAhD,EAAAM,YAGA,QAAA0C,GAAA9B,EAAAC,GACA,GAAA39C,GAAAy+C,IAAAf,EAAAC,IAAAxkC,EAAAixC,EAAA1M,EAAAC,EACAkN,GAAAn3C,EAAAC,EAAAkqC,EAAAiH,EAAApzC,EAAAo5C,EAAAp3C,EAAAyF,EAAA,GAAAxF,EAAAwF,EAAA,GAAA0kC,EAAAH,EAAAoH,EAAA9kD,EAAA,GAAA0R,EAAA1R,EAAA,GAAA8qD,EAAA9qD,EAAA,GAAAsrD,GAAA9O,GACAA,EAAA5iC,MAAAlG,EAAAC,GAGA,QAAAopC,KACAsO,EAAAzxC,QACA4iC,EAAAO,UAGA,QAAAwO,KACAzO,IACAuO,EAAAzxC,MAAA4xC,EACAH,EAAAtO,QAAA0O,EAGA,QAAAD,GAAA9N,EAAAC,GACA6B,EAAAhC,EAAAE,EAAAC,GAAA3lC,EAAAtE,EAAAuE,EAAAtE,EAAA+3C,EAAA5G,EAAA6G,EAAAj6C,EAAAk6C,EAAAd,EACAO,EAAAzxC,MAAA4lC,EAGA,QAAAiM,KACAZ,EAAAn3C,EAAAC,EAAAkqC,EAAAiH,EAAApzC,EAAAo5C,EAAA9yC,EAAAC,EAAAulC,EAAAkO,EAAAC,EAAAC,EAAAN,GAAA9O,GACA6O,EAAAtO,UACAA,IA/CA,GAAAS,GAAAxlC,EAAAC,EAAAyzC,EAAAC,EAAAC,EACA/N,EAAAnqC,EAAAC,EAAAmxC,EAAApzC,EAAAo5C,EAEAO,GACAzxC,QACAkjC,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBoO,EAAAvO,UAAAyO,GACvDrO,WAAA,WAA8BV,EAAAU,aAAqBmO,EAAAvO,aA0CnD,OAAAuO,IAUA,QAAAQ,IAAAzB,GACA,MAAA0B,IAAA,WAAuC,MAAA1B,OAGvC,QAAA0B,IAAAC,GAYA,QAAAF,GAAAjyC,GAEA,MADAA,GAAAoyC,EAAApyC,EAAA,GAAAgkC,GAAAhkC,EAAA,GAAAgkC,KACAhkC,EAAA,GAAAmH,EAAA7I,EAAAC,EAAAyB,EAAA,GAAAmH,GAGA,QAAAuW,GAAA1d,GAEA,MADAA,GAAAoyC,EAAA10B,QAAA1d,EAAA,GAAA1B,GAAA6I,GAAA5I,EAAAyB,EAAA,IAAAmH,GACAnH,MAAA,GAAAsmC,GAAAtmC,EAAA,GAAAsmC,IAGA,QAAA+L,GAAA5iD,EAAAC,GACA,MAAAD,GAAA+gD,EAAA/gD,EAAAC,IAAAD,EAAA,GAAA0X,EAAA7I,EAAAC,EAAA9O,EAAA,GAAA0X,GAuCA,QAAAmrC,KACAF,EAAAhJ,GAAA7+B,EAAAy+B,GAAAC,EAAAC,EAAAC,GAAAqH,EACA,IAAApkB,GAAAokB,EAAA1M,EAAAC,EAGA,OAFAzlC,GAAA7O,EAAA28B,EAAA,GAAAjlB,EACA5I,EAAA7O,EAAA08B,EAAA,GAAAjlB,EACA26B,IAGA,QAAAA,KAEA,MADAyQ,GAAAC,EAAA,KACAP,EAvEA,GAAAzB,GAGAlyC,EAAAC,EACAgM,EAAA6nC,EAEAr4C,EAAAC,EAAAC,EAEAs4C,EACAC,EARArrC,EAAA,IACA1X,EAAA,IAAAC,EAAA,IACAo0C,EAAA,EAAAC,EAAA,EACAkF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAsJ,EAAA,KAAAC,EAAAC,GACA74C,EAAA,KAAA84C,EAAAC,GACA7B,EAAA,GAAA8B,EAAAC,GAAAV,EAAArB,EAmEA,OAjDAiB,GAAArP,OAAA,SAAAA,GACA,MAAA2P,IAAAC,IAAA5P,EAAA2P,IAAAS,GAAAN,EAAAnoC,EAAAuoC,EAAAF,EAAAJ,EAAA5P,OAGAqP,EAAAgB,UAAA,SAAAv4D,GACA,MAAA4V,WAAA/N,QAAAmwD,GAAAh4D,EAAAw4D,GAAAT,EAAA/3D,EAAAspD,GAAA,EAAAA,KAAAyO,EAAA,KAAAE,IAAA7Q,KAAA2Q,EAAAnM,IAGA2L,EAAA5H,WAAA,SAAA3vD,GACA,MAAA4V,WAAA/N,QAAAqwD,EAAA,MAAAl4D,GAAAof,EAAAC,EAAAC,EAAAC,EAAA,KAAA44C,IAAAxI,GAAAvwC,GAAApf,EAAA,MAAAqf,GAAArf,EAAA,MAAAsf,GAAAtf,EAAA,MAAAuf,GAAAvf,EAAA,OAAAonD,KAAA,MAAAhoC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGAg4C,EAAAxnC,MAAA,SAAA/vB,GACA,MAAA4V,WAAA/N,QAAA4kB,GAAAzsB,EAAA43D,KAAAnrC,GAGA8qC,EAAAhoC,UAAA,SAAAvvB,GACA,MAAA4V,WAAA/N,QAAAkN,GAAA/U,EAAA,GAAAgV,GAAAhV,EAAA,GAAA43D,MAAA7iD,EAAAC,IAGAuiD,EAAA7lB,OAAA,SAAA1xC,GACA,MAAA4V,WAAA/N,QAAAuhD,EAAAppD,EAAA,OAAAspD,GAAAD,EAAArpD,EAAA,OAAAspD,GAAAsO,MAAAxO,EAAAwC,GAAAvC,EAAAuC,KAGA2L,EAAA1nC,OAAA,SAAA7vB,GACA,MAAA4V,WAAA/N,QAAA0mD,EAAAvuD,EAAA,OAAAspD,GAAAkF,EAAAxuD,EAAA,OAAAspD,GAAAmF,EAAAzuD,EAAA6H,OAAA,EAAA7H,EAAA,OAAAspD,GAAA,EAAAsO,MAAArJ,EAAA3C,GAAA4C,EAAA5C,GAAA6C,EAAA7C,KAGA2L,EAAAlhC,UAAA,SAAAr2B,GACA,MAAA4V,WAAA/N,QAAAuwD,EAAAC,GAAAV,EAAArB,EAAAt2D,KAAAonD,KAAAsD,GAAA4L,IAGAiB,EAAApB,aAAAoB,GAEAA,EAAArB,WAAAqB,GAeA,WAGA,MAFAzB,GAAA2B,EAAA93D,MAAAlC,KAAAmY,WACA2hD,EAAAv0B,OAAA8yB,EAAA9yB,UACA40B,KAIA,QAAAa,IAAAhB,GACA,GAAAzM,GAAA,EACAC,EAAAvD,GAAA,EACA1gC,EAAAwwC,GAAAC,GACA5yC,EAAAmC,EAAAgkC,EAAAC,EAMA,OAJApmC,GAAA6zC,UAAA,SAAA14D,GACA,MAAA4V,WAAA/N,OAAAmf,EAAAgkC,EAAAhrD,EAAA,GAAAspD,GAAA2B,EAAAjrD,EAAA,GAAAspD,KAAA0B,EAAAY,GAAAX,EAAAW,KAGA/mC,EAGA,QAAA8zC,IAAAt5C,EAAAE,GAMA,QAAAu2C,GAAA/gD,EAAAC,GACA,GAAA6C,GAAA6yC,GAAAh/C,EAAA,EAAAuC,EAAA65C,GAAA9yC,IAAA/G,CACA,QAAA4J,EAAAiwC,GAAA/yC,GAAA9G,GAAAm0B,EAAAvqB,EAAA4xC,GAAA10C,IAPA,GAAA6jD,GAAA9Q,GAAAzoC,GACApR,GAAA2qD,EAAA9Q,GAAAvoC,IAAA,EACA7T,EAAA,EAAAktD,GAAA,EAAA3qD,EAAA2qD,GACAx2B,EAAAsoB,GAAAh/C,GAAAuC,CAYA,OALA6nD,GAAA9yB,OAAA,SAAAjuB,EAAAC,GACA,GAAA6jD,GAAAz2B,EAAAptB,CACA,QAAAmD,GAAApD,EAAA8jD,GAAA5qD,EAAA05C,IAAAj8C,GAAAqJ,IAAA8jD,KAAA5qD,MAAA,EAAAA,MAGA6nD,EAoBA,QAAAgD,IAAAC,GACA,GAAA9qD,GAAA8qD,EAAAlxD,MACA,QACAyd,MAAA,SAAAvQ,EAAAC,GAAuC,IAAZ,GAAAjU,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAAukB,MAAAvQ,EAAAC,IACvCgkD,OAAA,WAAoC,IAAZ,GAAAj4D,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAAi4D,UACpCxQ,UAAA,WAAuC,IAAZ,GAAAznD,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAAynD,aACvCC,QAAA,WAAqC,IAAZ,GAAA1nD,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAA0nD,WACrCE,aAAA,WAA0C,IAAZ,GAAA5nD,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAA4nD,gBAC1CC,WAAA,WAAwC,IAAZ,GAAA7nD,QAAYA,EAAAkN,GAAA8qD,EAAAh4D,GAAA6nD,eAgFxC,QAAAqQ,IAAAlpC,GACA,gBAAAhb,EAAAC,GACA,GAAAwP,GAAAilC,GAAA10C,GACA0P,EAAAglC,GAAAz0C,GACAyX,EAAAsD,EAAAvL,EAAAC,EACA,QACAgI,EAAAhI,EAAAqjC,GAAA/yC,GACA0X,EAAAq7B,GAAA9yC,KAKA,QAAAkkD,IAAA9zC,GACA,gBAAArQ,EAAAC,GACA,GAAAyW,GAAAi/B,GAAA31C,IAAAC,KACAtJ,EAAA0Z,EAAAqG,GACA0tC,EAAArR,GAAAp8C,GACA0tD,EAAA3P,GAAA/9C,EACA,QACAyM,GAAApD,EAAAokD,EAAA1tC,EAAA2tC,GACAzR,GAAAl8B,GAAAzW,EAAAmkD,EAAA1tC,KAiCA,QAAA4tC,IAAAjQ,EAAAC,GACA,OAAAD,EAAAkQ,GAAAC,IAAA3R,GAAAyB,GAAA,KAYA,QAAAmQ,IAAA1D,GACA,GAIA2D,GAJAzyC,EAAAuwC,GAAAzB,GACA/lC,EAAA/I,EAAA+I,MACAR,EAAAvI,EAAAuI,UACAogC,EAAA3oC,EAAA2oC,UAsBA,OAnBA3oC,GAAA+I,MAAA,SAAA/vB,GACA,MAAA4V,WAAA/N,QAAAkoB,EAAA/vB,GAAAy5D,GAAAzyC,EAAA2oC,WAAA,MAAA3oC,GAAA+I,KAGA/I,EAAAuI,UAAA,SAAAvvB,GACA,MAAA4V,WAAA/N,QAAA0nB,EAAAvvB,GAAAy5D,GAAAzyC,EAAA2oC,WAAA,MAAA3oC,GAAAuI,KAGAvI,EAAA2oC,WAAA,SAAA3vD,GACA,IAAA4V,UAAA/N,OAAA,MAAA4xD,GAAA,KAAA9J,GACA,IAAA8J,EAAA,MAAAz5D,EAAA,CACA,GAAAysB,GAAAi7B,GAAA33B,IACAlU,EAAA0T,GACAvvB,KAAA6b,EAAA,GAAA4Q,EAAA5Q,EAAA,GAAA4Q,IAAA5Q,EAAA,GAAA4Q,EAAA5Q,EAAA,GAAA4Q,IAGA,MADAkjC,GAAA3vD,GACAgnB,GAGAA,EAAA2oC,WAAA,MAGA,QAAA+J,IAAA1kD,GACA,MAAAukD,KAAA3R,GAAA5yC,GAAA,GAGA,QAAA2kD,IAAAt6C,EAAAE,GAOA,QAAAu2C,GAAA/gD,EAAAC,GACAiF,EAAA,EAAgBjF,GAAA4yC,GAAA2E,KAAAv3C,GAAA4yC,GAAA2E,IACNv3C,EAAA4yC,GAAA2E,KAAAv3C,EAAA4yC,GAAA2E,GACV,IAAA10C,GAAAoC,EAAA2/C,GAAAF,GAAA1kD,GAAA/G,EACA,QAAA4J,EAAAiwC,GAAA75C,EAAA8G,GAAAkF,EAAApC,EAAA4xC,GAAAx7C,EAAA8G,IAVA,GAAAkP,GAAAwlC,GAAApqC,GACApR,EAAAoR,IAAAE,EAAAuoC,GAAAzoC,GAAAi6C,GAAAr1C,EAAAwlC,GAAAlqC,IAAA+5C,GAAAI,GAAAn6C,GAAAm6C,GAAAr6C,IACApF,EAAAgK,EAAA21C,GAAAF,GAAAr6C,GAAApR,IAEA,OAAAA,IASA6nD,EAAA9yB,OAAA,SAAAjuB,EAAAC,GACA,GAAAooC,GAAAnjC,EAAAjF,EAAA6C,EAAAgiD,GAAA5rD,GAAAy8C,GAAA31C,IAAAqoC,IACA,QAAAjlC,GAAApD,EAAAqoC,GAAAnvC,EAAA,EAAAunD,GAAAoE,GAAA3/C,EAAApC,EAAA,EAAA5J,IAAA25C,KAGAkO,GAdAuD,GAuBA,QAAAS,IAAA1Q,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAA0Q,IAAA16C,EAAAE,GAOA,QAAAu2C,GAAA/gD,EAAAC,GACA,GAAAglD,GAAAxvC,EAAAxV,EAAAilD,EAAAhsD,EAAA8G,CACA,QAAAilD,EAAAlS,GAAAmS,GAAAzvC,EAAAwvC,EAAAvQ,GAAAwQ,IARA,GAAAh2C,GAAAwlC,GAAApqC,GACApR,EAAAoR,IAAAE,EAAAuoC,GAAAzoC,IAAA4E,EAAAwlC,GAAAlqC,OAAAF,GACAmL,EAAAvG,EAAAhW,EAAAoR,CAEA,OAAAvO,IAAA7C,GAAAs+C,GAAAuN,IAOAhE,EAAA9yB,OAAA,SAAAjuB,EAAAC,GACA,GAAAglD,GAAAxvC,EAAAxV,CACA,QAAAmD,GAAApD,EAAAilD,GAAA/rD,EAAAuc,EAAAqvC,GAAA5rD,GAAAy8C,GAAA31C,IAAAilD,OAGAlE,GASA,QAAAoE,IAAAnlD,EAAAC,GACA,GAAAyP,GAAAglC,GAAAz0C,GAAAyX,EAAAg9B,GAAA10C,GAAA0P,CACA,QAAAA,EAAAqjC,GAAA/yC,GAAA0X,EAAAq7B,GAAA9yC,GAAAyX,GAWA,QAAA0tC,IAAAplD,EAAAC,GACA,OAAAy0C,GAAAz0C,GAAA8yC,GAAA/yC,GAAA+yC,GAAA9yC,IAWA,QAAAolD,IAAArlD,EAAAC,GACA,GAAAyP,GAAAglC,GAAAz0C,GAAAyX,EAAA,EAAAg9B,GAAA10C,GAAA0P,CACA,QAAAA,EAAAqjC,GAAA/yC,GAAA0X,EAAAq7B,GAAA9yC,GAAAyX,GAaA,QAAA4tC,IAAAjR,EAAAC,GACA,OAAAiQ,GAAAC,IAAA3R,GAAAyB,GAAA,KAAAD,GAt/eA,GAAAkR,IAAA,QAEAngD,GAAA,SAAA3O,EAAAC,GACA,MAAAD,GAAAC,KAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAA2U,KAGA0lB,GAAA,SAAA+gB,GAEA,MADA,KAAAA,EAAAh/C,SAAAg/C,EAAA7sC,EAAA6sC,KAEA59C,KAAA,SAAAuC,EAAAuJ,EAAAsO,EAAAk3C,GAGA,IAFA,MAAAl3C,MAAA,GACA,MAAAk3C,MAAA/uD,EAAA3D,QACAwb,EAAAk3C,GAAA,CACA,GAAAC,GAAAn3C,EAAAk3C,IAAA,CACA1T,GAAAr7C,EAAAgvD,GAAAzlD,GAAA,EAAAsO,EAAAm3C,EAAA,EACAD,EAAAC,EAEA,MAAAn3C,IAEA/N,MAAA,SAAA9J,EAAAuJ,EAAAsO,EAAAk3C,GAGA,IAFA,MAAAl3C,MAAA,GACA,MAAAk3C,MAAA/uD,EAAA3D,QACAwb,EAAAk3C,GAAA,CACA,GAAAC,GAAAn3C,EAAAk3C,IAAA,CACA1T,GAAAr7C,EAAAgvD,GAAAzlD,GAAA,EAAAwlD,EAAAC,EACAn3C,EAAAm3C,EAAA,EAEA,MAAAn3C,MAWAo3C,GAAA30B,GAAA3rB,IACAmoB,GAAAm4B,GAAAnlD,MACAolD,GAAAD,GAAAxxD,KAEA0xD,GAAA,SAAAnvD,EAAAC,GACA,MAAAA,GAAAD,KAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAA4U,KAGAw6C,GAAA,SAAA7lD,GACA,cAAAA,EAAAqL,KAAArL,GAGA8lD,GAAA,SAAA7c,EAAA/jC,GACA,GAEAzO,GACA0O,EAHAjM,EAAA+vC,EAAAn2C,OACAmf,EAAA,EAGAiC,EAAA,EACAloB,KACAie,EAAA,CAEA,UAAA/E,EACA,OAAAlZ,EAAAkN,GACAyQ,MAAAlT,EAAAovD,GAAA5c,EAAAj9C,OACAmZ,EAAA1O,EAAAwb,EACAA,GAAA9M,IAAA8E,EACAiK,GAAA/O,GAAA1O,EAAAwb,QAMA,QAAAjmB,EAAAkN,GACAyQ,MAAAlT,EAAAovD,GAAA3gD,EAAA+jC,EAAAj9C,KAAAi9C,OACA9jC,EAAA1O,EAAAwb,EACAA,GAAA9M,IAAA8E,EACAiK,GAAA/O,GAAA1O,EAAAwb,GAKA,IAAAhI,EAAA,QAAAiK,IAAAjK,EAAA,IAGA87C,GAAA,SAAA9c,EAAA/jC,GACA,GAAA+O,GAAA6xC,GAAA7c,EAAA/jC,EACA,OAAA+O,GAAAzf,KAAA+P,KAAA0P,MAGA04B,GAAA,SAAA1D,EAAA/jC,GACA,GAEAzO,GACAC,EACAC,EAJA3K,KACAkN,EAAA+vC,EAAAn2C,MAKA,UAAAoS,EAAA,CACA,OAAAlZ,EAAAkN,GAAA,UAAAxC,EAAAuyC,EAAAj9C,KAAA0K,KAAA,CAA2DD,EAAAE,EAAAD,CAAW,OACtE,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAuyC,EAAAj9C,MACAyK,EAAAC,IAAAD,EAAAC,GACAC,EAAAD,IAAAC,EAAAD,QAIA,CACA,OAAA1K,EAAAkN,GAAA,UAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,KAAAvyC,KAAA,CAAwED,EAAAE,EAAAD,CAAW,OACnF,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,MACAxyC,EAAAC,IAAAD,EAAAC,GACAC,EAAAD,IAAAC,EAAAD,IAIA,OAAAD,EAAAE,IAGAsyC,GAAAlkC,MAAA7S,UAEAkM,GAAA6qC,GAAA7qC,MACA+H,GAAA8iC,GAAA9iC,IAEA6/C,GAAA,SAAAhmD,GACA,kBACA,MAAAA,KAIAimD,GAAA,SAAAjmD,GACA,MAAAA,IAGA4f,GAAA,SAAAta,EAAAC,EAAAjR,GACAgR,KAAAC,KAAAjR,GAAA4E,EAAA2H,UAAA/N,QAAA,GAAAyS,EAAAD,IAAA,KAAApM,EAAA,KAAA5E,CAMA,KAJA,GAAAtI,MACAkN,EAAA,EAAA1E,KAAA+G,IAAA,EAAA/G,KAAAC,MAAA8Q,EAAAD,GAAAhR,IACAsrB,EAAA,GAAA7a,OAAA7L,KAEAlN,EAAAkN,GACA0mB,EAAA5zB,GAAAsZ,EAAAtZ,EAAAsI,CAGA,OAAAsrB,IAGA/Z,GAAArR,KAAA+P,KAAA,IACAuB,GAAAtR,KAAA+P,KAAA,IACAwB,GAAAvR,KAAA+P,KAAA,GAEA+pB,GAAA,SAAAhpB,EAAAC,EAAAC,GACA,GAAAlR,GAAA+Q,EAAAC,EAAAC,EAAAC,EACA,OAAAoa,IACAprB,KAAAC,KAAA6Q,EAAAhR,KACAE,KAAAyG,MAAAsK,EAAAjR,OAAA,EACAA,IAcA4xD,GAAA,SAAAz5B,GACA,MAAAj4B,MAAAC,KAAAD,KAAAvL,IAAAwjC,EAAA35B,QAAA0B,KAAA2xD,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAAv1D,GACA,GAAA7E,GAEAgU,EADA9G,EAAArI,EAAAiC,OAEA25B,EAAA,GAAA1nB,OAAA7L,EAEA,KAAAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EACtBygC,EAAAzgC,GAAA4U,EAAA/P,EAAA7E,KAAA6E,EAGA,IAAA+Z,GAAAmhB,EAAAU,GACApiB,EAAAO,EAAA,GACAL,EAAAK,EAAA,GACAy7C,EAAA52B,EAAAhD,EAAApiB,EAAAE,EAGAxF,OAAAuB,QAAA+/C,OAAA/3B,GAAAjkB,EAAAE,EAAA87C,GAIA,KADA,GAAAp0C,GAAAo0C,EAAAvzD,OACAuzD,EAAA,IAAAh8C,GAAAg8C,EAAAziB,UAAA3xB,CACA,MAAAo0C,EAAAp0C,EAAA,IAAA1H,GAAA87C,EAAA9rC,QAAAtI,CAEA,IACAq0C,GADAC,EAAA,GAAAxhD,OAAAkN,EAAA,EAIA,KAAAjmB,EAAA,EAAeA,GAAAimB,IAAQjmB,EACvBs6D,EAAAC,EAAAv6D,MACAs6D,EAAAj8C,GAAAre,EAAA,EAAAq6D,EAAAr6D,EAAA,GAAAqe,EACAi8C,EAAA/7C,GAAAve,EAAAimB,EAAAo0C,EAAAr6D,GAAAue,CAIA,KAAAve,EAAA,EAAeA,EAAAkN,IAAOlN,EACtBgU,EAAAysB,EAAAzgC,GACAqe,GAAArK,MAAAuK,GACAg8C,EAAAh5B,GAAA84B,EAAArmD,EAAA,EAAAiS,IAAAxW,KAAA5K,EAAA7E,GAIA,OAAAu6D,GA7CA,GAAA3lD,GAAAqlD,GACAl6B,EAAA4gB,GACAld,EAAAy2B,EA0DA,OAZAE,GAAAxlD,MAAA,SAAA3V,GACA,MAAA4V,WAAA/N,QAAA8N,EAAA,kBAAA3V,KAAA+6D,GAAA/6D,GAAAm7D,GAAAxlD,GAGAwlD,EAAAr6B,OAAA,SAAA9gC,GACA,MAAA4V,WAAA/N,QAAAi5B,EAAA,kBAAA9gC,KAAA+6D,IAAA/6D,EAAA,GAAAA,EAAA,KAAAm7D,GAAAr6B,GAGAq6B,EAAA52B,WAAA,SAAAvkC,GACA,MAAA4V,WAAA/N,QAAA28B,EAAA,kBAAAxkC,KAAA+6D,GAAAjhD,MAAAuB,QAAArb,GAAAmT,GAAAxJ,KAAA3J,MAAAm7D,GAAA32B,GAGA22B,GAGA32B,GAAA,SAAAwZ,EAAAn5B,EAAA5K,GAEA,GADA,MAAAA,MAAA2gD,IACA3sD,EAAA+vC,EAAAn2C,OAAA,CACA,IAAAgd,OAAA,GAAA5W,EAAA,SAAAgM,EAAA+jC,EAAA,KAAAA,EACA,IAAAn5B,GAAA,SAAA5K,EAAA+jC,EAAA/vC,EAAA,GAAAA,EAAA,EAAA+vC,EACA,IAAA/vC,GACA6Z,GAAA7Z,EAAA,GAAA4W,EACA9jB,EAAAwI,KAAAyG,MAAA8X,GACAtc,GAAAyO,EAAA+jC,EAAAj9C,KAAAi9C,GACAvyC,GAAAwO,EAAA+jC,EAAAj9C,EAAA,GAAAA,EAAA,EAAAi9C,EACA,OAAAxyC,IAAAC,EAAAD,IAAAsc,EAAA/mB,KAGAw6D,GAAA,SAAA/5B,EAAA10B,EAAAwD,GAEA,MADAkxB,GAAAtmB,GAAAvR,KAAA63B,EAAAo5B,IAAArmD,KAAA4F,IACA5Q,KAAAC,MAAA8G,EAAAxD,IAAA,GAAA03B,GAAAhD,EAAA,KAAAgD,GAAAhD,EAAA,MAAAj4B,KAAAgQ,IAAAioB,EAAA35B,UAAA,MAGA2zD,GAAA,SAAAh6B,EAAA10B,EAAAwD,GACA,MAAA/G,MAAAC,MAAA8G,EAAAxD,IAAA,IAAAguD,GAAAt5B,GAAAj4B,KAAAgQ,IAAAioB,EAAA35B,UAAA,MAGAyI,GAAA,SAAA0tC,EAAA/jC,GACA,GAEAzO,GACAC,EAHA1K,KACAkN,EAAA+vC,EAAAn2C,MAIA,UAAAoS,EAAA,CACA,OAAAlZ,EAAAkN,GAAA,UAAAxC,EAAAuyC,EAAAj9C,KAAA0K,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAuyC,EAAAj9C,KAAA0K,EAAAD,MAAAC,OAGA,CACA,OAAA1K,EAAAkN,GAAA,UAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,KAAAvyC,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,KAAAvyC,EAAAD,MAAAC,GAGA,MAAAD,IAGAiwD,GAAA,SAAAzd,EAAA/jC,GACA,GAEAzO,GAFAyd,EAAA,EACAhb,EAAA+vC,EAAAn2C,OAEA9G,KACAie,EAAA/Q,CAEA,UAAAgM,EACA,OAAAlZ,EAAAkN,GAAAyQ,MAAAlT,EAAAovD,GAAA5c,EAAAj9C,OAA6Die,EAA7DiK,GAAAzd,MAIA,QAAAzK,EAAAkN,GAAAyQ,MAAAlT,EAAAovD,GAAA3gD,EAAA+jC,EAAAj9C,KAAAi9C,OAA0Eh/B,EAA1EiK,GAAAzd,CAGA,IAAAwT,EAAA,MAAAiK,GAAAjK,GAGA08C,GAAA,SAAA1d,EAAA/jC,GACA,GAEAzO,GAFAmwD,KACA1tD,EAAA+vC,EAAAn2C,OAEA9G,IAEA,UAAAkZ,EACA,OAAAlZ,EAAAkN,GAAAyQ,MAAAlT,EAAAovD,GAAA5c,EAAAj9C,MAAA46D,EAAAnrD,KAAAhF,OAIA,QAAAzK,EAAAkN,GAAAyQ,MAAAlT,EAAAovD,GAAA3gD,EAAA+jC,EAAAj9C,KAAAi9C,MAAA2d,EAAAnrD,KAAAhF,EAGA,OAAAg5B,IAAAm3B,EAAApnD,KAAA4F,IAAA,KAGA04B,GAAA,SAAA+oB,GAQA,IAPA,GACA50C,GAGA60C,EACA7d,EALA/vC,EAAA2tD,EAAA/zD,OAEA9G,KACAie,EAAA,IAIAje,EAAAkN,GAAA+Q,GAAA48C,EAAA76D,GAAA8G,MAGA,KAFAg0D,EAAA,GAAA/hD,OAAAkF,KAEA/Q,GAAA,GAGA,IAFA+vC,EAAA4d,EAAA3tD,GACA+Y,EAAAg3B,EAAAn2C,SACAmf,GAAA,GACA60C,IAAA78C,GAAAg/B,EAAAh3B,EAIA,OAAA60C,IAGA/uD,GAAA,SAAAkxC,EAAA/jC,GACA,GAEAzO,GACAC,EAHA1K,KACAkN,EAAA+vC,EAAAn2C,MAIA,UAAAoS,EAAA,CACA,OAAAlZ,EAAAkN,GAAA,UAAAxC,EAAAuyC,EAAAj9C,KAAA0K,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAuyC,EAAAj9C,KAAAyK,EAAAC,IAAAD,EAAAC,OAGA,CACA,OAAA1K,EAAAkN,GAAA,UAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,KAAAvyC,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA1K,EAAAkN,GAAA,OAAAxC,EAAAwO,EAAA+jC,EAAAj9C,KAAAi9C,KAAAxyC,EAAAC,IAAAD,EAAAC,GAGA,MAAAD,IAGAswD,GAAA,SAAA9d,GAEA,IADA,GAAAj9C,GAAA,EAAAkN,EAAA+vC,EAAAn2C,OAAA,EAAAgd,EAAAm5B,EAAA,GAAA8d,EAAA,GAAAhiD,OAAA7L,EAAA,IAAAA,GACAlN,EAAAkN,GAAA6tD,EAAA/6D,IAAA8jB,IAAAm5B,IAAAj9C,GACA,OAAA+6D,IAGAC,GAAA,SAAA/d,EAAAztC,GAEA,IADA,GAAAxP,GAAAwP,EAAA1I,OAAAm0D,EAAA,GAAAliD,OAAA/Y,GACAA,KAAAi7D,EAAAj7D,GAAAi9C,EAAAztC,EAAAxP,GACA,OAAAi7D,IAGAC,GAAA,SAAAje,EAAA6I,GACA,GAAA54C,EAAA+vC,EAAAn2C,OAAA,CACA,GACAoG,GAEAiuD,EAHAn7D,EAAA,EAEAie,EAAA,EAEAm9C,EAAAne,EAAAh/B,EAIA,KAFA6nC,MAAA1sC,MAEApZ,EAAAkN,IAAA44C,EAAAqV,EAAAle,EAAAj9C,GAAAo7D,GAAA,OAAAtV,EAAAsV,UAAAD,EAAAl9C,EAAAje,EAEA,YAAA8lD,EAAAsV,KAAAn9C,EAAA,SAGAo9C,GAAA,SAAApe,EAAApE,EAAAN,GAKA,IAJA,GACAz9B,GACA9a,EAFAimB,GAAA,MAAAsyB,EAAA0E,EAAAn2C,OAAAyxC,IAAAM,EAAA,MAAAA,EAAA,GAAAA,GAIA5yB,GACAjmB,EAAAwI,KAAA8yD,SAAAr1C,IAAA,EACAnL,EAAAmiC,EAAAh3B,EAAA4yB,GACAoE,EAAAh3B,EAAA4yB,GAAAoE,EAAAj9C,EAAA64C,GACAoE,EAAAj9C,EAAA64C,GAAA/9B,CAGA,OAAAmiC,IAGAse,GAAA,SAAAte,EAAA/jC,GACA,GAEAzO,GAFAyd,EAAA,EACAhb,EAAA+vC,EAAAn2C,OAEA9G,IAEA,UAAAkZ,EACA,OAAAlZ,EAAAkN,IAAAzC,GAAAwyC,EAAAj9C,MAAAkoB,GAAAzd,OAIA,QAAAzK,EAAAkN,IAAAzC,GAAAyO,EAAA+jC,EAAAj9C,KAAAi9C,MAAA/0B,GAAAzd,EAGA,OAAAyd,IAGAszC,GAAA,SAAAvtC,GACA,KAAA/gB,EAAA+gB,EAAAnnB,QAAA,QACA,QAAA9G,MAAAimB,EAAAla,GAAAkiB,EAAAnnB,GAAA00D,EAAA,GAAAziD,OAAAkN,KAAqEjmB,EAAAimB,GACrE,OAAA/Y,GAAA+Q,KAAA/S,EAAAswD,EAAAx7D,GAAA,GAAA+Y,OAAA7L,KAA0D+Q,EAAA/Q,GAC1DhC,EAAA+S,GAAAgQ,EAAAhQ,GAAAje,EAGA,OAAAw7D,IAOAC,GAAA,WACA,MAAAD,IAAA3mD,YAGA6mD,GAAA,GAIA1hD,GAAA9T,UAAA+T,EAAA/T,WACAxH,YAAAsb,EACAimB,IAAA,SAAA7lB,GACA,MAAAshD,IAAAthD,IAAA1d,OAEAyO,IAAA,SAAAiP,GACA,MAAA1d,MAAAg/D,GAAAthD,IAEAC,IAAA,SAAAD,EAAAxF,GAEA,MADAlY,MAAAg/D,GAAAthD,GAAAxF,EACAlY,MAEAoR,OAAA,SAAAsM,GACA,GAAAmoC,GAAAmZ,GAAAthD,CACA,OAAAmoC,KAAA7lD,mBAAA6lD,IAEAoZ,MAAA,WACA,OAAApZ,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,UAAAh/D,MAAA6lD,IAEAqZ,KAAA,WACA,GAAAA,KACA,QAAArZ,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,IAAAE,EAAAnsD,KAAA8yC,EAAAnwC,MAAA,GACA,OAAAwpD,IAEAn7B,OAAA,WACA,GAAAA,KACA,QAAA8hB,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,IAAAj7B,EAAAhxB,KAAA/S,KAAA6lD,GACA,OAAA9hB,IAEAo7B,QAAA,WACA,GAAAA,KACA,QAAAtZ,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,IAAAG,EAAApsD,MAAyE2K,IAAAmoC,EAAAnwC,MAAA,GAAAwC,MAAAlY,KAAA6lD,IACzE,OAAAsZ,IAEA3+C,KAAA,WACA,GAAAA,GAAA,CACA,QAAAqlC,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,MAAAx+C,CACA,OAAAA,IAEA7R,MAAA,WACA,OAAAk3C,KAAA7lD,MAAA,GAAA6lD,EAAA,KAAAmZ,GAAA,QACA,WAEAn0D,KAAA,SAAA2R,GACA,OAAAqpC,KAAA7lD,MAAA6lD,EAAA,KAAAmZ,IAAAxiD,EAAAxc,KAAA6lD,KAAAnwC,MAAA,GAAA1V,OA0BA,IAAAo/D,IAAA,WAOA,QAAAl9D,GAAAq+C,EAAAvJ,EAAAqoB,EAAAC,GACA,GAAAtoB,GAAAkoB,EAAA90D,OAAA,aAAAm1D,EACAA,EAAAhf,GAAA,MAAAif,EACAjf,EAAAzpC,KAAA0oD,GACAjf,CAWA,KATA,GAGA3U,GACA1zB,EAEA6rB,EANAzgC,KACAkN,EAAA+vC,EAAAn2C,OACAsT,EAAAwhD,EAAAloB,KAGAyoB,EAAAliD,IAEAw2C,EAAAsL,MAEA/7D,EAAAkN,IACAuzB,EAAA07B,EAAAhxD,IAAAm9B,EAAAluB,EAAAxF,EAAAqoC,EAAAj9C,IAAA,KACAygC,EAAAhxB,KAAAmF,GAEAunD,EAAA9hD,IAAAiuB,GAAA1zB,GAQA,OAJAunD,GAAA50D,KAAA,SAAAk5B,EAAArmB,GACA4hD,EAAAvL,EAAAr2C,EAAAxb,EAAA6hC,EAAAiT,EAAAqoB,EAAAC,MAGAvL,EAGA,QAAAoL,GAAA1hD,EAAAu5B,GACA,KAAAA,EAAAkoB,EAAA90D,OAAA,MAAAqT,EACA,IAAA8iC,GAAAmf,EAAAC,EAAA3oB,EAAA,EAGA,OAFA,OAAAuoB,GAAAvoB,GAAAkoB,EAAA90D,OAAAm2C,EAAA9iC,EAAA0hD,WACA5e,KAAA9iC,EAAA5S,KAAA,SAAA0gB,EAAAyD,GAA8CuxB,EAAAxtC,MAAa2K,IAAAsR,EAAA+U,OAAAo7B,EAAA5zC,EAAAyrB,QAC3D,MAAA0oB,EAAAnf,EAAAzpC,KAAA,SAAA/I,EAAAC,GAAwD,MAAA0xD,GAAA3xD,EAAA2P,IAAA1P,EAAA0P,OAAgC6iC,EAzCxF,GAEAif,GACAD,EACAH,EAJAF,KACAS,IA2CA,OAAAP,IACA5hD,OAAA,SAAA+iC,GAA6B,MAAAr+C,GAAAq+C,EAAA,EAAAziC,EAAAC,IAC7BN,IAAA,SAAA8iC,GAA0B,MAAAr+C,GAAAq+C,EAAA,EAAAviC,EAAAC,IAC1BkhD,QAAA,SAAA5e,GAA8B,MAAA4e,GAAAj9D,EAAAq+C,EAAA,EAAAviC,EAAAC,GAAA,IAC9BP,IAAA,SAAAjB,GAAoC,MAAdyiD,GAAAnsD,KAAA0J,GAAc2iD,GACpCO,SAAA,SAAA5qB,GAAkE,MAAnC4qB,GAAAT,EAAA90D,OAAA,GAAA2qC,EAAmCqqB,GAClEI,WAAA,SAAAzqB,GAAqD,MAApByqB,GAAAzqB,EAAoBqqB,GACrDG,OAAA,SAAA/iD,GAAqC,MAAZ+iD,GAAA/iD,EAAY4iD,KAsBrCQ,GAAAriD,EAAA/T,SAEA0U,GAAA1U,UAAAmU,EAAAnU,WACAxH,YAAAkc,EACAqlB,IAAAq8B,GAAAr8B,IACAt2B,IAAA,SAAAiL,GAGA,MAFAA,IAAA,GACAlY,KAAAg/D,GAAA9mD,KACAlY,MAEAoR,OAAAwuD,GAAAxuD,OACA6tD,MAAAW,GAAAX,MACAl7B,OAAA67B,GAAAV,KACA1+C,KAAAo/C,GAAAp/C,KACA7R,MAAAixD,GAAAjxD,MACA9D,KAAA+0D,GAAA/0D,KAmBA,IAAAq0D,IAAA,SAAAzhD,GACA,GAAAyhD,KACA,QAAAxhD,KAAAD,GAAAyhD,EAAAnsD,KAAA2K,EACA,OAAAwhD,IAGAn7B,GAAA,SAAAtmB,GACA,GAAAsmB,KACA,QAAArmB,KAAAD,GAAAsmB,EAAAhxB,KAAA0K,EAAAC,GACA,OAAAqmB,IAGAo7B,GAAA,SAAA1hD,GACA,GAAA0hD,KACA,QAAAzhD,KAAAD,GAAA0hD,EAAApsD,MAAqC2K,MAAAxF,MAAAuF,EAAAC,IACrC,OAAAyhD,IAGAU,GAAA,SAAAxwD,EAAAwD,GAKA,MAJAxD,GAAA,MAAAA,EAAA,GAAAA,EACAwD,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAsF,UAAA/N,QAAAyI,EAAAxD,IAAA,GACAwD,GAAAxD,EACA,WACA,MAAAvD,MAAA8yD,SAAA/rD,EAAAxD,IAIAs+C,GAAA,SAAAmS,EAAAC,GACA,GAAAzoD,GAAA8C,CAGA,OAFA0lD,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAAxoD,EAGA,UAAAD,EAAAC,EAAAD,IAAA,SAGA,GACAA,GAAA,EAAAxL,KAAA8yD,SAAA,EACArnD,EAAA,EAAAzL,KAAA8yD,SAAA,EACAxkD,EAAA9C,IAAAC,WACK6C,KAAA,EAEL,OAAA0lD,GAAAC,EAAAxoD,EAAAzL,KAAA+P,QAAA/P,KAAAvL,IAAA6Z,QAIA4lD,GAAA,WACA,GAAAC,GAAAtS,GAAAzrD,MAAAlC,KAAAmY,UACA,mBACA,MAAArM,MAAA+mB,IAAAotC,OAIAC,GAAA,SAAA1vD,GACA,kBACA,OAAAquD,GAAA,EAAAv7D,EAAA,EAA4BA,EAAAkN,IAAOlN,EAAAu7D,GAAA/yD,KAAA8yD,QACnC,OAAAC,KAIAsB,GAAA,SAAA3vD,GACA,GAAA4vD,GAAAF,GAAA1vD,EACA,mBACA,MAAA4vD,KAAA5vD,IAIA6vD,GAAA,SAAA1U,GACA,kBACA,OAAA7/C,KAAAvL,IAAA,EAAAuL,KAAA8yD,UAAAjT;GAgCA/kB,GAAA,EAEA05B,GAAA,QAAAC,IAAA58C,GAGA,QAAA28C,GAAAliD,GACA,MAAAtS,MAAAgQ,IAAAsC,EAAAuF,GAKA,MARAA,MAMA28C,EAAA15B,SAAA25B,GAEAD,GACC15B,IAED45B,GAAA,QAAAD,IAAA58C,GAGA,QAAA68C,GAAApiD,GACA,SAAAtS,KAAAgQ,IAAA,EAAAsC,EAAAuF,GAKA,MARAA,MAMA68C,EAAA55B,SAAA25B,GAEAC,GACC55B,IAED65B,GAAA,QAAAF,IAAA58C,GAGA,QAAA88C,GAAAriD,GACA,QAAAA,GAAA,MAAAtS,KAAAgQ,IAAAsC,EAAAuF,GAAA,EAAA7X,KAAAgQ,IAAA,EAAAsC,EAAAuF,IAAA,EAKA,MARAA,MAMA88C,EAAA75B,SAAA25B,GAEAE,GACC75B,IAED3nB,GAAAnT,KAAA8O,GACAiE,GAAAI,GAAA,EAsCAS,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcAghD,GAAA,QAEAC,GAAA,QAAAJ,IAAA/0C,GAGA,QAAAm1C,GAAAviD,GACA,MAAAA,OAAAoN,EAAA,GAAApN,EAAAoN,GAKA,MARAA,MAMAm1C,EAAAD,UAAAH,GAEAI,GACCD,IAEDE,GAAA,QAAAL,IAAA/0C,GAGA,QAAAo1C,GAAAxiD,GACA,QAAAA,MAAAoN,EAAA,GAAApN,EAAAoN,GAAA,EAKA,MARAA,MAMAo1C,EAAAF,UAAAH,GAEAK,GACCF,IAEDG,GAAA,QAAAN,IAAA/0C,GAGA,QAAAq1C,GAAAziD,GACA,QAAAA,GAAA,KAAAA,MAAAoN,EAAA,GAAApN,EAAAoN,IAAApN,GAAA,GAAAA,IAAAoN,EAAA,GAAApN,EAAAoN,GAAA,KAKA,MARAA,MAMAq1C,EAAAH,UAAAH,GAEAM,GACCH,IAEDI,GAAA,EAAAh1D,KAAA8O,GACAmmD,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAV,IAAAxyD,EAAAqZ,GAGA,QAAA65C,GAAA7iD,GACA,MAAArQ,GAAAjC,KAAAgQ,IAAA,OAAAsC,GAAAtS,KAAAiT,KAAAyM,EAAApN,GAAAgJ,GAHA,GAAAoE,GAAA1f,KAAA6Y,KAAA,GAAA5W,EAAAjC,KAAA+G,IAAA,EAAA9E,MAAAqZ,GAAA05C,GASA,OAHAG,GAAAF,UAAA,SAAAhzD,GAAqC,MAAAwyD,IAAAxyD,EAAAqZ,EAAA05C,KACrCG,EAAAD,OAAA,SAAA55C,GAAkC,MAAAm5C,IAAAxyD,EAAAqZ,IAElC65C,GACCF,GAAAC,IAEDE,GAAA,QAAAX,IAAAxyD,EAAAqZ,GAGA,QAAA85C,GAAA9iD,GACA,SAAArQ,EAAAjC,KAAAgQ,IAAA,OAAAsC,OAAAtS,KAAAiT,KAAAX,EAAAoN,GAAApE,GAHA,GAAAoE,GAAA1f,KAAA6Y,KAAA,GAAA5W,EAAAjC,KAAA+G,IAAA,EAAA9E,MAAAqZ,GAAA05C,GASA,OAHAI,GAAAH,UAAA,SAAAhzD,GAAsC,MAAAwyD,IAAAxyD,EAAAqZ,EAAA05C,KACtCI,EAAAF,OAAA,SAAA55C,GAAmC,MAAAm5C,IAAAxyD,EAAAqZ,IAEnC85C,GACCH,GAAAC,IAEDG,GAAA,QAAAZ,IAAAxyD,EAAAqZ,GAGA,QAAA+5C,GAAA/iD,GACA,QAAAA,EAAA,EAAAA,EAAA,KACArQ,EAAAjC,KAAAgQ,IAAA,KAAAsC,GAAAtS,KAAAiT,KAAAyM,EAAApN,GAAAgJ,GACA,EAAArZ,EAAAjC,KAAAgQ,IAAA,MAAAsC,GAAAtS,KAAAiT,KAAAyM,EAAApN,GAAAgJ,IAAA,EALA,GAAAoE,GAAA1f,KAAA6Y,KAAA,GAAA5W,EAAAjC,KAAA+G,IAAA,EAAA9E,MAAAqZ,GAAA05C,GAWA,OAHAK,GAAAJ,UAAA,SAAAhzD,GAAwC,MAAAwyD,IAAAxyD,EAAAqZ,EAAA05C,KACxCK,EAAAH,OAAA,SAAA55C,GAAqC,MAAAm5C,IAAAxyD,EAAAqZ,IAErC+5C,GACCJ,GAAAC,IAEDI,GAAA,SAAAtO,GAOA,IANA,GAEA/kD,GAFAzK,KACAkN,EAAAsiD,EAAA1oD,OAEA4D,EAAA8kD,EAAAtiD,EAAA,GACA4wD,EAAA,IAEA99D,EAAAkN,GACAzC,EAAAC,EACAA,EAAA8kD,EAAAxvD,GACA89D,GAAArzD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAGA,OAAAozD,GAAA,GAGAC,GAAA,SAAAvO,GAUA,IATA,GAIA/kD,GAEAE,EANA3K,KACAkN,EAAAsiD,EAAA1oD,OACAkN,EAAA,EACAC,EAAA,EAEAvJ,EAAA8kD,EAAAtiD,EAAA,GAEAwe,EAAA,IAEA1rB,EAAAkN,GACAzC,EAAAC,EACAA,EAAA8kD,EAAAxvD,GACA0rB,GAAA/gB,EAAAF,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAuJ,IAAAvJ,EAAA,GAAAC,EAAA,IAAAC,EACAsJ,IAAAxJ,EAAA,GAAAC,EAAA,IAAAC,CAGA,OAAA+gB,IAAA,GAAA1X,EAAA0X,EAAAzX,EAAAyX,IAOAvO,GAAA,SAAA1S,EAAAC,EAAAC,GACA,OAAAD,EAAA,GAAAD,EAAA,KAAAE,EAAA,GAAAF,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAE,EAAA,GAAAF,EAAA,KAuBAuzD,GAAA,SAAA/gD,GACA,IAAA/P,EAAA+P,EAAAnW,QAAA,aAEA,IAAA9G,GACAkN,EACA+wD,EAAA,GAAAllD,OAAA7L,GACAgxD,EAAA,GAAAnlD,OAAA7L,EAEA,KAAAlN,EAAA,EAAaA,EAAAkN,IAAOlN,EAAAi+D,EAAAj+D,KAAAid,EAAAjd,GAAA,IAAAid,EAAAjd,GAAA,GAAAA,EAEpB,KADAi+D,EAAAzqD,KAAAuJ,GACA/c,EAAA,EAAaA,EAAAkN,IAAOlN,EAAAk+D,EAAAl+D,IAAAi+D,EAAAj+D,GAAA,IAAAi+D,EAAAj+D,GAAA,GAEpB,IAAAm+D,GAAAnhD,EAAAihD,GACAG,EAAAphD,EAAAkhD,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAAt3D,OAAA,KAAAq3D,IAAAr3D,OAAA,GACAk3D,IAIA,KAAAh+D,EAAAm+D,EAAAr3D,OAAA,EAAmC9G,GAAA,IAAQA,EAAAg+D,EAAAvuD,KAAAwN,EAAAghD,EAAAE,EAAAn+D,IAAA,IAC3C,KAAAA,GAAAq+D,EAAqBr+D,EAAAo+D,EAAAt3D,OAAAw3D,IAAqCt+D,EAAAg+D,EAAAvuD,KAAAwN,EAAAghD,EAAAG,EAAAp+D,IAAA,IAE1D,OAAAg+D,IAGAO,GAAA,SAAA/O,EAAAjrC,GAQA,OAHAhG,GAAAC,EAJAtR,EAAAsiD,EAAA1oD,OACAgd,EAAA0rC,EAAAtiD,EAAA,GACA8G,EAAAuQ,EAAA,GAAAtQ,EAAAsQ,EAAA,GACAlG,EAAAyF,EAAA,GAAAxF,EAAAwF,EAAA,GAEA06C,GAAA,EAEAx+D,EAAA,EAAiBA,EAAAkN,IAAOlN,EACxB8jB,EAAA0rC,EAAAxvD,GAAAue,EAAAuF,EAAA,GAAAtF,EAAAsF,EAAA,GACAtF,EAAAvK,GAAAqK,EAAArK,GAAAD,GAAAqK,EAAAE,IAAAtK,EAAAuK,IAAAF,EAAAE,GAAAD,IAAAigD,MACAngD,EAAAE,EAAAD,EAAAE,CAGA,OAAAggD,IAGAC,GAAA,SAAAjP,GAUA,IATA,GAGA/gC,GACAC,EAJA1uB,KACAkN,EAAAsiD,EAAA1oD,OACA4D,EAAA8kD,EAAAtiD,EAAA,GAGAyhB,EAAAjkB,EAAA,GACAkkB,EAAAlkB,EAAA,GACAg0D,EAAA,IAEA1+D,EAAAkN,GACAuhB,EAAAE,EACAD,EAAAE,EACAlkB,EAAA8kD,EAAAxvD,GACA2uB,EAAAjkB,EAAA,GACAkkB,EAAAlkB,EAAA,GACA+jB,GAAAE,EACAD,GAAAE,EACA8vC,GAAAl2D,KAAA+P,KAAAkW,IAAAC,IAGA,OAAAgwC,IAGAC,GAAAn2D,KAAA8O,GACAsnD,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYAzhD,GAAAlX,UAAAuX,EAAAvX,WACAxH,YAAA0e,EACA2hD,OAAA,SAAA/qD,EAAAC,GACAvX,KAAAuC,EAAAwQ,KAAA,IAAA/S,KAAA2gB,IAAA3gB,KAAA6gB,KAAAvJ,EAAA,IAAAtX,KAAA4gB,IAAA5gB,KAAA8gB,KAAAvJ,IAEA+qD,UAAA,WACA,OAAAtiE,KAAA6gB,MACA7gB,KAAA6gB,IAAA7gB,KAAA2gB,IAAA3gB,KAAA8gB,IAAA9gB,KAAA4gB,IACA5gB,KAAAuC,EAAAwQ,KAAA,OAGAwvD,OAAA,SAAAjrD,EAAAC,GACAvX,KAAAuC,EAAAwQ,KAAA,IAAA/S,KAAA6gB,KAAAvJ,EAAA,IAAAtX,KAAA8gB,KAAAvJ,IAEAirD,iBAAA,SAAA3gD,EAAAC,EAAAxK,EAAAC,GACAvX,KAAAuC,EAAAwQ,KAAA,KAAA8O,EAAA,KAAAC,EAAA,IAAA9hB,KAAA6gB,KAAAvJ,EAAA,IAAAtX,KAAA8gB,KAAAvJ,IAEAwQ,cAAA,SAAAlG,EAAAC,EAAAgD,EAAAC,EAAAzN,EAAAC,GACAvX,KAAAuC,EAAAwQ,KAAA,KAAA8O,EAAA,KAAAC,EAAA,KAAAgD,EAAA,KAAAC,EAAA,IAAA/kB,KAAA6gB,KAAAvJ,EAAA,IAAAtX,KAAA8gB,KAAAvJ,IAEAkrD,MAAA,SAAA5gD,EAAAC,EAAAgD,EAAAC,EAAA3K,GACAyH,KAAAC,KAAAgD,KAAAC,KAAA3K,IACA,IAAAuH,GAAA3hB,KAAA6gB,IACAe,EAAA5hB,KAAA8gB,IACAs3B,EAAAtzB,EAAAjD,EACAw2B,EAAAtzB,EAAAjD,EACA4D,EAAA/D,EAAAE,EACA8D,EAAA/D,EAAAE,EACA4gD,EAAAh9C,IAAAC,GAGA,IAAAvL,EAAA,WAAA2I,OAAA,oBAAA3I,EAGA,WAAApa,KAAA6gB,IACA7gB,KAAAuC,EAAAwQ,KACA,IAAA/S,KAAA6gB,IAAAgB,EAAA,IAAA7hB,KAAA8gB,IAAAgB,OAKA,IAAA4gD,EAAAP,GAKA,GAAAr2D,KAAAuH,IAAAsS,EAAAyyB,EAAAC,EAAA3yB,GAAAy8C,IAAA/nD,EAOA,CACA,GAAAuoD,GAAA79C,EAAAnD,EACAihD,EAAA79C,EAAAnD,EACAihD,EAAAzqB,IAAAC,IACAyqB,EAAAH,IAAAC,IACAG,EAAAj3D,KAAA+P,KAAAgnD,GACAG,EAAAl3D,KAAA+P,KAAA6mD,GACAhsD,EAAA0D,EAAAtO,KAAAgwD,KAAAmG,GAAAn2D,KAAAk+C,MAAA6Y,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAAvsD,EAAAssD,EACAE,EAAAxsD,EAAAqsD,CAGAj3D,MAAAuH,IAAA4vD,EAAA,GAAAd,IACAniE,KAAAuC,EAAAwQ,KACA,IAAA8O,EAAAohD,EAAAv9C,EAAA,IAAA5D,EAAAmhD,EAAAt9C,GAIA3lB,KAAAuC,EAAAwQ,KACA,IAAAqH,EAAA,IAAAA,EAAA,UAAAuL,EAAAg9C,EAAAj9C,EAAAk9C,GAAA,IAAA5iE,KAAA6gB,IAAAgB,EAAAqhD,EAAA9qB,EAAA,IAAAp4C,KAAA8gB,IAAAgB,EAAAohD,EAAA7qB,OAzBAr4C,MAAAuC,EAAAwQ,KACA,IAAA/S,KAAA6gB,IAAAgB,EAAA,IAAA7hB,KAAA8gB,IAAAgB,UA4BAs/B,IAAA,SAAA9pC,EAAAC,EAAA6C,EAAA24C,EAAAT,EAAA6Q,GACA7rD,KAAAC,KAAA6C,IACA,IAAA+L,GAAA/L,EAAAtO,KAAA8S,IAAAm0C,GACA3sC,EAAAhM,EAAAtO,KAAAiT,IAAAg0C,GACApxC,EAAArK,EAAA6O,EACAvE,EAAArK,EAAA6O,EACAX,EAAA,EAAA09C,EACAlqB,EAAAkqB,EAAApQ,EAAAT,IAAAS,CAGA,IAAA34C,EAAA,WAAA2I,OAAA,oBAAA3I,EAGA,QAAApa,KAAA6gB,IACA7gB,KAAAuC,EAAAwQ,KACA,IAAA4O,EAAA,IAAAC,IAKA9V,KAAAuH,IAAArT,KAAA6gB,IAAAc,GAAAwgD,IAAAr2D,KAAAuH,IAAArT,KAAA8gB,IAAAc,GAAAugD,KACAniE,KAAAuC,EAAAwQ,KACA,IAAA4O,EAAA,IAAAC,GAKAxH,IAGA6+B,EAAAmpB,GACApiE,KAAAuC,EAAAwQ,KACA,IAAAqH,EAAA,IAAAA,EAAA,QAAAqL,EAAA,IAAAnO,EAAA6O,EAAA,IAAA5O,EAAA6O,EACA,IAAAhM,EAAA,IAAAA,EAAA,QAAAqL,EAAA,IAAAzlB,KAAA6gB,IAAAc,EAAA,IAAA3hB,KAAA8gB,IAAAc,IAMAq3B,EAAA,IAAAA,IAAAipB,OACAliE,KAAAuC,EAAAwQ,KACA,IAAAqH,EAAA,IAAAA,EAAA,QAAA6+B,GAAAgpB,IAAA,IAAAx8C,EAAA,IAAAzlB,KAAA6gB,IAAAvJ,EAAA8C,EAAAtO,KAAA8S,IAAA0zC,GAAA,IAAAtyD,KAAA8gB,IAAAvJ,EAAA6C,EAAAtO,KAAAiT,IAAAuzC,OAIA8Q,KAAA,SAAA9rD,EAAAC,EAAAkjB,EAAApQ,GACArqB,KAAAuC,EAAAwQ,KAAA,IAAA/S,KAAA2gB,IAAA3gB,KAAA6gB,KAAAvJ,EAAA,IAAAtX,KAAA4gB,IAAA5gB,KAAA8gB,KAAAvJ,EAAA,KAAAkjB,EAAA,KAAApQ,EAAA,KAAAoQ,EAAA,MAEAwG,SAAA,WACA,MAAAjhC,MAAAuC,EAAAowB,KAAA,KAIA,IAAA0wC,IAAA,SAAA5mD,GACA,GAAAnF,IAAAtX,KAAA+hB,GAAA7V,KAAA,KAAAuQ,GACAlF,GAAAvX,KAAAgiB,GAAA9V,KAAA,KAAAuQ,EACA,OAAAxP,GAAAjN,KAAAqiB,MAAA/K,EAAAC,GAAAD,EAAAC,EAAAkF,IAmFA6mD,GAAA,SAAAhsD,EAAAC,GACA,GAAA0J,MAAA3J,OAAA2J,MAAA1J,MAAA,MAAAvX,KAEA,IAAA2hB,GAAA3hB,KAAA2gB,IACAiB,EAAA5hB,KAAA4gB,IACAiB,EAAA7hB,KAAA6gB,IACAiB,EAAA9hB,KAAA8gB,GAKA,IAAAG,MAAAU,GACAE,GAAAF,EAAA7V,KAAAyG,MAAA+E,IAAA,EACAwK,GAAAF,EAAA9V,KAAAyG,MAAAgF,IAAA,MAIA,MAAAoK,EAAArK,KAAAuK,GAAAD,EAAArK,KAAAuK,GAiCA,MAAA9hB,KAhCA,IAEAyN,GACAnK,EAHA0qB,EAAAnM,EAAAF,EACAH,EAAAxhB,KAAAyhB,KAIA,QAAAne,GAAAiU,GAAAqK,EAAAE,GAAA,MAAAxK,GAAAqK,EAAAE,GAAA,GACA,OACA,EAAApU,GAAA,GAAA4O,OAAA,GAAA5O,EAAAnK,GAAAke,IAAA/T,QACAugB,GAAA,EAAAnM,EAAAF,EAAAqM,EAAAlM,EAAAF,EAAAoM,EAAA1W,EAAAuK,GAAAtK,EAAAuK,EACA,MAEA,QACA,EAAArU,GAAA,GAAA4O,OAAA,GAAA5O,EAAAnK,GAAAke,IAAA/T,QACAugB,GAAA,EAAArM,EAAAE,EAAAmM,EAAAlM,EAAAF,EAAAoM,EAAArM,EAAArK,GAAAC,EAAAuK,EACA,MAEA,QACA,EAAArU,GAAA,GAAA4O,OAAA,GAAA5O,EAAAnK,GAAAke,IAAA/T,QACAugB,GAAA,EAAAnM,EAAAF,EAAAqM,EAAApM,EAAAE,EAAAkM,EAAA1W,EAAAuK,GAAAD,EAAArK,EACA,MAEA,QACA,EAAA9J,GAAA,GAAA4O,OAAA,GAAA5O,EAAAnK,GAAAke,IAAA/T,QACAugB,GAAA,EAAArM,EAAAE,EAAAmM,EAAApM,EAAAE,EAAAkM,EAAArM,EAAArK,GAAAsK,EAAArK,GAKAvX,KAAAyhB,OAAAzhB,KAAAyhB,MAAArX,SAAApK,KAAAyhB,MAAAD,GAUA,MAJAxhB,MAAA2gB,IAAAgB,EACA3hB,KAAA4gB,IAAAgB,EACA5hB,KAAA6gB,IAAAgB,EACA7hB,KAAA8gB,IAAAgB,EACA9hB,MAGAujE,GAAA,WACA,GAAAp7D,KAIA,OAHAnI,MAAAwjE,MAAA,SAAAhiD,GACA,IAAAA,EAAApX,OAAA,EAAAjC,GAAA4K,KAAAyO,EAAArZ,YAA8CqZ,IAAA5L,QAE9CzN,GAGAs7D,GAAA,SAAAlhE,GACA,MAAA4V,WAAA/N,OACApK,KAAAqiB,OAAA9f,EAAA,OAAAA,EAAA,OAAA8f,OAAA9f,EAAA,OAAAA,EAAA,OACA0e,MAAAjhB,KAAA2gB,KAAAxe,SAAAnC,KAAA2gB,IAAA3gB,KAAA4gB,MAAA5gB,KAAA6gB,IAAA7gB,KAAA8gB,OAGA4iD,GAAA,SAAAliD,EAAAG,EAAAC,EAAAC,EAAAC,GACA9hB,KAAAwhB,OACAxhB,KAAA2hB,KACA3hB,KAAA4hB,KACA5hB,KAAA6hB,KACA7hB,KAAA8hB,MAGA6hD,GAAA,SAAArsD,EAAAC,EAAAqQ,GACA,GAAAzf,GAGA0Z,EACAC,EACAgD,EACAC,EAKArB,EACApgB,EAXAqe,EAAA3hB,KAAA2gB,IACAiB,EAAA5hB,KAAA4gB,IAKAoE,EAAAhlB,KAAA6gB,IACAoE,EAAAjlB,KAAA8gB,IACA8iD,KACApiD,EAAAxhB,KAAAyhB,KAYA,KARAD,GAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAAliD,EAAAG,EAAAC,EAAAoD,EAAAC,IACA,MAAA2C,IAAAxF,KAEAT,EAAArK,EAAAsQ,EAAAhG,EAAArK,EAAAqQ,EACA5C,EAAA1N,EAAAsQ,EAAA3C,EAAA1N,EAAAqQ,EACAA,MAGAlE,EAAAkgD,EAAA/xC,OAGA,OAAArQ,EAAAkC,EAAAlC,QACAK,EAAA6B,EAAA/B,IAAAqD,IACAlD,EAAA4B,EAAA9B,IAAAqD,IACAH,EAAApB,EAAA7B,IAAAF,IACAoD,EAAArB,EAAA5B,IAAAF,GAGA,GAAAJ,EAAApX,OAAA,CACA,GAAA8W,IAAAW,EAAAiD,GAAA,EACA3D,GAAAW,EAAAiD,GAAA,CAEA6+C,GAAA7wD,KACA,GAAA2wD,IAAAliD,EAAA,GAAAN,EAAAC,EAAA2D,EAAAC,GACA,GAAA2+C,IAAAliD,EAAA,GAAAK,EAAAV,EAAAD,EAAA6D,GACA,GAAA2+C,IAAAliD,EAAA,GAAAN,EAAAY,EAAAgD,EAAA3D,GACA,GAAAuiD,IAAAliD,EAAA,GAAAK,EAAAC,EAAAZ,EAAAC,KAIA7d,GAAAiU,GAAA4J,IAAA,EAAA7J,GAAA4J,KACAwC,EAAAkgD,IAAAx5D,OAAA,GACAw5D,IAAAx5D,OAAA,GAAAw5D,IAAAx5D,OAAA,EAAA9G,GACAsgE,IAAAx5D,OAAA,EAAA9G,GAAAogB,OAKA,CACA,GAAAyC,GAAA7O,GAAAtX,KAAA+hB,GAAA7V,KAAA,KAAAsV,EAAArZ,MACAie,EAAA7O,GAAAvX,KAAAgiB,GAAA9V,KAAA,KAAAsV,EAAArZ,MACAke,EAAAF,IAAAC,GACA,IAAAC,EAAAuB,EAAA,CACA,GAAAnL,GAAA3Q,KAAA+P,KAAA+L,EAAAvB,EACA1E,GAAArK,EAAAmF,EAAAmF,EAAArK,EAAAkF,EACAuI,EAAA1N,EAAAmF,EAAAwI,EAAA1N,EAAAkF,EACAtU,EAAAqZ,EAAArZ,MAKA,MAAAA,IAGA07D,GAAA,SAAApnD,GACA,GAAAwE,MAAA3J,GAAAtX,KAAA+hB,GAAA7V,KAAA,KAAAuQ,KAAAwE,MAAA1J,GAAAvX,KAAAgiB,GAAA9V,KAAA,KAAAuQ,IAAA,MAAAzc,KAEA,IAAAyN,GAEAq2D,EACAvqB,EACA3jC,EAKA0B,EACAC,EACA2J,EACAC,EACAtJ,EACAyJ,EACAhe,EACAie,EAfAC,EAAAxhB,KAAAyhB,MAIAE,EAAA3hB,KAAA2gB,IACAiB,EAAA5hB,KAAA4gB,IACAiB,EAAA7hB,KAAA6gB,IACAiB,EAAA9hB,KAAA8gB,GAWA,KAAAU,EAAA,MAAAxhB,KAIA,IAAAwhB,EAAApX,OAAA,QAGA,IAFAyN,EAAAP,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAmDW,EAAAX,GACnDI,EAAA/J,IAAA4J,GAAAS,EAAAE,GAAA,IAAAF,EAAAT,EAAoDW,EAAAX,EACpD1T,EAAA+T,QAAAle,EAAAge,GAAA,EAAAzJ,IAAA,MAAA7X,KACA,KAAAwhB,EAAApX,OAAA,OACAqD,EAAAnK,EAAA,MAAAmK,EAAAnK,EAAA,MAAAmK,EAAAnK,EAAA,QAAAwgE,EAAAr2D,EAAA8T,EAAAje,GAIA,KAAAke,EAAArZ,OAAAsU,GAAA,GAAA88B,EAAA/3B,QAAA5L,MAAA,MAAA5V,KAIA,QAHA4V,EAAA4L,EAAA5L,aAAA4L,GAAA5L,KAGA2jC,GAAA3jC,EAAA2jC,EAAA3jC,aAAA2jC,GAAA3jC,KAAA5V,MAGAyN,GAGAmI,EAAAnI,EAAAnK,GAAAsS,QAAAnI,GAAAnK,IAGAke,EAAA/T,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACA+T,KAAA/T,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACA+T,EAAApX,SACA05D,IAAAviD,GAAAC,EACAxhB,KAAAyhB,MAAAD,GAGAxhB,OAbAA,KAAAyhB,MAAA7L,EAAA5V,OAqBA+jE,GAAA,WACA,MAAA/jE,MAAAyhB,OAGAuiD,GAAA,WACA,GAAAxjD,GAAA,CAIA,OAHAxgB,MAAAwjE,MAAA,SAAAhiD,GACA,IAAAA,EAAApX,OAAA,IAAAoW,QAAgCgB,IAAA5L,QAEhC4K,GAGAyjD,GAAA,SAAA34D,GACA,GAAAoY,GAAAizB,EAAAh1B,EAAAC,EAAAC,EAAAC,EAAA8hD,KAAApiD,EAAAxhB,KAAAyhB,KAEA,KADAD,GAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAAliD,EAAAxhB,KAAA2gB,IAAA3gB,KAAA4gB,IAAA5gB,KAAA6gB,IAAA7gB,KAAA8gB,MACA4C,EAAAkgD,EAAA/xC,OACA,IAAAvmB,EAAAkW,EAAAkC,EAAAlC,KAAAG,EAAA+B,EAAA/B,GAAAC,EAAA8B,EAAA9B,GAAAC,EAAA6B,EAAA7B,GAAAC,EAAA4B,EAAA5B,KAAAN,EAAApX,OAAA,CACA,GAAA8W,IAAAS,EAAAE,GAAA,EAAAV,GAAAS,EAAAE,GAAA,GACA60B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAz1B,EAAAC,EAAAU,EAAAC,KACA60B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAh1B,EAAAR,EAAAD,EAAAY,KACA60B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAz1B,EAAAU,EAAAC,EAAAV,KACAw1B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAh1B,EAAAC,EAAAV,EAAAC,IAGA,MAAAnhB,OAGAkkE,GAAA,SAAA54D,GACA,GAAAoY,GAAAkgD,KAAAhuD,IAEA,KADA5V,KAAAyhB,OAAAmiD,EAAA7wD,KAAA,GAAA2wD,IAAA1jE,KAAAyhB,MAAAzhB,KAAA2gB,IAAA3gB,KAAA4gB,IAAA5gB,KAAA6gB,IAAA7gB,KAAA8gB,MACA4C,EAAAkgD,EAAA/xC,OAAA,CACA,GAAArQ,GAAAkC,EAAAlC,IACA,IAAAA,EAAApX,OAAA,CACA,GAAAusC,GAAAh1B,EAAA+B,EAAA/B,GAAAC,EAAA8B,EAAA9B,GAAAC,EAAA6B,EAAA7B,GAAAC,EAAA4B,EAAA5B,GAAAZ,GAAAS,EAAAE,GAAA,EAAAV,GAAAS,EAAAE,GAAA,GACA60B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAh1B,EAAAC,EAAAV,EAAAC,KACAw1B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAz1B,EAAAU,EAAAC,EAAAV,KACAw1B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAh1B,EAAAR,EAAAD,EAAAY,KACA60B,EAAAn1B,EAAA,KAAAoiD,EAAA7wD,KAAA,GAAA2wD,IAAA/sB,EAAAz1B,EAAAC,EAAAU,EAAAC,IAEAlM,EAAA7C,KAAA2Q,GAEA,KAAAA,EAAA9N,EAAAic,OACAvmB,EAAAoY,EAAAlC,KAAAkC,EAAA/B,GAAA+B,EAAA9B,GAAA8B,EAAA7B,GAAA6B,EAAA5B,GAEA,OAAA9hB,OAOAmkE,GAAA,SAAA5hE,GACA,MAAA4V,WAAA/N,QAAApK,KAAA+hB,GAAAxf,EAAAvC,WAAA+hB,IAOAqiD,GAAA,SAAA7hE,GACA,MAAA4V,WAAA/N,QAAApK,KAAAgiB,GAAAzf,EAAAvC,WAAAgiB,IAwBAqiD,GAAA7hD,EAAAhZ,UAAAkZ,EAAAlZ,SAEA66D,IAAAxhD,KAAA,WACA,GAEAJ,GACAk0B,EAHA9zB,EAAA,GAAAH,GAAA1iB,KAAA+hB,GAAA/hB,KAAAgiB,GAAAhiB,KAAA2gB,IAAA3gB,KAAA4gB,IAAA5gB,KAAA6gB,IAAA7gB,KAAA8gB,KACAU,EAAAxhB,KAAAyhB,KAIA,KAAAD,EAAA,MAAAqB,EAEA,KAAArB,EAAApX,OAAA,MAAAyY,GAAApB,MAAAmB,EAAApB,GAAAqB,CAGA,KADAJ,IAAYqiB,OAAAtjB,EAAAjV,OAAAsW,EAAApB,MAAA,GAAApF,OAAA,KACZmF,EAAAiB,EAAAoP,OACA,OAAAvuB,GAAA,EAAmBA,EAAA,IAAOA,GAC1BqzC,EAAAn1B,EAAAsjB,OAAAxhC,MACAqzC,EAAAvsC,OAAAqY,EAAA1P,MAAsC+xB,OAAA6R,EAAApqC,OAAAiV,EAAAjV,OAAAjJ,GAAA,GAAA+Y,OAAA,KACtCmF,EAAAjV,OAAAjJ,GAAAsf,EAAA+zB,GAKA,OAAA9zB,IAGAwhD,GAAAp3D,IAAAo2D,GACAgB,GAAApiD,SACAoiD,GAAAhiD,MAAAihD,GACAe,GAAAl8D,KAAAo7D,GACAc,GAAApgB,OAAAwf,GACAY,GAAA36D,KAAAi6D,GACAU,GAAAjzD,OAAAyyD,GACAQ,GAAAltD,YACAktD,GAAAv0B,KAAAi0B,GACAM,GAAA7jD,KAAAwjD,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAA/sD,EAAA6sD,GACAE,GAAA9sD,EAAA6sD,EAEA,IAAAG,OAAA7uD,MAEAmO,KAeAf,GAAAtZ,UAAAua,EAAAva,WACAxH,YAAA8gB,EACA0hD,MAAA,SAAAl5D,GACA,qBAAAA,IAAAtL,KAAAijB,MAAA,SAAAF,MACA,UAAA/iB,KAAAkjB,OAAA,MAAAljB,KACA,IAAAoe,GAAAmmD,GAAAr4D,KAAAiM,UAAA,EAIA,OAHAiG,GAAArL,KAAAzH,KACAtL,KAAAqjB,SAAArjB,KAAAmjB,OAAApQ,KAAAqL,GACAqF,EAAAzjB,MACAA,MAEA4jB,MAAA,WAEA,MADA,OAAA5jB,KAAAkjB,QAAAU,EAAA5jB,KAAA,GAAA+iB,OAAA,UACA/iB,MAEAykE,MAAA,SAAAn5D,GACA,qBAAAA,IAAAtL,KAAAijB,MAAA,SAAAF,MAGA,OAFA/iB,MAAAijB,MAAA,SAAA/F,EAAAwnD,GAA2Cp5D,EAAApJ,MAAA,MAAAgb,GAAA6W,OAAA2wC,KAC3C5gD,EAAA9jB,MACAA,MAEA2kE,SAAA,SAAAr5D,GACA,qBAAAA,IAAAtL,KAAAijB,MAAA,SAAAF,MAGA,OAFA/iB,MAAAijB,MAAA3X,EACAwY,EAAA9jB,MACAA,MA4EA,IAAA4kE,IAAA,SAAAttD,GACA,kBACA,MAAAA,KAIA2R,GAAA,MACA47C,GAAA/4D,KAAA8O,GACAgK,GAAAigD,GAAA,EACAC,GAAA,EAAAD,GA4EAzjB,GAAA,WAUA,QAAAA,KACA,GAAA2jB,GACA3qD,EACAuqB,GAAAzgB,EAAAhiB,MAAAlC,KAAAmY,WACAoN,GAAAnB,EAAAliB,MAAAlC,KAAAmY,WACA46C,EAAAzuC,EAAApiB,MAAAlC,KAAAmY,WAAAyM,GACA0tC,EAAA9tC,EAAAtiB,MAAAlC,KAAAmY,WAAAyM,GACAq0B,EAAAntC,KAAAuH,IAAAi/C,EAAAS,GACAttC,EAAA6sC,EAAAS,CAQA,IANA7rC,MAAA69C,EAAAhkD,KAGAwE,EAAAof,IAAAvqB,EAAAmL,IAAAof,IAAAvqB,GAGAmL,EAAA0D,GAGA,GAAAgwB,EAAA6rB,GAAA77C,GACA/B,EAAAm7C,OAAA98C,EAAAzZ,KAAA8S,IAAAm0C,GAAAxtC,EAAAzZ,KAAAiT,IAAAg0C,IACA7rC,EAAAk6B,IAAA,IAAA77B,EAAAwtC,EAAAT,GAAA7sC,GACAkf,EAAA1b,KACA/B,EAAAm7C,OAAA19B,EAAA74B,KAAA8S,IAAA0zC,GAAA3tB,EAAA74B,KAAAiT,IAAAuzC,IACAprC,EAAAk6B,IAAA,IAAAzc,EAAA2tB,EAAAS,EAAAttC,QAKA,CACA,GAWA8E,GACAC,EAZAw6C,EAAAjS,EACAkS,EAAA3S,EACAqH,EAAA5G,EACAmS,EAAA5S,EACA6S,EAAAlsB,EACAmsB,EAAAnsB,EACAosB,EAAA3gD,EAAAxiB,MAAAlC,KAAAmY,WAAA,EACAmtD,EAAAD,EAAAp8C,KAAAs8C,KAAArjE,MAAAlC,KAAAmY,WAAArM,KAAA+P,KAAA8oB,IAAApf,MACAC,EAAA1Z,KAAAuD,IAAAvD,KAAAuH,IAAAkS,EAAAof,GAAA,GAAA6gC,EAAAtjE,MAAAlC,KAAAmY,YACAstD,EAAAjgD,EACAkgD,EAAAlgD,CAKA,IAAA8/C,EAAAr8C,GAAA,CACA,GAAAykC,GAAA/oC,GAAA2gD,EAAA3gC,EAAA74B,KAAAiT,IAAAsmD,IACA1tB,EAAAhzB,GAAA2gD,EAAA//C,EAAAzZ,KAAAiT,IAAAsmD,KACAF,GAAA,EAAAzX,GAAAzkC,IAAAykC,GAAAjoC,EAAA,KAAAk0C,GAAAjM,EAAAwX,GAAAxX,IACAyX,EAAA,EAAAxL,EAAAuL,GAAAnS,EAAAT,GAAA,IACA8S,GAAA,EAAAztB,GAAA1uB,IAAA0uB,GAAAlyB,EAAA,KAAAu/C,GAAArtB,EAAAstB,GAAAttB,IACAytB,EAAA,EAAAJ,EAAAC,GAAAlS,EAAAT,GAAA,GAGA,GAAA5sC,GAAAH,EAAAzZ,KAAA8S,IAAAomD,GACAr/C,EAAAJ,EAAAzZ,KAAAiT,IAAAimD,GACA9/C,EAAAyf,EAAA74B,KAAA8S,IAAAsmD,GACA//C,EAAAwf,EAAA74B,KAAAiT,IAAAmmD,EAGA,IAAA1/C,EAAAyD,GAAA,CACA,GAAAlD,GAAAR,EAAAzZ,KAAA8S,IAAAqmD,GACAj/C,EAAAT,EAAAzZ,KAAAiT,IAAAkmD,GACAh/C,EAAA0e,EAAA74B,KAAA8S,IAAA+6C,GACAzzC,EAAAye,EAAA74B,KAAAiT,IAAA46C,EAGA,IAAA1gB,EAAA4rB,GAAA,CACA,GAAAc,GAAAR,EAAAl8C,GAAApE,GAAAa,EAAAC,EAAAM,EAAAC,EAAAH,EAAAC,EAAAd,EAAAC,IAAAD,EAAAC,GACA4zB,EAAArzB,EAAAigD,EAAA,GACA3sB,EAAArzB,EAAAggD,EAAA,GACA1mB,EAAAl5B,EAAA4/C,EAAA,GACAzmB,EAAAl5B,EAAA2/C,EAAA,GACAC,EAAA,EAAA95D,KAAAiT,IAAAjT,KAAAk+C,MAAAjR,EAAAkG,EAAAjG,EAAAkG,IAAApzC,KAAA+P,KAAAk9B,IAAAC,KAAAltC,KAAA+P,KAAAojC,IAAAC,OAAA,GACA2mB,EAAA/5D,KAAA+P,KAAA8pD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAA35D,KAAAuD,IAAAmW,GAAAmf,EAAAkhC,IAAAD,EAAA,IACAF,EAAA55D,KAAAuD,IAAAmW,GAAAD,EAAAsgD,IAAAD,EAAA,KAKAR,EAAAn8C,GAGAy8C,EAAAz8C,IACAsB,EAAAjF,GAAAW,EAAAC,EAAAR,EAAAC,EAAAJ,EAAAmgD,EAAAjgD,GACA+E,EAAAlF,GAAAS,EAAAC,EAAAd,EAAAC,EAAAI,EAAAmgD,EAAAjgD,GAEAyB,EAAAm7C,OAAA93C,EAAAxD,GAAAwD,EAAA7E,IAAA6E,EAAAvD,GAAAuD,EAAA5E,KAGA+/C,EAAAlgD,EAAA0B,EAAAk6B,IAAA72B,EAAAxD,GAAAwD,EAAAvD,GAAA0+C,EAAA55D,KAAA4O,MAAA6P,EAAA5E,IAAA4E,EAAA7E,KAAA5Z,KAAA4O,MAAA8P,EAAA7E,IAAA6E,EAAA9E,MAAAD,IAIAyB,EAAAk6B,IAAA72B,EAAAxD,GAAAwD,EAAAvD,GAAA0+C,EAAA55D,KAAA4O,MAAA6P,EAAA5E,IAAA4E,EAAA7E,KAAA5Z,KAAA4O,MAAA6P,EAAAvE,IAAAuE,EAAAxE,MAAAN,GACAyB,EAAAk6B,IAAA,IAAA77B,EAAAzZ,KAAA4O,MAAA6P,EAAAvD,GAAAuD,EAAAvE,IAAAuE,EAAAxD,GAAAwD,EAAAxE,KAAAja,KAAA4O,MAAA8P,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,MAAAN,GACAyB,EAAAk6B,IAAA52B,EAAAzD,GAAAyD,EAAAxD,GAAA0+C,EAAA55D,KAAA4O,MAAA8P,EAAAxE,IAAAwE,EAAAzE,KAAAja,KAAA4O,MAAA8P,EAAA7E,IAAA6E,EAAA9E,MAAAD,MAKAyB,EAAAm7C,OAAA38C,EAAAC,GAAAuB,EAAAk6B,IAAA,IAAA77B,EAAAy/C,EAAAC,GAAAx/C,IArBAyB,EAAAm7C,OAAA38C,EAAAC,GAyBAgf,EAAA1b,IAAAk8C,EAAAl8C,GAGAw8C,EAAAx8C,IACAsB,EAAAjF,GAAAJ,EAAAC,EAAAY,EAAAC,EAAA2e,GAAA8gC,EAAAhgD,GACA+E,EAAAlF,GAAAI,EAAAC,EAAAM,EAAAC,EAAAye,GAAA8gC,EAAAhgD,GAEAyB,EAAAq7C,OAAAh4C,EAAAxD,GAAAwD,EAAA7E,IAAA6E,EAAAvD,GAAAuD,EAAA5E,KAGA8/C,EAAAjgD,EAAA0B,EAAAk6B,IAAA72B,EAAAxD,GAAAwD,EAAAvD,GAAAy+C,EAAA35D,KAAA4O,MAAA6P,EAAA5E,IAAA4E,EAAA7E,KAAA5Z,KAAA4O,MAAA8P,EAAA7E,IAAA6E,EAAA9E,MAAAD,IAIAyB,EAAAk6B,IAAA72B,EAAAxD,GAAAwD,EAAAvD,GAAAy+C,EAAA35D,KAAA4O,MAAA6P,EAAA5E,IAAA4E,EAAA7E,KAAA5Z,KAAA4O,MAAA6P,EAAAvE,IAAAuE,EAAAxE,MAAAN,GACAyB,EAAAk6B,IAAA,IAAAzc,EAAA74B,KAAA4O,MAAA6P,EAAAvD,GAAAuD,EAAAvE,IAAAuE,EAAAxD,GAAAwD,EAAAxE,KAAAja,KAAA4O,MAAA8P,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,KAAAN,GACAyB,EAAAk6B,IAAA52B,EAAAzD,GAAAyD,EAAAxD,GAAAy+C,EAAA35D,KAAA4O,MAAA8P,EAAAxE,IAAAwE,EAAAzE,KAAAja,KAAA4O,MAAA8P,EAAA7E,IAAA6E,EAAA9E,MAAAD,KAKAyB,EAAAk6B,IAAA,IAAAzc,EAAAugC,EAAAvL,EAAAl0C,GArBAyB,EAAAq7C,OAAAr9C,EAAAC,OA1FA+B,GAAAm7C,OAAA,IAoHA,IAFAn7C,EAAAo7C,YAEAyC,EAAA,MAAA79C,GAAA,KAAA69C,EAAA,SA7IA,GAAA7gD,GAAAD,EACAG,EAAAD,EACAqhD,EAAAZ,GAAA,GACAW,EAAA,KACAjhD,EAAAD,EACAG,EAAAD,EACAG,EAAAD,GACAyC,EAAA,IA+KA,OAtCAk6B,GAAAigB,SAAA,WACA,GAAAjnD,KAAA8J,EAAAhiB,MAAAlC,KAAAmY,aAAAiM,EAAAliB,MAAAlC,KAAAmY,YAAA,EACApK,IAAAuW,EAAApiB,MAAAlC,KAAAmY,aAAAqM,EAAAtiB,MAAAlC,KAAAmY,YAAA,EAAA0sD,GAAA,CACA,QAAA/4D,KAAA8S,IAAA7Q,GAAAqM,EAAAtO,KAAAiT,IAAAhR,GAAAqM,IAGAgnC,EAAAl9B,YAAA,SAAA3hB,GACA,MAAA4V,WAAA/N,QAAA8Z,EAAA,kBAAA3hB,KAAAqiE,IAAAriE,GAAA6+C,GAAAl9B,GAGAk9B,EAAAh9B,YAAA,SAAA7hB,GACA,MAAA4V,WAAA/N,QAAAga,EAAA,kBAAA7hB,KAAAqiE,IAAAriE,GAAA6+C,GAAAh9B,GAGAg9B,EAAAokB,aAAA,SAAAjjE,GACA,MAAA4V,WAAA/N,QAAAo7D,EAAA,kBAAAjjE,KAAAqiE,IAAAriE,GAAA6+C,GAAAokB,GAGApkB,EAAAmkB,UAAA,SAAAhjE,GACA,MAAA4V,WAAA/N,QAAAm7D,EAAA,MAAAhjE,EAAA,uBAAAA,KAAAqiE,IAAAriE,GAAA6+C,GAAAmkB,GAGAnkB,EAAA98B,WAAA,SAAA/hB,GACA,MAAA4V,WAAA/N,QAAAka,EAAA,kBAAA/hB,KAAAqiE,IAAAriE,GAAA6+C,GAAA98B,GAGA88B,EAAA58B,SAAA,SAAAjiB,GACA,MAAA4V,WAAA/N,QAAAoa,EAAA,kBAAAjiB,KAAAqiE,IAAAriE,GAAA6+C,GAAA58B,GAGA48B,EAAA18B,SAAA,SAAAniB,GACA,MAAA4V,WAAA/N,QAAAsa,EAAA,kBAAAniB,KAAAqiE,IAAAriE,GAAA6+C,GAAA18B,GAGA08B,EAAAl6B,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QAAA8c,EAAA,MAAA3kB,EAAA,KAAAA,EAAA6+C,GAAAl6B,GAGAk6B,EAOAn6B,IAAAzd,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAAimE,OAAA,GAEAjb,QAAA,YACAhrD,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,CACA,SAAAjmE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,KAKA,IAAA2uD,IAAA,SAAAh/C,GACA,UAAAD,IAAAC,IAWAguB,GAAA,WAQA,QAAAA,GAAA/sC,GACA,GAAA7E,GAEAmZ,EAEAsoD,EAHAv0D,EAAArI,EAAAiC,OAEA+7D,GAAA,CAKA,KAFA,MAAAj/C,IAAAie,EAAA7d,EAAAy9C,EAAAhkD,MAEAzd,EAAA,EAAeA,GAAAkN,IAAQlN,IACvBA,EAAAkN,GAAA41D,EAAA3pD,EAAAtU,EAAA7E,KAAA6E,MAAAg+D,KACAA,MAAAhhC,EAAA4lB,YACA5lB,EAAA6lB,WAEAmb,GAAAhhC,EAAAtd,OAAAw+C,EAAA5pD,EAAAnZ,EAAA6E,IAAAm+D,EAAA7pD,EAAAnZ,EAAA6E,GAGA,IAAA48D,EAAA,MAAA5/B,GAAA,KAAA4/B,EAAA,SAxBA,GAAAsB,GAAA/uD,GACAgvD,EAAA/uD,GACA6uD,EAAAxB,IAAA,GACA19C,EAAA,KACAI,EAAA4+C,GACA/gC,EAAA,IA0CA,OApBA+P,GAAA59B,EAAA,SAAA/U,GACA,MAAA4V,WAAA/N,QAAAi8D,EAAA,kBAAA9jE,KAAAqiE,IAAAriE,GAAA2yC,GAAAmxB,GAGAnxB,EAAA39B,EAAA,SAAAhV,GACA,MAAA4V,WAAA/N,QAAAk8D,EAAA,kBAAA/jE,KAAAqiE,IAAAriE,GAAA2yC,GAAAoxB,GAGApxB,EAAAkxB,QAAA,SAAA7jE,GACA,MAAA4V,WAAA/N,QAAAg8D,EAAA,kBAAA7jE,KAAAqiE,KAAAriE,GAAA2yC,GAAAkxB,GAGAlxB,EAAA5tB,MAAA,SAAA/kB,GACA,MAAA4V,WAAA/N,QAAAkd,EAAA/kB,EAAA,MAAA2kB,IAAAie,EAAA7d,EAAAJ,IAAAguB,GAAA5tB,GAGA4tB,EAAAhuB,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QAAA,MAAA7H,EAAA2kB,EAAAie,EAAA,KAAAA,EAAA7d,EAAAJ,EAAA3kB,GAAA2yC,GAAAhuB,GAGAguB,GAGAqxB,GAAA,WAUA,QAAAnF,GAAAj5D,GACA,GAAA7E,GACAie,EACAyN,EAEAvS,EAEAsoD,EAHAv0D,EAAArI,EAAAiC,OAEA+7D,GAAA,EAEAK,EAAA,GAAAnqD,OAAA7L,GACAi2D,EAAA,GAAApqD,OAAA7L,EAIA,KAFA,MAAA0W,IAAAie,EAAA7d,EAAAy9C,EAAAhkD,MAEAzd,EAAA,EAAeA,GAAAkN,IAAQlN,EAAA,CACvB,KAAAA,EAAAkN,GAAA41D,EAAA3pD,EAAAtU,EAAA7E,KAAA6E,MAAAg+D,EACA,GAAAA,KACA5kD,EAAAje,EACA6hC,EAAA2gC,YACA3gC,EAAA4lB,gBACS,CAGT,IAFA5lB,EAAA6lB,UACA7lB,EAAA4lB,YACA/7B,EAAA1rB,EAAA,EAAyB0rB,GAAAzN,IAAQyN,EACjCmW,EAAAtd,MAAA2+C,EAAAx3C,GAAAy3C,EAAAz3C,GAEAmW,GAAA6lB,UACA7lB,EAAA6gC,UAGAG,IACAK,EAAAljE,IAAAqe,EAAAlF,EAAAnZ,EAAA6E,GAAAs+D,EAAAnjE,IAAAse,EAAAnF,EAAAnZ,EAAA6E,GACAg9B,EAAAtd,MAAAhG,KAAApF,EAAAnZ,EAAA6E,GAAAq+D,EAAAljE,GAAAwe,KAAArF,EAAAnZ,EAAA6E,GAAAs+D,EAAAnjE,KAIA,GAAAyhE,EAAA,MAAA5/B,GAAA,KAAA4/B,EAAA,SAGA,QAAA2B,KACA,MAAAxxB,MAAAkxB,WAAA9+C,SAAAJ,WAhDA,GAAAvF,GAAArK,GACAuK,EAAA,KACAD,EAAAgjD,GAAA,GACA9iD,EAAAvK,GACA6uD,EAAAxB,IAAA,GACA19C,EAAA,KACAI,EAAA4+C,GACA/gC,EAAA,IA6FA,OAjDAi8B,GAAA9pD,EAAA,SAAA/U,GACA,MAAA4V,WAAA/N,QAAAuX,EAAA,kBAAApf,KAAAqiE,IAAAriE,GAAAsf,EAAA,KAAAu/C,GAAAz/C,GAGAy/C,EAAAz/C,GAAA,SAAApf,GACA,MAAA4V,WAAA/N,QAAAuX,EAAA,kBAAApf,KAAAqiE,IAAAriE,GAAA6+D,GAAAz/C,GAGAy/C,EAAAv/C,GAAA,SAAAtf,GACA,MAAA4V,WAAA/N,QAAAyX,EAAA,MAAAtf,EAAA,uBAAAA,KAAAqiE,IAAAriE,GAAA6+D,GAAAv/C,GAGAu/C,EAAA7pD,EAAA,SAAAhV,GACA,MAAA4V,WAAA/N,QAAAwX,EAAA,kBAAArf,KAAAqiE,IAAAriE,GAAAuf,EAAA,KAAAs/C,GAAAx/C,GAGAw/C,EAAAx/C,GAAA,SAAArf,GACA,MAAA4V,WAAA/N,QAAAwX,EAAA,kBAAArf,KAAAqiE,IAAAriE,GAAA6+D,GAAAx/C,GAGAw/C,EAAAt/C,GAAA,SAAAvf,GACA,MAAA4V,WAAA/N,QAAA0X,EAAA,MAAAvf,EAAA,uBAAAA,KAAAqiE,IAAAriE,GAAA6+D,GAAAt/C,GAGAs/C,EAAAuF,OACAvF,EAAAwF,OAAA,WACA,MAAAF,KAAApvD,EAAAqK,GAAApK,EAAAqK,IAGAw/C,EAAAyF,OAAA,WACA,MAAAH,KAAApvD,EAAAqK,GAAApK,EAAAuK,IAGAs/C,EAAA0F,OAAA,WACA,MAAAJ,KAAApvD,EAAAuK,GAAAtK,EAAAqK,IAGAw/C,EAAAgF,QAAA,SAAA7jE,GACA,MAAA4V,WAAA/N,QAAAg8D,EAAA,kBAAA7jE,KAAAqiE,KAAAriE,GAAA6+D,GAAAgF,GAGAhF,EAAA95C,MAAA,SAAA/kB,GACA,MAAA4V,WAAA/N,QAAAkd,EAAA/kB,EAAA,MAAA2kB,IAAAie,EAAA7d,EAAAJ,IAAAk6C,GAAA95C,GAGA85C,EAAAl6C,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QAAA,MAAA7H,EAAA2kB,EAAAie,EAAA,KAAAA,EAAA7d,EAAAJ,EAAA3kB,GAAA6+D,GAAAl6C,GAGAk6C,GAGA2F,GAAA,SAAAh5D,EAAAC,GACA,MAAAA,GAAAD,KAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAA4U,KAGAqkD,GAAA,SAAAvqD,GACA,MAAAA,IAGAwqD,GAAA,WAQA,QAAAA,GAAA9+D,GACA,GAAA7E,GAEAie,EACAyN,EAMAsjC,EAGA/mC,EAXA/a,EAAArI,EAAAiC,OAGAy0D,EAAA,EACA50D,EAAA,GAAAoS,OAAA7L,GACA02D,EAAA,GAAA7qD,OAAA7L,GACAuiD,GAAAzuC,EAAApiB,MAAAlC,KAAAmY,WACA8gC,EAAAntC,KAAAuD,IAAAy1D,GAAAh5D,KAAA+G,KAAAiyD,GAAAtgD,EAAAtiB,MAAAlC,KAAAmY,WAAA46C,IAEA3rC,EAAAtb,KAAAuD,IAAAvD,KAAAuH,IAAA4lC,GAAAzoC,EAAAkU,EAAAxiB,MAAAlC,KAAAmY,YACAgvD,EAAA//C,GAAA6xB,EAAA,OAGA,KAAA31C,EAAA,EAAeA,EAAAkN,IAAOlN,GACtBioB,EAAA27C,EAAAj9D,EAAA3G,OAAA4U,EAAA/P,EAAA7E,KAAA6E,IAAA,IACA02D,GAAAtzC,EASA,KAJA,MAAAi0C,EAAAv1D,EAAA6M,KAAA,SAAAxT,EAAAie,GAAuD,MAAAi+C,GAAA0H,EAAA5jE,GAAA4jE,EAAA3lD,MACvD,MAAAzK,GAAA7M,EAAA6M,KAAA,SAAAxT,EAAAie,GAAsD,MAAAzK,GAAA3O,EAAA7E,GAAA6E,EAAAoZ,MAGtDje,EAAA,EAAA0rB,EAAA6vC,GAAA5lB,EAAAzoC,EAAA22D,GAAAtI,EAAA,EAAkDv7D,EAAAkN,IAAOlN,EAAAyvD,EAAAT,EACzD/wC,EAAAtX,EAAA3G,GAAAioB,EAAA27C,EAAA3lD,GAAA+wC,EAAAS,GAAAxnC,EAAA,EAAAA,EAAAyD,EAAA,GAAAm4C,EAAAD,EAAA3lD,IACApZ,OAAAoZ,GACAtX,MAAA3G,EACA4U,MAAAqT,EACAjH,WAAAyuC,EACAvuC,SAAA8tC,EACA5tC,SAAA0C,EAIA,OAAA8/C,GA5CA,GAAAhvD,GAAA8uD,GACAxH,EAAAuH,GACAjwD,EAAA,KACAwN,EAAAsgD,GAAA,GACApgD,EAAAogD,GAAAE,IACApgD,EAAAkgD,GAAA,EAkEA,OAxBAqC,GAAA/uD,MAAA,SAAA3V,GACA,MAAA4V,WAAA/N,QAAA8N,EAAA,kBAAA3V,KAAAqiE,IAAAriE,GAAA0kE,GAAA/uD,GAGA+uD,EAAAzH,WAAA,SAAAj9D,GACA,MAAA4V,WAAA/N,QAAAo1D,EAAAj9D,EAAAuU,EAAA,KAAAmwD,GAAAzH,GAGAyH,EAAAnwD,KAAA,SAAAvU,GACA,MAAA4V,WAAA/N,QAAA0M,EAAAvU,EAAAi9D,EAAA,KAAAyH,GAAAnwD,GAGAmwD,EAAA3iD,WAAA,SAAA/hB,GACA,MAAA4V,WAAA/N,QAAAka,EAAA,kBAAA/hB,KAAAqiE,IAAAriE,GAAA0kE,GAAA3iD,GAGA2iD,EAAAziD,SAAA,SAAAjiB,GACA,MAAA4V,WAAA/N,QAAAoa,EAAA,kBAAAjiB,KAAAqiE,IAAAriE,GAAA0kE,GAAAziD,GAGAyiD,EAAAviD,SAAA,SAAAniB,GACA,MAAA4V,WAAA/N,QAAAsa,EAAA,kBAAAniB,KAAAqiE,IAAAriE,GAAA0kE,GAAAviD,GAGAuiD,GAGAG,GAAA5/C,GAAA0+C,GAMA7+C,IAAA7d,WACAs8D,UAAA,WACA9lE,KAAAunB,OAAAu+C,aAEAE,QAAA,WACAhmE,KAAAunB,OAAAy+C,WAEAjb,UAAA,WACA/qD,KAAAunB,OAAAwjC,aAEAC,QAAA,WACAhrD,KAAAunB,OAAAyjC,WAEAnjC,MAAA,SAAA9Z,EAAAqM,GACApa,KAAAunB,OAAAM,MAAAzN,EAAAtO,KAAAiT,IAAAhR,GAAAqM,GAAAtO,KAAA8S,IAAA7Q,KA4BA,IAAAs5D,IAAA,WACA,MAAA3/C,IAAAwtB,KAAA5tB,MAAA8/C,MAGAE,GAAA,WACA,GAAAv5D,GAAAw4D,KAAAj/C,MAAA8/C,IACAn5D,EAAAF,EAAAuZ,MACA3F,EAAA5T,EAAA44D,OACA9kD,EAAA9T,EAAA+4D,OACAllD,EAAA7T,EAAA64D,OACA9kD,EAAA/T,EAAA84D,MAiBA,OAfA94D,GAAA4Z,MAAA5Z,EAAAuJ,QAAAvJ,GAAAuJ,EACAvJ,EAAAuW,WAAAvW,EAAA4T,SAAA5T,GAAA4T,GACA5T,EAAAyW,SAAAzW,EAAA8T,SAAA9T,GAAA8T,GACA9T,EAAA6Z,OAAA7Z,EAAAwJ,QAAAxJ,GAAAwJ,EACAxJ,EAAAmW,YAAAnW,EAAA6T,SAAA7T,GAAA6T,GACA7T,EAAAqW,YAAArW,EAAA+T,SAAA/T,GAAA+T,GACA/T,EAAAw5D,eAAA,WAAiC,MAAA7/C,IAAA/F,YAA2B5T,GAAA44D,OAC5D54D,EAAAy5D,aAAA,WAA+B,MAAA9/C,IAAA7F,YAA2B9T,GAAA+4D,OAC1D/4D,EAAA05D,gBAAA,WAAkC,MAAA//C,IAAA9F,YAA2B7T,GAAA64D,OAC7D74D,EAAA25D,gBAAA,WAAkC,MAAAhgD,IAAA5F,YAA2B/T,GAAA84D,OAE7D94D,EAAAuZ,MAAA,SAAA/kB,GACA,MAAA4V,WAAA/N,OAAA6D,EAAAuZ,GAAAjlB,IAAA0L,IAAAsZ,QAGAxZ,GAGA0pC,IACAkwB,KAAA,SAAAzgD,EAAA1G,GACA,GAAApG,GAAAtO,KAAA+P,KAAA2E,EAAAqkD,GACA39C,GAAAm7C,OAAAjoD,EAAA,GACA8M,EAAAk6B,IAAA,IAAAhnC,EAAA,EAAA0qD,MAIA8C,IACAD,KAAA,SAAAzgD,EAAA1G,GACA,GAAApG,GAAAtO,KAAA+P,KAAA2E,EAAA,IACA0G,GAAAm7C,UAAAjoD,MACA8M,EAAAq7C,QAAAnoD,MACA8M,EAAAq7C,QAAAnoD,QACA8M,EAAAq7C,OAAAnoD,QACA8M,EAAAq7C,OAAAnoD,MACA8M,EAAAq7C,OAAA,EAAAnoD,MACA8M,EAAAq7C,OAAA,EAAAnoD,KACA8M,EAAAq7C,OAAAnoD,KACA8M,EAAAq7C,OAAAnoD,EAAA,EAAAA,GACA8M,EAAAq7C,QAAAnoD,EAAA,EAAAA,GACA8M,EAAAq7C,QAAAnoD,KACA8M,EAAAq7C,UAAAnoD,KACA8M,EAAAo7C,cAIAuF,GAAA/7D,KAAA+P,KAAA,KACAisD,GAAA,EAAAD,GAEAE,IACAJ,KAAA,SAAAzgD,EAAA1G,GACA,GAAAjJ,GAAAzL,KAAA+P,KAAA2E,EAAAsnD,IACAxwD,EAAAC,EAAAswD,EACA3gD,GAAAm7C,OAAA,GAAA9qD,GACA2P,EAAAq7C,OAAAjrD,EAAA,GACA4P,EAAAq7C,OAAA,EAAAhrD,GACA2P,EAAAq7C,QAAAjrD,EAAA,GACA4P,EAAAo7C,cAIA0F,GAAA,kBACAC,GAAAn8D,KAAAiT,IAAA8lD,GAAA,IAAA/4D,KAAAiT,IAAA,EAAA8lD,GAAA,IACAqD,GAAAp8D,KAAAiT,IAAA+lD,GAAA,IAAAmD,GACAE,IAAAr8D,KAAA8S,IAAAkmD,GAAA,IAAAmD,GAEAG,IACAT,KAAA,SAAAzgD,EAAA1G,GACA,GAAApG,GAAAtO,KAAA+P,KAAA2E,EAAAwnD,IACA1wD,EAAA4wD,GAAA9tD,EACA7C,EAAA4wD,GAAA/tD,CACA8M,GAAAm7C,OAAA,GAAAjoD,GACA8M,EAAAq7C,OAAAjrD,EAAAC,EACA,QAAAjU,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAAyK,GAAA+2D,GAAAxhE,EAAA,EACA2K,EAAAnC,KAAA8S,IAAA7Q,GACAyd,EAAA1f,KAAAiT,IAAAhR,EACAmZ,GAAAq7C,OAAA/2C,EAAApR,GAAAnM,EAAAmM,GACA8M,EAAAq7C,OAAAt0D,EAAAqJ,EAAAkU,EAAAjU,EAAAiU,EAAAlU,EAAArJ,EAAAsJ,GAEA2P,EAAAo7C,cAIA+F,IACAV,KAAA,SAAAzgD,EAAA1G,GACA,GAAAia,GAAA3uB,KAAA+P,KAAA2E,GACAlJ,GAAAmjB,EAAA,CACAvT,GAAAk8C,KAAA9rD,IAAAmjB,OAIA6tC,GAAAx8D,KAAA+P,KAAA,GAEA0sD,IACAZ,KAAA,SAAAzgD,EAAA1G,GACA,GAAAjJ,IAAAzL,KAAA+P,KAAA2E,GAAA,EAAA8nD,IACAphD,GAAAm7C,OAAA,IAAA9qD,GACA2P,EAAAq7C,QAAA+F,GAAA/wD,MACA2P,EAAAq7C,OAAA+F,GAAA/wD,MACA2P,EAAAo7C,cAIAr0D,OACAud,GAAA1f,KAAA+P,KAAA,KACAmT,GAAA,EAAAljB,KAAA+P,KAAA,IACA9N,GAAA,GAAAihB,GAAA,KAEAw5C,IACAb,KAAA,SAAAzgD,EAAA1G,GACA,GAAApG,GAAAtO,KAAA+P,KAAA2E,EAAAzS,IACA4T,EAAAvH,EAAA,EACAwH,EAAAxH,EAAA4U,GACAnN,EAAAF,EACAG,EAAA1H,EAAA4U,GAAA5U,EACA0K,GAAAjD,EACAkD,EAAAjD,CACAoF,GAAAm7C,OAAA1gD,EAAAC,GACAsF,EAAAq7C,OAAA1gD,EAAAC,GACAoF,EAAAq7C,OAAAz9C,EAAAC,GACAmC,EAAAq7C,OAAAt0D,GAAA0T,EAAA6J,GAAA5J,EAAA4J,GAAA7J,EAAA1T,GAAA2T,GACAsF,EAAAq7C,OAAAt0D,GAAA4T,EAAA2J,GAAA1J,EAAA0J,GAAA3J,EAAA5T,GAAA6T,GACAoF,EAAAq7C,OAAAt0D,GAAA6W,EAAA0G,GAAAzG,EAAAyG,GAAA1G,EAAA7W,GAAA8W,GACAmC,EAAAq7C,OAAAt0D,GAAA0T,EAAA6J,GAAA5J,EAAA3T,GAAA2T,EAAA4J,GAAA7J,GACAuF,EAAAq7C,OAAAt0D,GAAA4T,EAAA2J,GAAA1J,EAAA7T,GAAA6T,EAAA0J,GAAA3J,GACAqF,EAAAq7C,OAAAt0D,GAAA6W,EAAA0G,GAAAzG,EAAA9W,GAAA8W,EAAAyG,GAAA1G,GACAoC,EAAAo7C,cAIAmG,IACAhxB,GACAmwB,GACAG,GACAM,GACAD,GACAG,GACAC,IAGA9vC,GAAA,WAKA,QAAAA,KACA,GAAAqsC,EAGA,IAFA79C,MAAA69C,EAAAhkD,KACAnK,EAAA1U,MAAAlC,KAAAmY,WAAAwvD,KAAAzgD,GAAA1G,EAAAte,MAAAlC,KAAAmY,YACA4sD,EAAA,MAAA79C,GAAA,KAAA69C,EAAA,SARA,GAAAnuD,GAAAguD,GAAAntB,IACAj3B,EAAAokD,GAAA,IACA19C,EAAA,IAqBA,OAZAwR,GAAA9hB,KAAA,SAAArU,GACA,MAAA4V,WAAA/N,QAAAwM,EAAA,kBAAArU,KAAAqiE,GAAAriE,GAAAm2B,GAAA9hB,GAGA8hB,EAAAlY,KAAA,SAAAje,GACA,MAAA4V,WAAA/N,QAAAoW,EAAA,kBAAAje,KAAAqiE,IAAAriE,GAAAm2B,GAAAlY,GAGAkY,EAAAxR,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QAAA8c,EAAA,MAAA3kB,EAAA,KAAAA,EAAAm2B,GAAAxR,GAGAwR,GAGAgwC,GAAA,YAiBA1gD,IAAAxe,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IACA7gB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA6B,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OAAAp+C,GAAA7nB,UAAA6gB,IAAA7gB,KAAA8gB,IACA,QAAA9gB,KAAAmnB,SAAAo7C,OAAAviE,KAAA6gB,IAAA7gB,KAAA8gB,MAEA9gB,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAAmnB,SAAAo7C,QAAA,EAAAviE,KAAA2gB,IAAA3gB,KAAA6gB,KAAA,KAAA7gB,KAAA4gB,IAAA5gB,KAAA8gB,KAAA,EAC9B,SAAA+G,GAAA7nB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAAvJ,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAAvJ,GAIA,IAAAoxD,IAAA,SAAAzhD,GACA,UAAAc,IAAAd,GAOAe,IAAAze,WACAs8D,UAAA4C,GACA1C,QAAA0C,GACA3d,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAA4oE,IAAA5oE,KAAA6oE,IACA7oE,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA8oE,IAAA9oE,KAAA+oE,IAAApmD,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OACAjmE,KAAAmnB,SAAAk7C,OAAAriE,KAAAyoB,IAAAzoB,KAAA0oB,KACA1oB,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAAmnB,SAAAk7C,QAAAriE,KAAAyoB,IAAA,EAAAzoB,KAAA4oE,KAAA,GAAA5oE,KAAA0oB,IAAA,EAAA1oB,KAAA8oE,KAAA,GACA9oE,KAAAmnB,SAAAo7C,QAAAviE,KAAA4oE,IAAA,EAAA5oE,KAAAyoB,KAAA,GAAAzoB,KAAA8oE,IAAA,EAAA9oE,KAAA0oB,KAAA,GACA1oB,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAA6nB,MAAA7nB,KAAAyoB,IAAAzoB,KAAA0oB,KACA1oB,KAAA6nB,MAAA7nB,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAA6nB,MAAA7nB,KAAA6oE,IAAA7oE,KAAA+oE,OAKAlhD,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAAyoB,IAAAnR,EAAAtX,KAAA0oB,IAAAnR,CAA4B,MAC1D,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAA4oE,IAAAtxD,EAAAtX,KAAA8oE,IAAAvxD,CAA4B,MAC1D,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAA6oE,IAAAvxD,EAAAtX,KAAA+oE,IAAAxxD,EAA4BvX,KAAAmnB,SAAAk7C,QAAAriE,KAAA2gB,IAAA,EAAA3gB,KAAA6gB,IAAAvJ,GAAA,GAAAtX,KAAA4gB,IAAA,EAAA5gB,KAAA8gB,IAAAvJ,GAAA,EAA4F,MACtJ,SAAAsQ,GAAA7nB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAAvJ,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAAvJ,GAIA,IAAAyxD,IAAA,SAAA9hD,GACA,UAAAe,IAAAf,GAOAgB,IAAA1e,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IACA7gB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA6B,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,YACAhrD,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,CAA8B,IAAAtkD,IAAA3hB,KAAA2gB,IAAA,EAAA3gB,KAAA6gB,IAAAvJ,GAAA,EAAAsK,GAAA5hB,KAAA4gB,IAAA,EAAA5gB,KAAA8gB,IAAAvJ,GAAA,CAAoFvX,MAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAA5gD,EAAAC,GAAA5hB,KAAAmnB,SAAAk7C,OAAA1gD,EAAAC,EAA0E,MAC5L,QAAA5hB,KAAAimE,OAAA,CACA,SAAAp+C,GAAA7nB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAAvJ,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAAvJ,GAIA,IAAA0xD,IAAA,SAAA/hD,GACA,UAAAgB,IAAAhB,GAQAiB,IAAA3e,WACAuhD,UAAA,WACA/qD,KAAA+hB,MACA/hB,KAAAgiB,MACAhiB,KAAAqoB,OAAA0iC,aAEAC,QAAA,WACA,GAAA1zC,GAAAtX,KAAA+hB,GACAxK,EAAAvX,KAAAgiB,GACAT,EAAAjK,EAAAlN,OAAA,CAEA,IAAAmX,EAAA,EAQA,IAPA,GAKAnD,GALAuD,EAAArK,EAAA,GACAsK,EAAArK,EAAA,GACA4O,EAAA7O,EAAAiK,GAAAI,EACAyE,EAAA7O,EAAAgK,GAAAK,EACAte,OAGAA,GAAAie,GACAnD,EAAA9a,EAAAie,EACAvhB,KAAAqoB,OAAAR,MACA7nB,KAAAsoB,MAAAhR,EAAAhU,IAAA,EAAAtD,KAAAsoB,QAAA3G,EAAAvD,EAAA+H,GACAnmB,KAAAsoB,MAAA/Q,EAAAjU,IAAA,EAAAtD,KAAAsoB,QAAA1G,EAAAxD,EAAAgI,GAKApmB,MAAA+hB,GAAA/hB,KAAAgiB,GAAA,KACAhiB,KAAAqoB,OAAA2iC,WAEAnjC,MAAA,SAAAvQ,EAAAC,GACAvX,KAAA+hB,GAAAhP,MAAAuE,GACAtX,KAAAgiB,GAAAjP,MAAAwE,IAIA,IAAA2xD,IAAA,QAAA3I,IAAAn4C,GAEA,QAAA8gD,GAAAhiD,GACA,WAAAkB,EAAA,GAAAJ,IAAAd,GAAA,GAAAiB,IAAAjB,EAAAkB,GAOA,MAJA8gD,GAAA9gD,KAAA,SAAAA,GACA,MAAAm4C,KAAAn4C,IAGA8gD,GACC,IAkBDvgD,IAAAnf,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IACAzoB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA/F,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OAAAjmE,KAAAmnB,SAAAo7C,OAAAviE,KAAAyoB,IAAAzoB,KAAA0oB,IAAuD,MACvD,QAAAH,GAAAvoB,UAAA6gB,IAAA7gB,KAAA8gB,MAEA9gB,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAA6gB,IAAAvJ,EAAAtX,KAAA8gB,IAAAvJ,CAA4B,MAC1D,QAAAvX,KAAAimE,OAAA,CACA,SAAA19C,GAAAvoB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAA4xD,IAAA,QAAA5I,IAAA33C,GAEA,QAAAugD,GAAAjiD,GACA,UAAAyB,IAAAzB,EAAA0B,GAOA,MAJAugD,GAAAvgD,QAAA,SAAAA,GACA,MAAA23C,KAAA33C,IAGAugD,GACC,EAODtgD,IAAArf,WACAs8D,UAAA4C,GACA1C,QAAA0C,GACA3d,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAA4oE,IAAA5oE,KAAA6oE,IAAA7oE,KAAAopE,IACAppE,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA8oE,IAAA9oE,KAAA+oE,IAAA/oE,KAAAqpE,IAAA1mD,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OACAjmE,KAAAmnB,SAAAk7C,OAAAriE,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAAmnB,SAAAo7C,OAAAviE,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAA6nB,MAAA7nB,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAA6nB,MAAA7nB,KAAA6oE,IAAA7oE,KAAA+oE,KACA/oE,KAAA6nB,MAAA7nB,KAAAopE,IAAAppE,KAAAqpE,OAKAxhD,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA4oE,IAAAtxD,EAAAtX,KAAA8oE,IAAAvxD,CAA4B,MAC1D,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAAmnB,SAAAk7C,OAAAriE,KAAA6oE,IAAAvxD,EAAAtX,KAAA+oE,IAAAxxD,EAAkD,MAChF,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAAopE,IAAA9xD,EAAAtX,KAAAqpE,IAAA9xD,CAA4B,MAC1D,SAAAgR,GAAAvoB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAA+xD,IAAA,QAAA/I,IAAA33C,GAEA,QAAAugD,GAAAjiD,GACA,UAAA2B,IAAA3B,EAAA0B,GAOA,MAJAugD,GAAAvgD,QAAA,SAAAA,GACA,MAAA23C,KAAA33C,IAGAugD,GACC,EAODrgD,IAAAtf,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IACAzoB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA/F,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,YACAhrD,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAviE,KAAAyoB,IAAAzoB,KAAA0oB,KAAA1oB,KAAAmnB,SAAAk7C,OAAAriE,KAAAyoB,IAAAzoB,KAAA0oB,IAAkG,MAChI,QAAA1oB,KAAAimE,OAAA,CACA,SAAA19C,GAAAvoB,KAAAsX,EAAAC,GAEAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAAgyD,IAAA,QAAAhJ,IAAA33C,GAEA,QAAAugD,GAAAjiD,GACA,UAAA4B,IAAA5B,EAAA0B,GAOA,MAJAugD,GAAAvgD,QAAA,SAAAA,GACA,MAAA23C,KAAA33C,IAGAugD,GACC,EA8BD3/C,IAAAhgB,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IACAzoB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA/F,IACA3iB,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OAAAjmE,KAAAmnB,SAAAo7C,OAAAviE,KAAAyoB,IAAAzoB,KAAA0oB,IAAuD,MACvD,QAAA1oB,KAAA6nB,MAAA7nB,KAAAyoB,IAAAzoB,KAAA0oB,MAEA1oB,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAGA,GAFAD,KAAAC,KAEAvX,KAAAimE,OAAA,CACA,GAAAuD,GAAAxpE,KAAAyoB,IAAAnR,EACAmyD,EAAAzpE,KAAA0oB,IAAAnR,CACAvX,MAAAqpB,OAAAvd,KAAA+P,KAAA7b,KAAAspB,QAAAxd,KAAAgQ,IAAA0tD,IAAAC,IAAAzpE,KAAA0pB,SAGA,OAAA1pB,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,CACA,SAAAl9C,GAAA/oB,KAAAsX,EAAAC,GAGAvX,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAAmyD,IAAA,QAAAnJ,IAAA92C,GAEA,QAAAigD,GAAAxiD,GACA,MAAAuC,GAAA,GAAAD,IAAAtC,EAAAuC,GAAA,GAAAd,IAAAzB,EAAA,GAOA,MAJAwiD,GAAAjgD,MAAA,SAAAA,GACA,MAAA82C,KAAA92C,IAGAigD,GACC,GAOD//C,IAAAngB,WACAs8D,UAAA4C,GACA1C,QAAA0C,GACA3d,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAA4oE,IAAA5oE,KAAA6oE,IAAA7oE,KAAAopE,IACAppE,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA8oE,IAAA9oE,KAAA+oE,IAAA/oE,KAAAqpE,IAAA1mD,IACA3iB,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OACAjmE,KAAAmnB,SAAAk7C,OAAAriE,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAAmnB,SAAAo7C,OAAAviE,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAAmnB,SAAAm7C,WACA,MAEA,QACAtiE,KAAA6nB,MAAA7nB,KAAA4oE,IAAA5oE,KAAA8oE,KACA9oE,KAAA6nB,MAAA7nB,KAAA6oE,IAAA7oE,KAAA+oE,KACA/oE,KAAA6nB,MAAA7nB,KAAAopE,IAAAppE,KAAAqpE,OAKAxhD,MAAA,SAAAvQ,EAAAC,GAGA,GAFAD,KAAAC,KAEAvX,KAAAimE,OAAA,CACA,GAAAuD,GAAAxpE,KAAAyoB,IAAAnR,EACAmyD,EAAAzpE,KAAA0oB,IAAAnR,CACAvX,MAAAqpB,OAAAvd,KAAA+P,KAAA7b,KAAAspB,QAAAxd,KAAAgQ,IAAA0tD,IAAAC,IAAAzpE,KAAA0pB,SAGA,OAAA1pB,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA4oE,IAAAtxD,EAAAtX,KAAA8oE,IAAAvxD,CAA4B,MAC1D,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAAmnB,SAAAk7C,OAAAriE,KAAA6oE,IAAAvxD,EAAAtX,KAAA+oE,IAAAxxD,EAAkD,MAChF,QAAAvX,KAAAimE,OAAA,EAA8BjmE,KAAAopE,IAAA9xD,EAAAtX,KAAAqpE,IAAA9xD,CAA4B,MAC1D,SAAAwR,GAAA/oB,KAAAsX,EAAAC,GAGAvX,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAAoyD,IAAA,QAAApJ,IAAA92C,GAEA,QAAAigD,GAAAxiD,GACA,MAAAuC,GAAA,GAAAE,IAAAzC,EAAAuC,GAAA,GAAAZ,IAAA3B,EAAA,GAOA,MAJAwiD,GAAAjgD,MAAA,SAAAA,GACA,MAAA82C,KAAA92C,IAGAigD,GACC,GAOD9/C,IAAApgB,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAAyoB,IACAzoB,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA/F,IACA3iB,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAAimE,OAAA,GAEAjb,QAAA,YACAhrD,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GAGA,GAFAD,KAAAC,KAEAvX,KAAAimE,OAAA,CACA,GAAAuD,GAAAxpE,KAAAyoB,IAAAnR,EACAmyD,EAAAzpE,KAAA0oB,IAAAnR,CACAvX,MAAAqpB,OAAAvd,KAAA+P,KAAA7b,KAAAspB,QAAAxd,KAAAgQ,IAAA0tD,IAAAC,IAAAzpE,KAAA0pB,SAGA,OAAA1pB,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAviE,KAAAyoB,IAAAzoB,KAAA0oB,KAAA1oB,KAAAmnB,SAAAk7C,OAAAriE,KAAAyoB,IAAAzoB,KAAA0oB,IAAkG,MAChI,QAAA1oB,KAAAimE,OAAA,CACA,SAAAl9C,GAAA/oB,KAAAsX,EAAAC,GAGAvX,KAAAgpB,OAAAhpB,KAAAmpB,OAAAnpB,KAAAmpB,OAAAnpB,KAAAqpB,OACArpB,KAAAkpB,QAAAlpB,KAAAopB,QAAAppB,KAAAopB,QAAAppB,KAAAspB,QACAtpB,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAA7gB,KAAAyoB,IAAAzoB,KAAAyoB,IAAAnR,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAA9gB,KAAA0oB,IAAA1oB,KAAA0oB,IAAAnR,GAIA,IAAAqyD,IAAA,QAAArJ,IAAA92C,GAEA,QAAAigD,GAAAxiD,GACA,MAAAuC,GAAA,GAAAG,IAAA1C,EAAAuC,GAAA,GAAAX,IAAA5B,EAAA,GAOA,MAJAwiD,GAAAjgD,MAAA,SAAAA,GACA,MAAA82C,KAAA92C,IAGAigD,GACC,GAMD7/C,IAAArgB,WACAs8D,UAAA4C,GACA1C,QAAA0C,GACA3d,UAAA,WACA/qD,KAAAimE,OAAA,GAEAjb,QAAA,WACAhrD,KAAAimE,QAAAjmE,KAAAmnB,SAAAm7C,aAEAz6C,MAAA,SAAAvQ,EAAAC,GACAD,KAAAC,KACAvX,KAAAimE,OAAAjmE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,IACAvX,KAAAimE,OAAA,EAAAjmE,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,KAIA,IAAAsyD,IAAA,SAAA3iD,GACA,UAAA2C,IAAA3C,GA0CAuD,IAAAjhB,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA2gB,IAAA3gB,KAAA6gB,IACA7gB,KAAA4gB,IAAA5gB,KAAA8gB,IACA9gB,KAAA8pE,IAAAnnD,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,OAAAhrD,KAAAimE,QACA,OAAAjmE,KAAAmnB,SAAAo7C,OAAAviE,KAAA6gB,IAAA7gB,KAAA8gB,IAAuD,MACvD,QAAAwJ,GAAAtqB,UAAA8pE,IAAA1/C,GAAApqB,UAAA8pE,OAEA9pE,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,OAEAl+C,MAAA,SAAAvQ,EAAAC,GACA,GAAAiT,GAAA7H,GAGA,IADArL,KAAAC,KACAD,IAAAtX,KAAA6gB,KAAAtJ,IAAAvX,KAAA8gB,IAAA,CACA,OAAA9gB,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,CAA8B,MAC9B,QAAAjmE,KAAAimE,OAAA,EAA8B37C,GAAAtqB,KAAAoqB,GAAApqB,KAAAwqB,EAAAT,GAAA/pB,KAAAsX,EAAAC,IAAAiT,EAA0D,MACxF,SAAAF,GAAAtqB,UAAA8pE,IAAAt/C,EAAAT,GAAA/pB,KAAAsX,EAAAC,IAGAvX,KAAA2gB,IAAA3gB,KAAA6gB,IAAA7gB,KAAA6gB,IAAAvJ,EACAtX,KAAA4gB,IAAA5gB,KAAA8gB,IAAA9gB,KAAA8gB,IAAAvJ,EACAvX,KAAA8pE,IAAAt/C,MAQAE,GAAAlhB,UAAAkiB,OAAAC,OAAAlB,GAAAjhB,YAAAqe,MAAA,SAAAvQ,EAAAC,GACAkT,GAAAjhB,UAAAqe,MAAA3b,KAAAlM,KAAAuX,EAAAD,IAOAqT,GAAAnhB,WACA64D,OAAA,SAAA/qD,EAAAC,GAA0BvX,KAAAmnB,SAAAk7C,OAAA9qD,EAAAD,IAC1BgrD,UAAA,WAAyBtiE,KAAAmnB,SAAAm7C,aACzBC,OAAA,SAAAjrD,EAAAC,GAA0BvX,KAAAmnB,SAAAo7C,OAAAhrD,EAAAD,IAC1ByQ,cAAA,SAAAlG,EAAAC,EAAAgD,EAAAC,EAAAzN,EAAAC,GAAiDvX,KAAAmnB,SAAAY,cAAAjG,EAAAD,EAAAkD,EAAAD,EAAAvN,EAAAD,KAejDwT,GAAAthB,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA+hB,MACA/hB,KAAAgiB,OAEAgpC,QAAA,WACA,GAAA1zC,GAAAtX,KAAA+hB,GACAxK,EAAAvX,KAAAgiB,GACAxR,EAAA8G,EAAAlN,MAEA,IAAAoG,EAEA,GADAxQ,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAA,GAAAC,EAAA,IAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAA,GAAAC,EAAA,IACA,IAAA/G,EACAxQ,KAAAmnB,SAAAo7C,OAAAjrD,EAAA,GAAAC,EAAA,QAIA,QAFAwyD,GAAAh/C,GAAAzT,GACA0yD,EAAAj/C,GAAAxT,GACA4kC,EAAA,EAAAN,EAAA,EAAgCA,EAAArrC,IAAQ2rC,IAAAN,EACxC77C,KAAAmnB,SAAAY,cAAAgiD,EAAA,GAAA5tB,GAAA6tB,EAAA,GAAA7tB,GAAA4tB,EAAA,GAAA5tB,GAAA6tB,EAAA,GAAA7tB,GAAA7kC,EAAAukC,GAAAtkC,EAAAskC,KAKA77C,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAAv1D,IAAAxQ,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,MACA/lE,KAAA+hB,GAAA/hB,KAAAgiB,GAAA,MAEA6F,MAAA,SAAAvQ,EAAAC,GACAvX,KAAA+hB,GAAAhP,MAAAuE,GACAtX,KAAAgiB,GAAAjP,MAAAwE,IAuBA,IAAA0yD,IAAA,SAAA/iD,GACA,UAAA4D,IAAA5D,GAQA8D,IAAAxhB,WACAs8D,UAAA,WACA9lE,KAAA+lE,MAAA,GAEAC,QAAA,WACAhmE,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAA+hB,GAAA/hB,KAAAgiB,GAAAW,IACA3iB,KAAAimE,OAAA,GAEAjb,QAAA,WACA,EAAAhrD,KAAAirB,IAAAjrB,KAAAirB,GAAA,OAAAjrB,KAAAimE,QAAAjmE,KAAAmnB,SAAAo7C,OAAAviE,KAAA+hB,GAAA/hB,KAAAgiB,KACAhiB,KAAA+lE,OAAA,IAAA/lE,KAAA+lE,OAAA,IAAA/lE,KAAAimE,SAAAjmE,KAAAmnB,SAAAm7C,YACAtiE,KAAA+lE,OAAA,IAAA/lE,KAAAirB,GAAA,EAAAjrB,KAAAirB,GAAAjrB,KAAA+lE,MAAA,EAAA/lE,KAAA+lE,QAEAl+C,MAAA,SAAAvQ,EAAAC,GAEA,OADAD,KAAAC,KACAvX,KAAAimE,QACA,OAAAjmE,KAAAimE,OAAA,EAA8BjmE,KAAA+lE,MAAA/lE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,GAAAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,EAAsE,MACpG,QAAAvX,KAAAimE,OAAA,CACA,SACA,GAAAjmE,KAAAirB,IAAA,EACAjrB,KAAAmnB,SAAAo7C,OAAAviE,KAAA+hB,GAAAxK,GACAvX,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,OACS,CACT,GAAAsK,GAAA7hB,KAAA+hB,IAAA,EAAA/hB,KAAAirB,IAAA3T,EAAAtX,KAAAirB,EACAjrB,MAAAmnB,SAAAo7C,OAAA1gD,EAAA7hB,KAAAgiB,IACAhiB,KAAAmnB,SAAAo7C,OAAA1gD,EAAAtK,IAKAvX,KAAA+hB,GAAAzK,EAAAtX,KAAAgiB,GAAAzK,GAIA,IAAA3L,IAAA,SAAAsb,GACA,UAAA8D,IAAA9D,EAAA,KAWAgjD,GAAA7tD,MAAA7S,UAAAkM,MAEAy0D,GAAA,SAAA7+C,EAAAypB,GACA,IAAAvkC,EAAA8a,EAAAlhB,QAAA,EACA,OAAA8f,GAAA1Z,EAAAlN,EAAA,EAAA6mB,EAAAmB,EAAAypB,EAAA,IAAAxrB,EAAAY,EAAA/f,OAA8D9G,EAAAkN,IAAOlN,EAAA,CACrE4mB,EAAAC,IAAAmB,EAAAypB,EAAAzxC,GACA,QAAAie,GAAA,EAAmBA,EAAAgI,IAAOhI,EAC1B4I,EAAA5I,GAAA,IAAA4I,EAAA5I,GAAA,GAAAN,MAAAiJ,EAAA3I,GAAA,IAAA2I,EAAA3I,GAAA,GAAA2I,EAAA3I,GAAA,KAKA6oD,GAAA,SAAA9+C,GAEA,IADA,GAAA9a,GAAA8a,EAAAlhB,OAAAyT,EAAA,GAAAxB,OAAA7L,KACAA,GAAA,GAAAqN,EAAArN,IACA,OAAAqN,IAOAwsD,GAAA,WAMA,QAAAA,GAAAliE,GACA,GACA7E,GAIAgnE,EALAC,EAAArL,EAAAh9D,MAAAlC,KAAAmY,WAEAoR,EAAAphB,EAAAiC,OACAoG,EAAA+5D,EAAAngE,OACAogE,EAAA,GAAAnuD,OAAA7L,EAGA,KAAAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EAAA,CACtB,OAAAmnE,GAAAC,EAAAH,EAAAjnE,GAAAqnE,EAAAH,EAAAlnE,GAAA,GAAA+Y,OAAAkN,GAAAhI,EAAA,EAAiEA,EAAAgI,IAAOhI,EACxEopD,EAAAppD,GAAAkpD,GAAA,GAAAvyD,EAAA/P,EAAAoZ,GAAAmpD,EAAAnpD,EAAApZ,IACAsiE,EAAAtiE,OAAAoZ,EAEAopD,GAAAjtD,IAAAgtD,EAGA,IAAApnE,EAAA,EAAAgnE,EAAAv1B,EAAAy1B,GAA+BlnE,EAAAkN,IAAOlN,EACtCknE,EAAAF,EAAAhnE,IAAA2G,MAAA3G,CAIA,OADAqU,GAAA6yD,EAAAF,GACAE,EA1BA,GAAAtL,GAAA0F,OACA7vB,EAAAq1B,GACAzyD,EAAAwyD,GACAjyD,EAAAkT,EA0CA,OAhBAi/C,GAAAnL,KAAA,SAAA38D,GACA,MAAA4V,WAAA/N,QAAA80D,EAAA,kBAAA38D,KAAAqiE,GAAAsF,GAAAh+D,KAAA3J,IAAA8nE,GAAAnL,GAGAmL,EAAAnyD,MAAA,SAAA3V,GACA,MAAA4V,WAAA/N,QAAA8N,EAAA,kBAAA3V,KAAAqiE,IAAAriE,GAAA8nE,GAAAnyD,GAGAmyD,EAAAt1B,MAAA,SAAAxyC,GACA,MAAA4V,WAAA/N,QAAA2qC,EAAA,MAAAxyC,EAAA6nE,GAAA,kBAAA7nE,KAAAqiE,GAAAsF,GAAAh+D,KAAA3J,IAAA8nE,GAAAt1B,GAGAs1B,EAAA1yD,OAAA,SAAApV,GACA,MAAA4V,WAAA/N,QAAAuN,EAAA,MAAApV,EAAA4nE,GAAA5nE,EAAA8nE,GAAA1yD,GAGA0yD,GAGAO,GAAA,SAAAt/C,EAAAypB,GACA,IAAAvkC,EAAA8a,EAAAlhB,QAAA,GACA,OAAA9G,GAAAkN,EAAA+G,EAAAgK,EAAA,EAAAgI,EAAA+B,EAAA,GAAAlhB,OAAgDmX,EAAAgI,IAAOhI,EAAA,CACvD,IAAAhK,EAAAjU,EAAA,EAAmBA,EAAAkN,IAAOlN,EAAAiU,GAAA+T,EAAAhoB,GAAAie,GAAA,KAC1B,IAAAhK,EAAA,IAAAjU,EAAA,EAAsBA,EAAAkN,IAAOlN,EAAAgoB,EAAAhoB,GAAAie,GAAA,IAAAhK,EAE7B4yD,GAAA7+C,EAAAypB,KAGA81B,GAAA,SAAAv/C,EAAAypB,GACA,IAAAvkC,EAAA8a,EAAAlhB,QAAA,GACA,OAAAoG,GAAA+Q,EAAA,EAAA2I,EAAAoB,EAAAypB,EAAA,IAAAxrB,EAAAW,EAAA9f,OAA0DmX,EAAAgI,IAAOhI,EAAA,CACjE,OAAAje,GAAA,EAAAiU,EAAA,EAA0BjU,EAAAkN,IAAOlN,EAAAiU,GAAA+T,EAAAhoB,GAAAie,GAAA,KACjC2I,GAAA3I,GAAA,IAAA2I,EAAA3I,GAAA,IAAAhK,EAAA,EAEA4yD,GAAA7+C,EAAAypB,KAGA+1B,GAAA,SAAAx/C,EAAAypB,GACA,IAAAvkC,EAAA8a,EAAAlhB,QAAA,IAAAmf,GAAAW,EAAAoB,EAAAypB,EAAA,KAAA3qC,QAAA,GACA,OAAA8f,GAAAX,EAAA/Y,EAAA+G,EAAA,EAAAgK,EAAA,EAAkCA,EAAAgI,IAAOhI,EAAA,CACzC,OAAAje,GAAA,EAAA6mB,EAAA,EAAA4gD,EAAA,EAAmCznE,EAAAkN,IAAOlN,EAAA,CAK1C,OAJAqnE,GAAAr/C,EAAAypB,EAAAzxC,IACA0nE,EAAAL,EAAAppD,GAAA,MACA0pD,EAAAN,EAAAppD,EAAA,SACA2pD,GAAAF,EAAAC,GAAA,EACAj8C,EAAA,EAAqBA,EAAA1rB,IAAO0rB,EAAA,CAC5B,GAAA2qB,GAAAruB,EAAAypB,EAAA/lB,IACAm8C,EAAAxxB,EAAAp4B,GAAA,MACA6pD,EAAAzxB,EAAAp4B,EAAA,QACA2pD,IAAAC,EAAAC,EAEAjhD,GAAA6gD,EAAAD,GAAAG,EAAAF,EAEA9gD,EAAA3I,EAAA,OAAA2I,EAAA3I,EAAA,MAAAhK,EACA4S,IAAA5S,GAAAwzD,EAAA5gD,GAEAD,EAAA3I,EAAA,OAAA2I,EAAA3I,EAAA,MAAAhK,EACA4yD,GAAA7+C,EAAAypB,KAGAs2B,GAAA,SAAA//C,GACA,GAAAggD,GAAAhgD,EAAA7N,IAAA4N,GACA,OAAA++C,IAAA9+C,GAAAxU,KAAA,SAAA/I,EAAAC,GAA6C,MAAAs9D,GAAAv9D,GAAAu9D,EAAAt9D,MAS7Cu9D,GAAA,SAAAjgD,GACA,MAAA+/C,IAAA//C,GAAAoY,WAGA8nC,GAAA,SAAAlgD,GACA,GACAhoB,GACAie,EAFA/Q,EAAA8a,EAAAlhB,OAGAkhE,EAAAhgD,EAAA7N,IAAA4N,IACA0pB,EAAAq1B,GAAA9+C,GAAAxU,KAAA,SAAA/I,EAAAC,GAAkD,MAAAs9D,GAAAt9D,GAAAs9D,EAAAv9D,KAClDtC,EAAA,EACA6V,EAAA,EACAmqD,KACAC,IAEA,KAAApoE,EAAA,EAAaA,EAAAkN,IAAOlN,EACpBie,EAAAwzB,EAAAzxC,GACAmI,EAAA6V,GACA7V,GAAA6/D,EAAA/pD,GACAkqD,EAAA14D,KAAAwO,KAEAD,GAAAgqD,EAAA/pD,GACAmqD,EAAA34D,KAAAwO,GAIA,OAAAmqD,GAAAhoC,UAAA3P,OAAA03C,IAGA/nC,GAAA,SAAApY,GACA,MAAA8+C,IAAA9+C,GAAAoY,WAGAioC,GAAA,SAAA3pE,EAAAC,EAAAuH,GACAxH,EAAAwH,UAAAvH,EAAAuH,YACAA,EAAAxH,eAWA4pE,GAAA,GACAC,GAAA,EAAAD,GAEA3/C,GAAA,mBACAG,GAAA,mBACAE,GAAA,8DACAC,GAAA,+FACAC,GAAA,0FACAE,GAAA,2HACAC,GAAA,8FACAE,GAAA,0HAEAC;AACAg/C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAxY,IAAA,SACAyY,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGArJ,IAAA//C,GAAAC,IACAopD,YAAA,WACA,MAAAj1E,MAAAitB,MAAAgoD,eAEAh0C,SAAA,WACA,MAAAjhC,MAAAitB,MAAA,MA+CA0+C,GAAAx/C,GAAAc,GAAAnmB,GAAA8kB,IACAigD,SAAA,SAAA78C,GAEA,MADAA,GAAA,MAAAA,EAAA68C,GAAA//D,KAAAgQ,IAAA+vD,GAAA78C,GACA,GAAA7C,IAAAnsB,KAAAoa,EAAA4U,EAAAhvB,KAAA+sB,EAAAiC,EAAAhvB,KAAAgO,EAAAghB,EAAAhvB,KAAAuR,UAEAq6D,OAAA,SAAA58C,GAEA,MADAA,GAAA,MAAAA,EAAA48C,GAAA9/D,KAAAgQ,IAAA8vD,GAAA58C,GACA,GAAA7C,IAAAnsB,KAAAoa,EAAA4U,EAAAhvB,KAAA+sB,EAAAiC,EAAAhvB,KAAAgO,EAAAghB,EAAAhvB,KAAAuR,UAEA0b,IAAA,WACA,MAAAjtB,OAEAi1E,YAAA,WACA,UAAAj1E,KAAAoa,GAAApa,KAAAoa,GAAA,KACA,GAAApa,KAAA+sB,GAAA/sB,KAAA+sB,GAAA,KACA,GAAA/sB,KAAAgO,GAAAhO,KAAAgO,GAAA,KACA,GAAAhO,KAAAuR,SAAAvR,KAAAuR,SAAA,GAEA0vB,SAAA,WACA,GAAAlzB,GAAA/N,KAAAuR,OACA,OADyBxD,GAAAkT,MAAAlT,GAAA,EAAAjC,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,EAAAtB,KACzB,IAAAA,EAAA,gBACAjC,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,IAAAvD,KAAA6O,MAAA3a,KAAAoa,IAAA,SACAtO,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,IAAAvD,KAAA6O,MAAA3a,KAAA+sB,IAAA,SACAjhB,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,IAAAvD,KAAA6O,MAAA3a,KAAAgO,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAgDA49D,GAAAz+C,GAAAE,GAAAtmB,GAAA8kB,IACAigD,SAAA,SAAA78C,GAEA,MADAA,GAAA,MAAAA,EAAA68C,GAAA//D,KAAAgQ,IAAA+vD,GAAA78C,GACA,GAAA9B,IAAAltB,KAAAqqB,EAAArqB,KAAAwrB,EAAAxrB,KAAA0W,EAAAsY,EAAAhvB,KAAAuR,UAEAq6D,OAAA,SAAA58C,GAEA,MADAA,GAAA,MAAAA,EAAA48C,GAAA9/D,KAAAgQ,IAAA8vD,GAAA58C,GACA,GAAA9B,IAAAltB,KAAAqqB,EAAArqB,KAAAwrB,EAAAxrB,KAAA0W,EAAAsY,EAAAhvB,KAAAuR,UAEA0b,IAAA,WACA,GAAA5C,GAAArqB,KAAAqqB,EAAA,SAAArqB,KAAAqqB,EAAA,GACAmB,EAAAvK,MAAAoJ,IAAApJ,MAAAjhB,KAAAwrB,GAAA,EAAAxrB,KAAAwrB,EACA9U,EAAA1W,KAAA0W,EACA6W,EAAA7W,KAAA,GAAAA,EAAA,EAAAA,GAAA8U,EACA8B,EAAA,EAAA5W,EAAA6W,CACA,WAAApB,IACAkB,GAAAhD,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAiD,EAAAC,GACAF,GAAAhD,EAAAiD,EAAAC,GACAF,GAAAhD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAiD,EAAAC,GACAvtB,KAAAuR,UAGA0jE,YAAA,WACA,UAAAj1E,KAAAwrB,GAAAxrB,KAAAwrB,GAAA,GAAAvK,MAAAjhB,KAAAwrB,KACA,GAAAxrB,KAAA0W,GAAA1W,KAAA0W,GAAA,GACA,GAAA1W,KAAAuR,SAAAvR,KAAAuR,SAAA,KAYA,IAAAoc,IAAA7hB,KAAA8O,GAAA,IACA4T,GAAA,IAAA1iB,KAAA8O,GAEAs6D,GAAA,GACApnD,GAAA,OACAC,GAAA,EACAE,GAAA,QACA1D,GAAA,KACAC,GAAA,KACA4D,GAAA,EAAA5D,MACA2D,GAAA3D,QA6BAmhD,IAAAl+C,GAAAS,GAAApnB,GAAA8kB,IACAigD,SAAA,SAAA78C,GACA,UAAAvB,IAAAztB,KAAA0W,EAAAw+D,IAAA,MAAAlmD,EAAA,EAAAA,GAAAhvB,KAAA+N,EAAA/N,KAAAgO,EAAAhO,KAAAuR,UAEAq6D,OAAA,SAAA58C,GACA,UAAAvB,IAAAztB,KAAA0W,EAAAw+D,IAAA,MAAAlmD,EAAA,EAAAA,GAAAhvB,KAAA+N,EAAA/N,KAAAgO,EAAAhO,KAAAuR,UAEA0b,IAAA,WACA,GAAA1V,IAAAvX,KAAA0W,EAAA,QACAY,EAAA2J,MAAAjhB,KAAA+N,GAAAwJ,IAAAvX,KAAA+N,EAAA,IACAigB,EAAA/M,MAAAjhB,KAAAgO,GAAAuJ,IAAAvX,KAAAgO,EAAA,GAIA,OAHAuJ,GAAAwW,GAAAM,GAAA9W,GACAD,EAAAwW,GAAAO,GAAA/W,GACA0W,EAAAC,GAAAI,GAAAL,GACA,GAAA7B,IACAmC,GAAA,UAAAhX,EAAA,UAAAC,EAAA,SAAAyW,GACAM,YAAAhX,EAAA,UAAAC,EAAA,QAAAyW,GACAM,GAAA,SAAAhX,EAAA,SAAAC,EAAA,UAAAyW,GACAhuB,KAAAuR,aAuCAo6D,GAAAj+C,GAAAe,GAAA3nB,GAAA8kB,IACAigD,SAAA,SAAA78C,GACA,UAAAtB,IAAA1tB,KAAAqqB,EAAArqB,KAAAiO,EAAAjO,KAAA0W,EAAAw+D,IAAA,MAAAlmD,EAAA,EAAAA,GAAAhvB,KAAAuR,UAEAq6D,OAAA,SAAA58C,GACA,UAAAtB,IAAA1tB,KAAAqqB,EAAArqB,KAAAiO,EAAAjO,KAAA0W,EAAAw+D,IAAA,MAAAlmD,EAAA,EAAAA,GAAAhvB,KAAAuR,UAEA0b,IAAA,WACA,MAAAO,IAAAxtB,MAAAitB,SAIA,IAAA8Q,YACAC,GAAA,QACA9O,WACA5I,WACA2I,GAAA,QACAJ,GAAAI,GAAA3I,GACAwI,GAAAG,GAAA+O,GACApP,GAAAoP,GAAA9O,GAAA5I,GAAAyX,EA2BA4tC,IAAAh9C,GAAAQ,GAAAroB,GAAA8kB,IACAigD,SAAA,SAAA78C,GAEA,MADAA,GAAA,MAAAA,EAAA68C,GAAA//D,KAAAgQ,IAAA+vD,GAAA78C,GACA,GAAAL,IAAA3uB,KAAAqqB,EAAArqB,KAAAwrB,EAAAxrB,KAAA0W,EAAAsY,EAAAhvB,KAAAuR,UAEAq6D,OAAA,SAAA58C,GAEA,MADAA,GAAA,MAAAA,EAAA48C,GAAA9/D,KAAAgQ,IAAA8vD,GAAA58C,GACA,GAAAL,IAAA3uB,KAAAqqB,EAAArqB,KAAAwrB,EAAAxrB,KAAA0W,EAAAsY,EAAAhvB,KAAAuR,UAEA0b,IAAA,WACA,GAAA5C,GAAApJ,MAAAjhB,KAAAqqB,GAAA,GAAArqB,KAAAqqB,EAAA,KAAAsD,GACAjX,GAAA1W,KAAA0W,EACA3I,EAAAkT,MAAAjhB,KAAAwrB,GAAA,EAAAxrB,KAAAwrB,EAAA9U,GAAA,EAAAA,GACAkc,EAAA9mB,KAAA8S,IAAAyL,GACAyI,EAAAhnB,KAAAiT,IAAAsL,EACA,WAAA8B,IACA,KAAAzV,EAAA3I,GAAAgwB,GAAAnL,EAAAoL,GAAAlL,IACA,KAAApc,EAAA3I,GAAAmhB,GAAA0D,EAAAtM,GAAAwM,IACA,KAAApc,EAAA3I,GAAAkhB,GAAA2D,IACA5yB,KAAAuR,YAaA,IA4QAgf,IACAC,GACAE,GACAQ,GA/QAikD,GAAA,SAAApxC,GACA,GAAAvzB,GAAAuzB,EAAA35B,OAAA,CACA,iBAAAgU,GACA,GAAA9a,GAAA8a,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAA5N,EAAA,GAAA1E,KAAAyG,MAAA6L,EAAA5N,GACA8e,EAAAyU,EAAAzgC,GACAisB,EAAAwU,EAAAzgC,EAAA,GACA+rB,EAAA/rB,EAAA,EAAAygC,EAAAzgC,EAAA,KAAAgsB,EAAAC,EACAC,EAAAlsB,EAAAkN,EAAA,EAAAuzB,EAAAzgC,EAAA,KAAAisB,EAAAD,CACA,OAAAF,KAAAhR,EAAA9a,EAAAkN,KAAA6e,EAAAC,EAAAC,EAAAC,KAIA4lD,GAAA,SAAArxC,GACA,GAAAvzB,GAAAuzB,EAAA35B,MACA,iBAAAgU,GACA,GAAA9a,GAAAwI,KAAAyG,QAAA6L,GAAA,OAAAA,KAAA5N,GACA6e,EAAA0U,GAAAzgC,EAAAkN,EAAA,GAAAA,GACA8e,EAAAyU,EAAAzgC,EAAAkN,GACA+e,EAAAwU,GAAAzgC,EAAA,GAAAkN,GACAgf,EAAAuU,GAAAzgC,EAAA,GAAAkN,EACA,OAAA4e,KAAAhR,EAAA9a,EAAAkN,KAAA6e,EAAAC,EAAAC,EAAAC,KAIAI,GAAA,SAAAtY,GACA,kBACA,MAAAA,KAgCA+9D,GAAA,QAAAC,IAAA/9D,GAGA,QAAAg+D,GAAA34D,EAAAvI,GACA,GAAA+F,GAAA8V,GAAAtT,EAAAqQ,GAAArQ,IAAAxC,GAAA/F,EAAA4Y,GAAA5Y,IAAA+F,GACA2S,EAAAmD,EAAAtT,EAAAmQ,EAAA1Y,EAAA0Y,GACA/e,EAAAkiB,EAAAtT,EAAA5O,EAAAqG,EAAArG,GACAuD,EAAA2e,EAAAtT,EAAArL,QAAA8C,EAAA9C,QACA,iBAAA6M,GAKA,MAJAxB,GAAAxC,IAAAgE,GACAxB,EAAAmQ,IAAA3O,GACAxB,EAAA5O,IAAAoQ,GACAxB,EAAArL,UAAA6M,GACAxB,EAAA,IAZA,GAAAsT,GAAAL,GAAAtY,EAkBA,OAFAg+D,GAAA1lD,MAAAylD,GAEAC,GACC,GA4BDC,GAAAzlD,GAAAolD,IACAM,GAAA1lD,GAAAqlD,IAEAM,GAAA,SAAA3nE,EAAAC,GACA,GAIA1K,GAJAqyE,EAAA3nE,IAAA5D,OAAA,EACAwrE,EAAA7nE,EAAAjC,KAAAuD,IAAAsmE,EAAA5nE,EAAA3D,QAAA,EACAkN,EAAA,GAAA+E,OAAAs5D,GACA1nE,EAAA,GAAAoO,OAAAs5D,EAGA,KAAAryE,EAAA,EAAaA,EAAAsyE,IAAQtyE,EAAAgU,EAAAhU,GAAAyhC,GAAAh3B,EAAAzK,GAAA0K,EAAA1K,GACrB,MAAQA,EAAAqyE,IAAQryE,EAAA2K,EAAA3K,GAAA0K,EAAA1K,EAEhB,iBAAA8a,GACA,IAAA9a,EAAA,EAAeA,EAAAsyE,IAAQtyE,EAAA2K,EAAA3K,GAAAgU,EAAAhU,GAAA8a,EACvB,OAAAnQ,KAIA6oB,GAAA,SAAA/oB,EAAAC,GACA,GAAAyO,GAAA,GAAAsa,KACA,OAAAhpB,MAAAC,GAAAD,EAAA,SAAAqQ,GACA,MAAA3B,GAAA0a,QAAAppB,EAAAC,EAAAoQ,GAAA3B,IAIA0V,GAAA,SAAApkB,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAqQ,GACA,MAAArQ,GAAAC,EAAAoQ,IAIAZ,GAAA,SAAAzP,EAAAC,GACA,GAEAghB,GAFA1rB,KACA2K,IAGA,QAAAF,GAAA,gBAAAA,WACA,OAAAC,GAAA,gBAAAA,UAEA,KAAAghB,IAAAhhB,GACAghB,IAAAjhB,GACAzK,EAAA0rB,GAAA+V,GAAAh3B,EAAAihB,GAAAhhB,EAAAghB,IAEA/gB,EAAA+gB,GAAAhhB,EAAAghB,EAIA,iBAAA5Q,GACA,IAAA4Q,IAAA1rB,GAAA2K,EAAA+gB,GAAA1rB,EAAA0rB,GAAA5Q,EACA,OAAAnQ,KAIA4nE,GAAA,8CACAC,GAAA,GAAAt0C,QAAAq0C,GAAA/wC,OAAA,KAcAixC,GAAA,SAAAhoE,EAAAC,GACA,GACAgoE,GACAC,EACAC,EAHAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAIA9yE,KACAkoB,KACA9H,IAMA,KAHA3V,GAAA,GAAAC,GAAA,IAGAgoE,EAAAH,GAAA3pD,KAAAne,MACAkoE,EAAAH,GAAA5pD,KAAAle,MACAkoE,EAAAD,EAAAhsE,OAAAksE,IACAD,EAAAloE,EAAA0H,MAAAygE,EAAAD,GACA1qD,EAAAloB,GAAAkoB,EAAAloB,IAAA4yE,EACA1qD,IAAAloB,GAAA4yE,IAEAF,IAAA,OAAAC,IAAA,IACAzqD,EAAAloB,GAAAkoB,EAAAloB,IAAA2yE,EACAzqD,IAAAloB,GAAA2yE,GAEAzqD,IAAAloB,GAAA,KACAogB,EAAA3Q,MAAczP,IAAAgU,EAAA6a,GAAA6jD,EAAAC,MAEdE,EAAAL,GAAAM,SAYA,OARAD,GAAAnoE,EAAA5D,SACA8rE,EAAAloE,EAAA0H,MAAAygE,GACA3qD,EAAAloB,GAAAkoB,EAAAloB,IAAA4yE,EACA1qD,IAAAloB,GAAA4yE,GAKA1qD,EAAAphB,OAAA,EAAAsZ,EAAA,GACA0M,GAAA1M,EAAA,GAAApM,GACA6Y,GAAAniB,IACAA,EAAA0V,EAAAtZ,OAAA,SAAAgU,GACA,OAAAP,GAAAva,EAAA,EAA4BA,EAAA0K,IAAO1K,EAAAkoB,GAAA3N,EAAA6F,EAAApgB,OAAAua,EAAAvG,EAAA8G,EACnC,OAAAoN,GAAAmH,KAAA,OAIAoS,GAAA,SAAAh3B,EAAAC,GACA,GAAAC,GAAAmQ,QAAApQ,EACA,cAAAA,GAAA,YAAAoQ,EAAAwR,GAAA5hB,IACA,WAAAoQ,EAAA+T,GACA,WAAA/T,GAAAnQ,EAAA4d,GAAA7d,OAAAC,EAAAonE,IAAAU,GACA/nE,YAAA6d,IAAAwpD,GACArnE,YAAA+oB,MAAAD,GACAza,MAAAuB,QAAA5P,GAAA0nE,GACAz0D,MAAAjT,GAAAwP,GACA2U,IAAApkB,EAAAC,IAGA03B,GAAA,SAAA33B,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAqQ,GACA,MAAAtS,MAAA6O,MAAA5M,EAAAC,EAAAoQ,KAIAi4D,GAAA,IAAAvqE,KAAA8O,GAEA0V,IACAiC,WAAA,EACAC,WAAA,EACAJ,OAAA,EACAC,MAAA,EACAI,OAAA,EACAC,OAAA,GAGA1B,GAAA,SAAAjjB,EAAAC,EAAAC,EAAAwO,EAAAkH,EAAAnH,GACA,GAAAiW,GAAAC,EAAAL,CAKA,QAJAI,EAAA3mB,KAAA+P,KAAA9N,IAAAC,QAAAD,GAAA0kB,EAAAzkB,GAAAykB,IACAJ,EAAAtkB,EAAAE,EAAAD,EAAAyO,KAAAxO,GAAAF,EAAAskB,EAAA5V,GAAAzO,EAAAqkB,IACAK,EAAA5mB,KAAA+P,KAAA5N,IAAAwO,QAAAxO,GAAAykB,EAAAjW,GAAAiW,EAAAL,GAAAK,GACA3kB,EAAA0O,EAAAzO,EAAAC,IAAAF,KAAAC,KAAAqkB,KAAAI,OAEAF,WAAA5O,EACA6O,WAAAhW,EACA4V,OAAAtmB,KAAA4O,MAAA1M,EAAAD,GAAAsoE,GACAhkD,MAAAvmB,KAAAisD,KAAA1lC,GAAAgkD,GACA5jD,SACAC,WAsFA4jD,GAAA9kD,GAAAnB,GAAA,qBACAkmD,GAAA/kD,GAAAP,GAAA,cAEAulD,GAAA1qE,KAAA2qE,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAAnpB,EAAA/V,GACA,GAKAr0C,GACAg2B,EANAw9C,EAAAppB,EAAA,GAAAqpB,EAAArpB,EAAA,GAAArG,EAAAqG,EAAA,GACAspB,EAAAr/B,EAAA,GAAAs/B,EAAAt/B,EAAA,GAAA4P,EAAA5P,EAAA,GACAxxB,EAAA6wD,EAAAF,EACA1wD,EAAA6wD,EAAAF,EACA1wD,EAAAF,IAAAC,GAKA,IAAAC,EAAAuwD,GACAt9C,EAAAxtB,KAAAvL,IAAAgnD,EAAAF,GAAAmvB,GACAlzE,EAAA,SAAA8a,GACA,OACA04D,EAAA14D,EAAA+H,EACA4wD,EAAA34D,EAAAgI,EACAihC,EAAAv7C,KAAA+mB,IAAA2jD,GAAAp4D,EAAAkb,SAMA,CACA,GAAArC,GAAAnrB,KAAA+P,KAAAwK,GACA1G,GAAA4nC,IAAAF,IAAAsvB,GAAAtwD,IAAA,EAAAghC,EAAAqvB,GAAAz/C,GACAvX,GAAA6nC,IAAAF,IAAAsvB,GAAAtwD,IAAA,EAAAkhC,EAAAmvB,GAAAz/C,GACA0N,EAAA74B,KAAAvL,IAAAuL,KAAA+P,KAAA8D,IAAA,GAAAA,GACA4F,EAAAzZ,KAAAvL,IAAAuL,KAAA+P,KAAA6D,IAAA,GAAAA,EACA4Z,IAAA/T,EAAAof,GAAA6xC,GACAlzE,EAAA,SAAA8a,GACA,GAAAoN,GAAApN,EAAAkb,EACA49C,EAAAtkD,GAAA+R,GACA+B,EAAA2gB,GAAAqvB,GAAAz/C,IAAAigD,EAAAnkD,GAAAyjD,GAAAhrD,EAAAmZ,GAAA7R,GAAA6R,GACA,QACAmyC,EAAApwC,EAAAvgB,EACA4wD,EAAArwC,EAAAtgB,EACAihC,EAAA6vB,EAAAtkD,GAAA4jD,GAAAhrD,EAAAmZ,KAOA,MAFArhC,GAAAqI,SAAA,IAAA2tB,EAEAh2B,GAmBA6zE,GAAAnkD,GAAArD,IACAynD,GAAApkD,GAAAlD,IAgCAunD,GAAAlkD,GAAAxD,IACA2nD,GAAAnkD,GAAArD,IA0BAynD,GAAAnkD,GAAAzD,IACA6nD,GAAApkD,GAAAtD,IAEA2nD,GAAA,SAAAzuC,EAAAx4B,GAEA,OADAknE,GAAA,GAAAr7D,OAAA7L,GACAlN,EAAA,EAAiBA,EAAAkN,IAAOlN,EAAAo0E,EAAAp0E,GAAA0lC,EAAA1lC,GAAAkN,EAAA,GACxB,OAAAknE,IAGA5jD,IAAc5b,MAAA,aAuBdsb,IAAAhqB,UAAA+pB,GAAA/pB,WACAxH,YAAAwxB,GACAzzB,GAAA,SAAAyqC,EAAAl/B,GACA,GAEA8S,GAFA7b,EAAAvC,KAAAuC,EACA21D,EAAAzkC,GAAA+W,EAAA,GAAAjoC,GAEAe,KACAkN,EAAA0nD,EAAA9tD,MAGA,OAAA+N,UAAA/N,OAAA,IAOA,SAAAkB,GAAA,kBAAAA,GAAA,SAAAyX,OAAA,qBAAAzX,EACA,QAAAhI,EAAAkN,GACA,GAAA4N,GAAAosB,EAAA0tB,EAAA50D,IAAAsT,KAAArU,EAAA6b,GAAAyV,GAAAtxB,EAAA6b,GAAAosB,EAAA5W,KAAAtoB,OACA,UAAAA,EAAA,IAAA8S,IAAA7b,KAAA6b,GAAAyV,GAAAtxB,EAAA6b,GAAAosB,EAAA5W,KAAA,KAGA,OAAA5zB,MAZA,OAAAsD,EAAAkN,GAAA,IAAA4N,GAAAosB,EAAA0tB,EAAA50D,IAAAsT,QAAAwH,EAAA3P,GAAAlM,EAAA6b,GAAAosB,EAAA5W,OAAA,MAAAxV,KAcAyE,KAAA,WACA,GAAAA,MAAiBtgB,EAAAvC,KAAAuC,CACjB,QAAA6b,KAAA7b,GAAAsgB,EAAAzE,GAAA7b,EAAA6b,GAAA1I,OACA,WAAA8d,IAAA3Q,IAEA3W,KAAA,SAAA0K,EAAAkR,GACA,IAAAtX,EAAA2H,UAAA/N,OAAA,YAAAoG,GAAA4N,EAAAhC,EAAA,GAAAC,OAAA7L,GAAAlN,EAAA,EAAkFA,EAAAkN,IAAOlN,EAAA8Y,EAAA9Y,GAAA6U,UAAA7U,EAAA,EACzF,KAAAtD,KAAAuC,EAAA+M,eAAAsH,GAAA,SAAAmM,OAAA,iBAAAnM,EACA,KAAAwH,EAAApe,KAAAuC,EAAAqU,GAAAtT,EAAA,EAAAkN,EAAA4N,EAAAhU,OAA+C9G,EAAAkN,IAAOlN,EAAA8a,EAAA9a,GAAA4U,MAAAhW,MAAA4lB,EAAA1L,IAEtDla,MAAA,SAAA0U,EAAAkR,EAAA1L,GACA,IAAApc,KAAAuC,EAAA+M,eAAAsH,GAAA,SAAAmM,OAAA,iBAAAnM,EACA,QAAAwH,GAAApe,KAAAuC,EAAAqU,GAAAtT,EAAA,EAAAkN,EAAA4N,EAAAhU,OAAmD9G,EAAAkN,IAAOlN,EAAA8a,EAAA9a,GAAA4U,MAAAhW,MAAA4lB,EAAA1L,IAoD1D,IAkUA4Z,IACAO,GAnUAohD,GAAA,SAAAC,GAIA,QAAAnmD,GAAAluB,EAAAiZ,GACA,GAAAq7D,GAAA5jD,EAAA5vB,EAAAyzE,EAAAv0E,EAAA,SAAAiL,EAAAlL,GACA,MAAAu0E,KAAArpE,EAAAlL,EAAA,IACA2wB,EAAAzlB,OAAAqpE,EAAAr7D,EAAA6X,GAAA7lB,EAAAgO,GAAAwX,GAAAxlB,MAGA,OADAnK,GAAA4vB,UACA5vB,EAGA,QAAAyzE,GAAAv0E,EAAAiZ,GAUA,QAAAu7D,KACA,GAAA55C,GAAAigB,EAAA,MAAA45B,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAAjqE,GAAAsT,EAAA4c,CACA,SAAA56B,EAAA42B,WAAA5Y,GAAA,CAEA,IADA,GAAAje,GAAAie,EACAje,IAAA86C,GACA,QAAA76C,EAAA42B,WAAA72B,GAAA,CACA,QAAAC,EAAA42B,WAAA72B,EAAA,WACAA,EAWA,MARA66B,GAAA76B,EAAA,EACA2K,EAAA1K,EAAA42B,WAAA72B,EAAA,GACA,KAAA2K,GACAgqE,GAAA,EACA,KAAA10E,EAAA42B,WAAA72B,EAAA,MAAA66B,GACS,KAAAlwB,IACTgqE,GAAA,GAEA10E,EAAAmS,MAAA6L,EAAA,EAAAje,GAAA+9B,QAAA,WAIA,KAAAlD,EAAAigB,GAAA,CACA,GAAApvB,GAAA,CAEA,IADA/gB,EAAA1K,EAAA42B,WAAAgE,KACA,KAAAlwB,EAAAgqE,GAAA,MACA,SAAAhqE,EAA4BgqE,GAAA,EAAY,KAAA10E,EAAA42B,WAAAgE,WAAAnP,OACxC,IAAA/gB,IAAAkqE,EAAA,QACA,OAAA50E,GAAAmS,MAAA6L,EAAA4c,EAAAnP,GAIA,MAAAzrB,GAAAmS,MAAA6L,GAGA,IAhDA,GAMAnD,GACA65D,EAPAC,KACAF,KACA3zE,KACA+5C,EAAA76C,EAAA6G,OACA+zB,EAAA,EACA3tB,EAAA,GA2CA4N,EAAA25D,OAAAC,GAAA,CAEA,IADA,GAAAjqE,MACAqQ,IAAA85D,GAAA95D,IAAA45D,GACAjqE,EAAAgF,KAAAqL,GACAA,EAAA25D,GAEAv7D,IAAA,OAAAzO,EAAAyO,EAAAzO,EAAAyC,OACAnM,EAAA0O,KAAAhF,GAGA,MAAA1J,GAGA,QAAAynB,GAAAznB,EAAA4vB,GAEA,MADA,OAAAA,MAAAK,GAAAjwB,KACA4vB,EAAAxW,IAAA26D,GAAAzlD,KAAAilD,IAAA7jD,OAAA1vB,EAAAoZ,IAAA,SAAAjP,GACA,MAAAylB,GAAAxW,IAAA,SAAAgX,GACA,MAAA2jD,GAAA5pE,EAAAimB,MACO9B,KAAAilD,MACFjlD,KAAA,MAGL,QAAA0lD,GAAAh0E,GACA,MAAAA,GAAAoZ,IAAA66D,GAAA3lD,KAAA,MAGA,QAAA2lD,GAAA9pE,GACA,MAAAA,GAAAiP,IAAA26D,GAAAzlD,KAAAilD,GAGA,QAAAQ,GAAA70E,GACA,aAAAA,EAAA,GACAg1E,EAAAvrE,KAAAzJ,GAAA,QAAAA,EAAA89B,QAAA,gBACA99B,EA9FA,GAAAg1E,GAAA,GAAA/2C,QAAA,KAAAo2C,EAAA,OACAO,EAAAP,EAAAz9C,WAAA,EAgGA,QACA1I,QACAqmD,YACAhsD,SACAusD,eAIAG,GAAAb,GAAA,KAEAc,GAAAD,GAAA/mD,MACAinD,GAAAF,GAAAV,UACAa,GAAAH,GAAA1sD,OACA8sD,GAAAJ,GAAAH,WAEAQ,GAAAlB,GAAA,MAEAmB,GAAAD,GAAApnD,MACAsnD,GAAAF,GAAAf,UACAkB,GAAAH,GAAA/sD,OACAmtD,GAAAJ,GAAAR,WAEAa,GAAA,SAAAC,EAAA7tE,GAqBA,QAAA8tE,GAAAv7D,GACA,GAAAk2C,GAAAslB,EAAA1kD,EAAA0kD,MACA,KAAAA,GAAAzkD,GAAAD,IACA0kD,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAvkD,EACA,IACAi/B,EAAAj/B,EAAA5oB,KAAAgtE,EAAAvkD,GACS,MAAAhR,GAET,WADAjU,GAAAxD,KAAA,QAAAgtE,EAAAv1D,OAIAowC,GAAAp/B,CAEAjlB,GAAAxD,KAAA,OAAAgtE,EAAAnlB,OAEArkD,GAAAxD,KAAA,QAAAgtE,EAAAr7D,GArCA,GAAAq7D,GAEAI,EAKAxkD,EACAD,EAPAnlB,EAAA6jB,GAAA,wCAEAgmD,EAAAh8D,IACAoX,EAAA,GAAA6kD,gBACAC,EAAA,KACAC,EAAA,KAGAvjD,EAAA,CAsHA,IAnHA,mBAAAwjD,iBACA,mBAAAhlD,KACA,oBAAA3nB,KAAAmsE,KAAAxkD,EAAA,GAAAglD,iBAEA,UAAAhlD,GACAA,EAAAxf,OAAAwf,EAAAvf,QAAAuf,EAAAilD,UAAAR,EACAzkD,EAAAklD,mBAAA,SAAAh8D,GAA8C8W,EAAAmlD,WAAA,GAAAV,EAAAv7D,IAuB9C8W,EAAAolD,WAAA,SAAAp2D,GACAjU,EAAAxD,KAAA,WAAAgtE,EAAAv1D,IAGAu1D,GACAc,OAAA,SAAApmD,EAAA1b,GAEA,MADA0b,MAAA,IAAA5H,cACA7T,UAAA/N,OAAA,EAAAmvE,EAAA9qE,IAAAmlB,IACA,MAAA1b,EAAAqhE,EAAAnoE,OAAAwiB,GACA2lD,EAAA57D,IAAAiW,EAAA1b,EAAA,IACAghE,IAIAI,SAAA,SAAAphE,GACA,MAAAC,WAAA/N,QACAkvE,EAAA,MAAAphE,EAAA,KAAAA,EAAA,GACAghE,GAFAI,GAOAzkD,aAAA,SAAA3c,GACA,MAAAC,WAAA/N,QACAyqB,EAAA3c,EACAghE,GAFArkD,GAKAsB,QAAA,SAAAje,GACA,MAAAC,WAAA/N,QACA+rB,GAAAje,EACAghE,GAFA/iD,GAKAsjD,KAAA,SAAAvhE,GACA,MAAAC,WAAA/N,OAAA,EAAAqvE,KAAA,MAAAvhE,EAAA,KAAAA,EAAA,GAAAghE,IAGAQ,SAAA,SAAAxhE,GACA,MAAAC,WAAA/N,OAAA,EAAAsvE,KAAA,MAAAxhE,EAAA,KAAAA,EAAA,GAAAghE,IAKApkD,SAAA,SAAA5c,GAEA,MADA4c,GAAA5c,EACAghE,GAIAzqE,IAAA,SAAAtG,EAAAmD,GACA,MAAA4tE,GAAAe,KAAA,MAAA9xE,EAAAmD,IAIA4uE,KAAA,SAAA/xE,EAAAmD,GACA,MAAA4tE,GAAAe,KAAA,OAAA9xE,EAAAmD,IAIA2uE,KAAA,SAAAE,EAAAhyE,EAAAmD,GAYA,MAXAqpB,GAAAylD,KAAAD,EAAAhB,GAAA,EAAAM,EAAAC,GACA,MAAAJ,GAAAC,EAAAh2C,IAAA,WAAAg2C,EAAA57D,IAAA,SAAA27D,EAAA,QACA3kD,EAAA0lD,kBAAAd,EAAA1uE,KAAA,SAAAqN,EAAA0b,GAAoEe,EAAA0lD,iBAAAzmD,EAAA1b,KACpE,MAAAohE,GAAA3kD,EAAA2lD,kBAAA3lD,EAAA2lD,iBAAAhB,GACA,MAAAzkD,IAAAF,EAAAE,gBACAsB,EAAA,IAAAxB,EAAAwB,WACA,MAAA7qB,GAAA,kBAAAnD,KAAAmD,EAAAnD,IAAA,MACA,MAAAmD,GAAA,IAAAA,EAAAlB,SAAAkB,EAAAopB,GAAAppB,IACA,MAAAA,GAAA4tE,EAAAn5E,GAAA,QAAAuL,GAAAvL,GAAA,gBAAA40B,GAAoFrpB,EAAA,KAAAqpB,KACpFjlB,EAAAxD,KAAA,aAAAgtE,EAAAvkD,GACAA,EAAAslD,KAAA,MAAA9xE,EAAA,KAAAA,GACA+wE,GAGAt1D,MAAA,WAEA,MADA+Q,GAAA/Q,QACAs1D,GAGAn5E,GAAA,WACA,GAAAmY,GAAAxI,EAAA3P,GAAAmC,MAAAwN,EAAAyI,UACA,OAAAD,KAAAxI,EAAAwpE,EAAAhhE,IAIA,MAAA5M,EAAA,CACA,qBAAAA,GAAA,SAAAyX,OAAA,qBAAAzX,EACA,OAAA4tE,GAAAzqE,IAAAnD,GAGA,MAAA4tE,IAgBAtiE,GAAA,SAAA2jE,EAAAzlD,GACA,gBAAAqkD,EAAA7tE,GACA,GAAA8O,GAAA8+D,GAAAC,GAAAG,SAAAiB,GAAAzlD,WACA,UAAAxpB,EAAA,CACA,qBAAAA,GAAA,SAAAyX,OAAA,qBAAAzX,EACA,OAAA8O,GAAA3L,IAAAnD,GAEA,MAAA8O,KAIAogE,GAAA5jE,GAAA,qBAAA+d,GACA,MAAArsB,UAAAmyE,cAAAC,yBAAA/lD,EAAAI,gBAGA4lD,GAAA/jE,GAAA,4BAAA+d,GACA,MAAAR,MAAA1C,MAAAkD,EAAAI,gBAGAxxB,GAAAqT,GAAA,sBAAA+d,GACA,MAAAA,GAAAI,eAGA6lD,GAAAhkE,GAAA,2BAAA+d,GACA,GAAAimD,GAAAjmD,EAAAkmD,WACA,KAAAD,EAAA,SAAA73D,OAAA,cACA,OAAA63D,KAGAE,GAAA,SAAAP,EAAA9oD,GACA,gBAAA0nD,EAAA3qE,EAAAlD,GACA6M,UAAA/N,OAAA,IAAAkB,EAAAkD,IAAA,KACA,IAAA4L,GAAA8+D,GAAAC,GAAAG,SAAAiB,EAGA,OAFAngE,GAAA5L,IAAA,SAAAjM,GAAyB,MAAA4V,WAAA/N,OAAAgQ,EAAA0a,SAAAE,GAAAvD,EAAAjjB,EAAAjM,IAAAiM,GACzB4L,EAAA5L,OACAlD,EAAA8O,EAAA3L,IAAAnD,GAAA8O,IAUA2gE,GAAAD,GAAA,WAAArC,IAEAuC,GAAAF,GAAA,4BAAAhC,IAEA/iD,GAAA,EACAI,GAAA,EACAM,GAAA,EACAH,GAAA,IAGAJ,GAAA,EACAhB,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAA4lD,0BAAApvE,IAAAovE,YAAAlkD,KACA5B,GAAA,kBAAA+lD,6CAAA,SAAA1+D,GAAkG9b,WAAA8b,EAAA,IAgBlG+Y,IAAA/rB,UAAAksB,GAAAlsB,WACAxH,YAAAuzB,GACAM,QAAA,SAAAvqB,EAAAqqB,EAAAC,GACA,qBAAAtqB,GAAA,SAAA6vE,WAAA,6BACAvlD,IAAA,MAAAA,EAAA/pB,MAAA+pB,IAAA,MAAAD,EAAA,GAAAA,GACA31B,KAAAy1B,OAAAc,KAAAv2B,OACAu2B,MAAAd,MAAAz1B,KACAg2B,GAAAh2B,KACAu2B,GAAAv2B,MAEAA,KAAAijB,MAAA3X,EACAtL,KAAAw1B,MAAAI,EACAY,MAEA3Z,KAAA,WACA7c,KAAAijB,QACAjjB,KAAAijB,MAAA,KACAjjB,KAAAw1B,MAAApT,IACAoU,OAmEA,IAAAma,IAAA,SAAArlC,EAAAqqB,EAAAC,GACA,GAAAxX,GAAA,GAAAmX,GAMA,OALAI,GAAA,MAAAA,EAAA,GAAAA,EACAvX,EAAAyX,QAAA,SAAA0a,GACAnyB,EAAAvB,OACAvR,EAAAilC,EAAA5a,IACGA,EAAAC,GACHxX,GAGAg9D,GAAA,SAAA9vE,EAAAqqB,EAAAC,GACA,GAAAxX,GAAA,GAAAmX,IAAA8lD,EAAA1lD,CACA,cAAAA,GAAAvX,EAAAyX,QAAAvqB,EAAAqqB,EAAAC,GAAAxX,IACAuX,KAAAC,EAAA,MAAAA,EAAA/pB,MAAA+pB,EACAxX,EAAAyX,QAAA,QAAAib,GAAAP,GACAA,GAAA8qC,EACAj9D,EAAAyX,QAAAib,EAAAuqC,GAAA1lD,EAAAC,GACAtqB,EAAAilC,IACG5a,EAAAC,GACHxX,IAGAgZ,GAAA,GAAAL,MACAM,GAAA,GAAAN,MA6DAukD,GAAA5kD,GAAA,aAEC,SAAAI,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,IACC,SAAAgR,EAAAvI,GACD,MAAAA,GAAAuI,GAIA0+D,IAAAhkD,MAAA,SAAAtI,GAEA,MADAA,GAAAljB,KAAAyG,MAAAyc,GACAuI,SAAAvI,MAAA,EACAA,EAAA,EACA0H,GAAA,SAAAI,GACAA,EAAAK,QAAArrB,KAAAyG,MAAAukB,EAAA9H,OACG,SAAA8H,EAAAlrB,GACHkrB,EAAAK,SAAAL,EAAAlrB,EAAAojB,IACG,SAAApS,EAAAvI,GACH,OAAAA,EAAAuI,GAAAoS,IANAssD,GADA,KAWA,IAAAC,IAAAD,GAAApkD,MAEAskD,GAAA,IACA1jD,GAAA,IACA2jD,GAAA,KACAC,GAAA,MACA3jD,GAAA,OAEA4jD,GAAAjlD,GAAA,SAAAI,GACAA,EAAAK,QAAArrB,KAAAyG,MAAAukB,EAAA0kD,SACC,SAAA1kD,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,EAAA4vE,KACC,SAAA5+D,EAAAvI,GACD,OAAAA,EAAAuI,GAAA4+D,IACC,SAAA1kD,GACD,MAAAA,GAAAyL,kBAGAq5C,GAAAD,GAAAzkD,MAEA2kD,GAAAnlD,GAAA,SAAAI,GACAA,EAAAK,QAAArrB,KAAAyG,MAAAukB,EAAAgB,SACC,SAAAhB,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,EAAAksB,KACC,SAAAlb,EAAAvI,GACD,OAAAA,EAAAuI,GAAAkb,IACC,SAAAhB,GACD,MAAAA,GAAAgL,eAGAg6C,GAAAD,GAAA3kD,MAEA6kD,GAAArlD,GAAA,SAAAI,GACA,GAAAnf,GAAAmf,EAAAe,oBAAAC,GAAA2jD,EACA9jE,GAAA,IAAAA,GAAA8jE,IACA3kD,EAAAK,QAAArrB,KAAAyG,QAAAukB,EAAAnf,GAAA8jE,OAAA9jE,IACC,SAAAmf,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,EAAA6vE,KACC,SAAA7+D,EAAAvI,GACD,OAAAA,EAAAuI,GAAA6+D,IACC,SAAA3kD,GACD,MAAAA,GAAAiG,aAGAi/C,GAAAD,GAAA7kD,MAEAyK,GAAAjL,GAAA,SAAAI,GACAA,EAAAc,SAAA,UACC,SAAAd,EAAAlrB,GACDkrB,EAAAW,QAAAX,EAAAY,UAAA9rB,IACC,SAAAgR,EAAAvI,GACD,OAAAA,EAAAuI,GAAAvI,EAAAwjB,oBAAAjb,EAAAib,qBAAAC,IAAA4jD,IACC,SAAA5kD,GACD,MAAAA,GAAAY,UAAA,IAGA+F,GAAAkE,GAAAzK,MAaA8K,GAAAxK,GAAA,GACAyK,GAAAzK,GAAA,GACAykD,GAAAzkD,GAAA,GACA0kD,GAAA1kD,GAAA,GACA2kD,GAAA3kD,GAAA,GACA4kD,GAAA5kD,GAAA,GACA6kD,GAAA7kD,GAAA,GAEA8kD,GAAAt6C,GAAA9K,MACAqlD,GAAAt6C,GAAA/K,MACAslD,GAAAP,GAAA/kD,MACAulD,GAAAP,GAAAhlD,MACAwlD,GAAAP,GAAAjlD,MACAylD,GAAAP,GAAAllD,MACA0lD,GAAAP,GAAAnlD,MAEA2lD,GAAAnmD,GAAA,SAAAI,GACAA,EAAAW,QAAA,GACAX,EAAAc,SAAA,UACC,SAAAd,EAAAlrB,GACDkrB,EAAAgmD,SAAAhmD,EAAA4F,WAAA9wB,IACC,SAAAgR,EAAAvI,GACD,MAAAA,GAAAqoB,WAAA9f,EAAA8f,WAAA,IAAAroB,EAAA6tB,cAAAtlB,EAAAslB,gBACC,SAAApL,GACD,MAAAA,GAAA4F,aAGAiB,GAAAk/C,GAAA3lD,MAEA0K,GAAAlL,GAAA,SAAAI,GACAA,EAAAgmD,SAAA,KACAhmD,EAAAc,SAAA,UACC,SAAAd,EAAAlrB,GACDkrB,EAAA0C,YAAA1C,EAAAoL,cAAAt2B,IACC,SAAAgR,EAAAvI,GACD,MAAAA,GAAA6tB,cAAAtlB,EAAAslB,eACC,SAAApL,GACD,MAAAA,GAAAoL,eAIAN,IAAAtK,MAAA,SAAAtI,GACA,MAAAuI,UAAAvI,EAAAljB,KAAAyG,MAAAyc,OAAA,EAAA0H,GAAA,SAAAI,GACAA,EAAA0C,YAAA1tB,KAAAyG,MAAAukB,EAAAoL,cAAAlT,MACA8H,EAAAgmD,SAAA,KACAhmD,EAAAc,SAAA,UACG,SAAAd,EAAAlrB,GACHkrB,EAAA0C,YAAA1C,EAAAoL,cAAAt2B,EAAAojB,KALA,KASA,IAAA+tD,IAAAn7C,GAAA1K,MAEA8lD,GAAAtmD,GAAA,SAAAI,GACAA,EAAAmmD,cAAA,MACC,SAAAnmD,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,EAAAksB,KACC,SAAAlb,EAAAvI,GACD,OAAAA,EAAAuI,GAAAkb,IACC,SAAAhB,GACD,MAAAA,GAAAwL,kBAGA46C,GAAAF,GAAA9lD,MAEAimD,GAAAzmD,GAAA,SAAAI,GACAA,EAAAsmD,cAAA,QACC,SAAAtmD,EAAAlrB,GACDkrB,EAAAK,SAAAL,EAAAlrB,EAAA6vE,KACC,SAAA7+D,EAAAvI,GACD,OAAAA,EAAAuI,GAAA6+D,IACC,SAAA3kD,GACD,MAAAA,GAAAwG,gBAGA+/C,GAAAF,GAAAjmD,MAEAiL,GAAAzL,GAAA,SAAAI,GACAA,EAAAsB,YAAA,UACC,SAAAtB,EAAAlrB,GACDkrB,EAAAmB,WAAAnB,EAAAoB,aAAAtsB,IACC,SAAAgR,EAAAvI,GACD,OAAAA,EAAAuI,GAAA8+D,IACC,SAAA5kD,GACD,MAAAA,GAAAoB,aAAA,IAGAolD,GAAAn7C,GAAAjL,MAaAsL,GAAAxK,GAAA,GACAyK,GAAAzK,GAAA,GACAulD,GAAAvlD,GAAA,GACAwlD,GAAAxlD,GAAA,GACAylD,GAAAzlD,GAAA,GACA0lD,GAAA1lD,GAAA,GACA2lD,GAAA3lD,GAAA,GAEA4lD,GAAAp7C,GAAAtL,MACA2mD,GAAAp7C,GAAAvL,MACA4mD,GAAAP,GAAArmD,MACA6mD,GAAAP,GAAAtmD,MACA8mD,GAAAP,GAAAvmD,MACA+mD,GAAAP,GAAAxmD,MACAgnD,GAAAP,GAAAzmD,MAEAinD,GAAAznD,GAAA,SAAAI,GACAA,EAAAmB,WAAA,GACAnB,EAAAsB,YAAA,UACC,SAAAtB,EAAAlrB,GACDkrB,EAAAsnD,YAAAtnD,EAAAqG,cAAAvxB,IACC,SAAAgR,EAAAvI,GACD,MAAAA,GAAA8oB,cAAAvgB,EAAAugB,cAAA,IAAA9oB,EAAAquB,iBAAA9lB,EAAA8lB,mBACC,SAAA5L,GACD,MAAAA,GAAAqG,gBAGAkhD,GAAAF,GAAAjnD,MAEAkL,GAAA1L,GAAA,SAAAI,GACAA,EAAAsnD,YAAA,KACAtnD,EAAAsB,YAAA,UACC,SAAAtB,EAAAlrB,GACDkrB,EAAA6C,eAAA7C,EAAA4L,iBAAA92B,IACC,SAAAgR,EAAAvI,GACD,MAAAA,GAAAquB,iBAAA9lB,EAAA8lB,kBACC,SAAA5L,GACD,MAAAA,GAAA4L,kBAIAN,IAAA9K,MAAA,SAAAtI,GACA,MAAAuI,UAAAvI,EAAAljB,KAAAyG,MAAAyc,OAAA,EAAA0H,GAAA,SAAAI,GACAA,EAAA6C,eAAA7tB,KAAAyG,MAAAukB,EAAA4L,iBAAA1T,MACA8H,EAAAsnD,YAAA,KACAtnD,EAAAsB,YAAA,UACG,SAAAtB,EAAAlrB,GACHkrB,EAAA6C,eAAA7C,EAAA4L,iBAAA92B,EAAAojB,KALA,KASA,IAuDAsvD,IAvDAC,GAAAn8C,GAAAlL,MAKAsnD,GAAA,SAAAlnE,EAAA8P,GACA,IAAA9jB,GAAAgU,EAAA8P,EAAA9P,EAAAmnE,cAAAr3D,EAAA,GAAA9P,EAAAmnE,iBAAAxjE,QAAA,mBACA,IAAA3X,GAAAo7E,EAAApnE,EAAA5B,MAAA,EAAApS,EAIA,QACAo7E,EAAAt0E,OAAA,EAAAs0E,EAAA,GAAAA,EAAAhpE,MAAA,GAAAgpE,GACApnE,EAAA5B,MAAApS,EAAA,KAIAq7E,GAAA,SAAArnE,GACA,MAAAA,GAAAknE,GAAA1yE,KAAAuH,IAAAiE,QAAA,GAAAqL,KAGAi8D,GAAA,SAAAC,EAAAC,GACA,gBAAA5mE,EAAAjY,GAOA,IANA,GAAAqD,GAAA4U,EAAA9N,OACAgU,KACAmD,EAAA,EACAwL,EAAA8xD,EAAA,GACAz0E,EAAA,EAEA9G,EAAA,GAAAypB,EAAA,IACA3iB,EAAA2iB,EAAA,EAAA9sB,IAAA8sB,EAAAjhB,KAAA+G,IAAA,EAAA5S,EAAAmK,IACAgU,EAAArL,KAAAmF,EAAA6mE,UAAAz7E,GAAAypB,EAAAzpB,EAAAypB,OACA3iB,GAAA2iB,EAAA,GAAA9sB,KACA8sB,EAAA8xD,EAAAt9D,KAAA,GAAAs9D,EAAAz0E,OAGA,OAAAgU,GAAAslB,UAAA/Q,KAAAmsD,KAIAE,GAAA,SAAA1nE,EAAA8P,GACA9P,IAAA2nE,YAAA73D,EAEA83D,GAAA,OAAArjC,GAAArrC,EAAA8G,EAAAlN,OAAA9G,EAAA,EAAA64C,KAAiD74C,EAAAkN,IAAOlN,EACxD,OAAAgU,EAAAhU,IACA,QAAA64C,EAAAN,EAAAv4C,CAA4B,MAC5B,aAAA64C,MAAA74C,GAAqCu4C,EAAAv4C,CAAQ,MAC7C,cAAA47E,EACA,SAAA/iC,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAA7kC,EAAA5B,MAAA,EAAAymC,GAAA7kC,EAAA5B,MAAAmmC,EAAA,GAAAvkC,GAKA6nE,GAAA,SAAA7nE,EAAA8P,GACA,GAAA3K,GAAA+hE,GAAAlnE,EAAA8P,EACA,KAAA3K,EAAA,MAAAnF,GAAA,EACA,IAAAonE,GAAAjiE,EAAA,GACAmqB,EAAAnqB,EAAA,GACAnZ,EAAAsjC,GAAA03C,GAAA,EAAAxyE,KAAA+G,OAAA/G,KAAAuD,IAAA,EAAAvD,KAAAyG,MAAAq0B,EAAA,QACAp2B,EAAAkuE,EAAAt0E,MACA,OAAA9G,KAAAkN,EAAAkuE,EACAp7E,EAAAkN,EAAAkuE,EAAA,GAAAriE,OAAA/Y,EAAAkN,EAAA,GAAAmiB,KAAA,KACArvB,EAAA,EAAAo7E,EAAAhpE,MAAA,EAAApS,GAAA,IAAAo7E,EAAAhpE,MAAApS,GACA,QAAA+Y,OAAA,EAAA/Y,GAAAqvB,KAAA,KAAA6rD,GAAAlnE,EAAAxL,KAAA+G,IAAA,EAAAuU,EAAA9jB,EAAA,QAGA87E,GAAA,SAAA9nE,EAAA8P,GACA,GAAA3K,GAAA+hE,GAAAlnE,EAAA8P,EACA,KAAA3K,EAAA,MAAAnF,GAAA,EACA,IAAAonE,GAAAjiE,EAAA,GACAmqB,EAAAnqB,EAAA,EACA,OAAAmqB,GAAA,UAAAvqB,SAAAuqB,IAAAjU,KAAA,KAAA+rD,EACAA,EAAAt0E,OAAAw8B,EAAA,EAAA83C,EAAAhpE,MAAA,EAAAkxB,EAAA,OAAA83C,EAAAhpE,MAAAkxB,EAAA,GACA83C,EAAA,GAAAriE,OAAAuqB,EAAA83C,EAAAt0E,OAAA,GAAAuoB,KAAA,MAGAkG,IACAwmD,GAAAL,GACA9/C,IAAA,SAAA5nB,EAAA8P,GAAuB,WAAA9P,GAAAgoE,QAAAl4D,IACvBpZ,EAAA,SAAAsJ,GAAoB,MAAAxL,MAAA6O,MAAArD,GAAA2pB,SAAA,IACpBhzB,EAAA,SAAAqJ,GAAoB,MAAAA,GAAA,IACpBmF,EAAA,SAAAnF,GAAoB,MAAAxL,MAAA6O,MAAArD,GAAA2pB,SAAA,KACpBtd,EAAA,SAAArM,EAAA8P,GAAuB,MAAA9P,GAAAmnE,cAAAr3D,IACvB5K,EAAA,SAAAlF,EAAA8P,GAAuB,MAAA9P,GAAAgoE,QAAAl4D,IACvB2F,EAAA,SAAAzV,EAAA8P,GAAuB,MAAA9P,GAAA2nE,YAAA73D,IACvBvJ,EAAA,SAAAvG,GAAoB,MAAAxL,MAAA6O,MAAArD,GAAA2pB,SAAA,IACpB7Z,EAAA,SAAA9P,EAAA8P,GAAuB,MAAAg4D,IAAA,IAAA9nE,EAAA8P,IACvBhN,EAAAglE,GACA5zD,EAAA2zD,GACAtgD,EAAA,SAAAvnB,GAAoB,MAAAxL,MAAA6O,MAAArD,GAAA2pB,SAAA,IAAAs+C,eACpBjoE,EAAA,SAAAA,GAAoB,MAAAxL,MAAA6O,MAAArD,GAAA2pB,SAAA,MAIpB1I,GAAA,wEAEAinD,GAAA,SAAAlnD,GACA,UAAAD,IAAAC,GAqCAD,IAAA7uB,UAAAy3B,SAAA,WACA,MAAAjhC,MAAAw4B,KACAx4B,KAAAy4B,MACAz4B,KAAA8pB,KACA9pB,KAAA04B,QACA14B,KAAAmwB,KAAA,SACA,MAAAnwB,KAAAC,MAAA,GAAA6L,KAAA+G,IAAA,IAAA7S,KAAAC,SACAD,KAAA24B,MAAA,SACA,MAAA34B,KAAA44B,UAAA,OAAA9sB,KAAA+G,IAAA,IAAA7S,KAAA44B,YACA54B,KAAA4W,KAGA,IAwIAoiB,IAxIAymD,IAAA,oEAMAxmD,GAAA,SAAAa,GAKA,QAAAC,GAAAzB,GAgCA,QAAAxM,GAAA5T,GACA,GAEA5U,GAAAkN,EAAAvC,EAFAyxE,EAAA1gB,EACA2gB,EAAAC,CAGA,UAAAhpE,EACA+oE,EAAAE,EAAA3nE,GAAAynE,EACAznE,EAAA,OACO,CACPA,IAIA,IAAA4nE,IAAA5nE,EAAA,KAAAA,EAAA,KAAAA,OAAA,EAOA,IAJAA,EAAA2nE,EAAA3nE,EAAA0gB,GAIAknD,EAGA,IAFAx8E,KAAAkN,EAAA0H,EAAA9N,OACA01E,GAAA,IACAx8E,EAAAkN,GACA,GAAAvC,EAAAiK,EAAAiiB,WAAA72B,GAAA,GAAA2K,KAAA,IACA,MAAA2I,GAAA,GAAA3I,KAAA,KACA,MAAA2I,GAAA,GAAA3I,KAAA,IACA6xE,GAAA,CACA,OAWA,GALAJ,GAAAI,EAAA,MAAAh2D,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAA41D,EACAC,KAAA,MAAA/oE,EAAA6oE,GAAA,EAAAnB,GAAA,QAAAwB,GAAA,MAAAh2D,EAAA,QAIAi2D,EAEA,IADAz8E,KAAAkN,EAAA0H,EAAA9N,SACA9G,EAAAkN,GACA,GAAAvC,EAAAiK,EAAAiiB,WAAA72B,GAAA,GAAA2K,KAAA,IACA0xE,GAAA,KAAA1xE,EAAA+xE,EAAA9nE,EAAAxC,MAAApS,EAAA,GAAA4U,EAAAxC,MAAApS,IAAAq8E,EACAznE,IAAAxC,MAAA,EAAApS,EACA,QAOAq1B,IAAAxI,IAAAjY,EAAA4xB,EAAA5xB,EAAAkK,KAGA,IAAAhY,GAAAs1E,EAAAt1E,OAAA8N,EAAA9N,OAAAu1E,EAAAv1E,OACAsN,EAAAtN,EAAAnK,EAAA,GAAAoc,OAAApc,EAAAmK,EAAA,GAAAuoB,KAAA6F,GAAA,EAMA,QAHAG,GAAAxI,IAAAjY,EAAA4xB,EAAApyB,EAAAQ,EAAAR,EAAAtN,OAAAnK,EAAA0/E,EAAAv1E,OAAAgY,KAAA1K,EAAA,IAGA+gB,GACA,cAAAinD,GAAAxnE,EAAAynE,EAAAjoE,CACA,eAAAgoE,GAAAhoE,EAAAQ,EAAAynE,CACA,eAAAjoE,GAAAhC,MAAA,EAAAtL,EAAAsN,EAAAtN,QAAA,GAAAs1E,EAAAxnE,EAAAynE,EAAAjoE,EAAAhC,MAAAtL,GAEA,MAAAsN,GAAAgoE,EAAAxnE,EAAAynE,EAlGArnD,EAAAknD,GAAAlnD,EAEA,IAAAE,GAAAF,EAAAE,KACAC,EAAAH,EAAAG,MACA3O,EAAAwO,EAAAxO,KACA4O,EAAAJ,EAAAI,OACAvI,EAAAmI,EAAAnI,KACAlwB,EAAAq4B,EAAAr4B,MACA04B,EAAAL,EAAAK,MACAC,EAAAN,EAAAM,UACAhiB,EAAA0hB,EAAA1hB,KAIAooD,EAAA,MAAAtmC,EAAAunD,EAAA,SAAAvnD,GAAA,SAAA1rB,KAAA4J,GAAA,IAAAA,EAAAoV,cAAA,GACA4zD,EAAA,MAAAlnD,EAAAunD,EAAA,UAAAjzE,KAAA4J,GAAA,OAKAipE,EAAAhnD,GAAAjiB,GACAmpE,GAAAnpE,GAAA,aAAA5J,KAAA4J,EAoFA,OA9EAgiB,GAAA,MAAAA,EAAAhiB,EAAA,KACA,SAAA5J,KAAA4J,GAAA9K,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,GAAAupB,IACA9sB,KAAA+G,IAAA,EAAA/G,KAAAuD,IAAA,GAAAupB,IAwEA9M,EAAAmV,SAAA,WACA,MAAA3I,GAAA,IAGAxM,EAGA,QAAAoN,GAAAZ,EAAApgB,GACA,GAAAsE,GAAAud,GAAAzB,EAAAknD,GAAAlnD,KAAA1hB,KAAA,IAAA0hB,IACA3U,EAAA,EAAA7X,KAAA+G,OAAA/G,KAAAuD,IAAA,EAAAvD,KAAAyG,MAAAosE,GAAAzmE,GAAA,KACA8W,EAAAljB,KAAAgQ,IAAA,IAAA6H,GACAq7C,EAAAygB,GAAA,EAAA97D,EAAA,EACA,iBAAAzL,GACA,MAAAsE,GAAAwS,EAAA9W,GAAA8mD,GAvHA,GAAAl1B,GAAAhQ,EAAA+kD,UAAA/kD,EAAAglD,UAAAF,GAAA9kD,EAAA+kD,SAAA/kD,EAAAglD,WAAAhmD,GACAmnD,EAAAnmD,EAAAmmD,SACAD,EAAAlmD,EAAAkmD,OAyHA,QACAl0D,OAAAiO,EACAb,gBAQAH,KACAinD,QAAA,IACAlB,UAAA,IACAD,UAAA,GACAoB,UAAA,SAUA,IA6hBAr9C,IA7hBAs9C,GAAA,SAAAt0E,GACA,MAAAE,MAAA+G,IAAA,GAAA8rE,GAAA7yE,KAAAuH,IAAAzH,MAGAu0E,GAAA,SAAAv0E,EAAAsM,GACA,MAAApM,MAAA+G,IAAA,IAAA/G,KAAA+G,OAAA/G,KAAAuD,IAAA,EAAAvD,KAAAyG,MAAAosE,GAAAzmE,GAAA,KAAAymE,GAAA7yE,KAAAuH,IAAAzH,MAGAw0E,GAAA,SAAAx0E,EAAAiH,GAEA,MADAjH,GAAAE,KAAAuH,IAAAzH,GAAAiH,EAAA/G,KAAAuH,IAAAR,GAAAjH,EACAE,KAAA+G,IAAA,EAAA8rE,GAAA9rE,GAAA8rE,GAAA/yE,IAAA,GA4TAwuB,IAAYimD,IAAA,GAAA99E,EAAA,IAAA+9E,EAAA,KACZ7+C,GAAA,UACAC,GAAA,KACAJ,GAAA,iCA0NAqB,KACApF,SAAA,SACAzG,KAAA,aACAlB,KAAA,eACA4H,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAA2iD,IAAA,wBAMAC,GAAAzpD,KAAAvtB,UAAAw5B,YACAD,GACAvjC,EAAA0hC,UAAAq/C,IAOAE,IAAA,GAAA1pD,MAAA,4BACAkM,GACAzjC,EAAA2hC,SAAAo/C,IAEAG,GAAArkE,MAAA7S,UAEAg8B,GAAAk7C,GAAAjjE,IACA6lB,GAAAo9C,GAAAhrE,MAEA0tB,IAAgBxP,KAAA,YA+IhByQ,GAAA,SAAA/sB,GACA,kBACA,MAAAA,KAIAmuB,GAAA,SAAAnuB,GACA,OAAAA,GAGAguB,IAAA,KA4GAO,GAAA,SAAAxC,EAAAvmB,EAAAwb,GACA,GAGAM,GAHAhc,EAAAymB,EAAA,GACAxmB,EAAAwmB,IAAAj5B,OAAA,GACAwB,EAAA+Q,EAAAC,EAAAC,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADAwb,EAAAknD,GAAA,MAAAlnD,EAAA,KAAAA,GACAA,EAAA1hB,MACA,QACA,GAAAsB,GAAApM,KAAA+G,IAAA/G,KAAAuH,IAAAuJ,GAAA9Q,KAAAuH,IAAAwJ,GAEA,OADA,OAAAyb,EAAAM,WAAA3X,MAAA2X,EAAAunD,GAAAv0E,EAAAsM,MAAAogB,EAAAM,aACAp5B,EAAA05B,aAAAZ,EAAApgB,EAEA,QACA,QACA,QACA,QACA,QACA,MAAAogB,EAAAM,WAAA3X,MAAA2X,EAAAwnD,GAAAx0E,EAAAE,KAAA+G,IAAA/G,KAAAuH,IAAAuJ,GAAA9Q,KAAAuH,IAAAwJ,QAAAyb,EAAAM,aAAA,MAAAN,EAAA1hB,MACA,MAEA,SACA,QACA,MAAA0hB,EAAAM,WAAA3X,MAAA2X,EAAAsnD,GAAAt0E,MAAA0sB,EAAAM,YAAA,SAAAN,EAAA1hB,OAIA,MAAApX,GAAAssB,OAAAwM,IAkEAwN,GAAA,SAAAzC,EAAA5M,GACA4M,IAAA3tB,OAEA,IAIA0I,GAJA+9B,EAAA,EACAN,EAAAxY,EAAAj5B,OAAA,EACAuX,EAAA0hB,EAAA8Y,GACAt6B,EAAAwhB,EAAAwY,EAUA,OAPAh6B,GAAAF,IACAvD,EAAA+9B,IAAAN,IAAAz9B,EACAA,EAAAuD,IAAAE,IAAAzD,GAGAilB,EAAA8Y,GAAA1lB,EAAAlkB,MAAAoP,GACA0hB,EAAAwY,GAAAplB,EAAA1qB,KAAA8V,GACAwhB,GA4RAmF,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHA/S,GAAA,WACA,MAAA0R,IAAA1F,GAAAi7C,GAAA76C,GAAAL,GAAAo6C,GAAAF,GAAAF,GAAAL,GAAA97E,EAAAqjC,YAAAQ,QAAA,GAAAtM,MAAA,YAAAA,MAAA,YAGA4pD,GAAA,WACA,MAAAr5C,IAAAlF,GAAA+7C,GAAA37C,GAAAL,GAAAg7C,GAAAH,GAAArB,GAAAL,GAAA97E,EAAA0hC,WAAAmC,QAAAtM,KAAA2C,IAAA,SAAA3C,KAAA2C,IAAA,YAGAzJ,GAAA,SAAAzE,GACA,MAAAA,GAAA5W,MAAA,SAAsB6I,IAAA,SAAAnG,GACtB,UAAAA,KAIAspE,GAAA3wD,GAAA,gEAEA4wD,GAAA5wD,GAAA,4HAEA6wD,GAAA7wD,GAAA,4HAEA8wD,GAAA9wD,GAAA,4HAEA+wD,GAAAxJ,GAAAroD,GAAA,UAAAA,QAAA,OAEA8xD,GAAAzJ,GAAAroD,QAAA,SAAAA,GAAA,YAEA+xD,GAAA1J,GAAAroD,GAAA,aAAAA,GAAA,YAEAgyD,GAAAhyD,KAEAiyD,GAAA,SAAAhjE,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAAtS,KAAAyG,MAAA6L,GACA,IAAAijE,GAAAv1E,KAAAuH,IAAA+K,EAAA,GAIA,OAHA+iE,IAAA92D,EAAA,IAAAjM,EAAA,IACA+iE,GAAA31D,EAAA,QAAA61D,EACAF,GAAAzqE,EAAA,MAAA2qE,EACAF,GAAA,IAUAG,GAAAx4C,GAAA7Y,GAAA,qgDAEAsxD,GAAAz4C,GAAA7Y,GAAA,qgDAEAuxD,GAAA14C,GAAA7Y,GAAA,qgDAEAwxD,GAAA34C,GAAA7Y,GAAA,qgDA+BAoZ,GAAA,+BAEAq4C,IACAx8B,IAAA,6BACA7b,SACAs4C,MAAA,+BACA/G,IAAA,uCACAgH,MAAA,iCAGAC,GAAA,SAAAjuD,GACA,GAAAorC,GAAAprC,GAAA,GAAAtwB,EAAA07D,EAAA/jD,QAAA,IAEA,OADA3X,IAAA,cAAA07D,EAAAprC,EAAAle,MAAA,EAAApS,MAAAswB,IAAAle,MAAApS,EAAA,IACAo+E,GAAApyE,eAAA0vD,IAA8Cx1B,MAAAk4C,GAAA1iB,GAAAv1B,MAAA7V,GAAuCA,GAmBrFkuD,GAAA,SAAAluD,GACA,GAAA2V,GAAAs4C,GAAAjuD,EACA,QAAA2V,EAAAE,MACAH,GACAL,IAAAM,IAGAI,GAAA,CAUAD,IAAAlgC,UAAAigC,GAAAjgC,WACAxH,YAAA0nC,GACAj7B,IAAA,SAAA+S,GAEA,IADA,GAAApN,GAAApU,KAAAuC,IACA6R,IAAAoN,KAAA,KAAAA,IAAAitB,YAAA,MACA,OAAAjtB,GAAApN,IAEAuJ,IAAA,SAAA6D,EAAAtJ,GACA,MAAAsJ,GAAAxhB,KAAAuC,GAAA2V,GAEA9G,OAAA,SAAAoQ,GACA,MAAAxhB,MAAAuC,IAAAif,aAAAxhB,KAAAuC,IAEA0+B,SAAA,WACA,MAAAjhC,MAAAuC,GAIA,IAAAw/E,IAAA,SAAAC,GACA,kBACA,MAAAhiF,MAAAiiF,QAAAD,IAIA,uBAAA15E,UAAA,CACA,GAAAjG,IAAAiG,SAAAmoB,eACA,KAAApuB,GAAA4/E,QAAA,CACA,GAAAC,IAAA7/E,GAAA8/E,uBACA9/E,GAAA+/E,mBACA//E,GAAAggF,oBACAhgF,GAAAigF,gBACAP,IAAA,SAAAC,GACA,kBACA,MAAAE,IAAAh2E,KAAAlM,KAAAgiF,MAMA,GAAAO,IAAAR,GAEAl3C,KAEArrC,GAAAkQ,MAAA,IAmEA,IAAA8yE,IAAA,SAAAh4C,EAAAtyB,EAAAyyB,GACA,GAAArnC,GAAA8a,EAAAsV,EAAA4W,GAAAE,EAAA,IAAAh6B,EAAAkjB,EAAAtpB,MAEA,OAAA+N,UAAA/N,OAAA,IAcA,IAFArK,EAAAmY,EAAA0yB,GAAAL,GACA,MAAAI,OAAA,GACArnC,EAAA,EAAaA,EAAAkN,IAAOlN,EAAAtD,KAAA6K,KAAA9K,EAAA2zB,EAAApwB,GAAA4U,EAAAyyB,GACpB,OAAA3qC,MAdA,GAAAD,GAAAC,KAAAwhB,OAAAipB,IACA,IAAA1qC,EAAA,OAAA8d,GAAA0D,EAAA,EAAAgI,EAAAxpB,EAAAqK,OAA6CmX,EAAAgI,IAAOhI,EACpD,IAAAje,EAAA,EAAAua,EAAA9d,EAAAwhB,GAA4Bje,EAAAkN,IAAOlN,EACnC,IAAA8a,EAAAsV,EAAApwB,IAAAsT,OAAAiH,EAAAjH,MAAAwH,EAAAwV,OAAA/V,EAAA+V,KACA,MAAA/V,GAAA3F,QAwBA8yB,GAAA,WAEA,IADA,GAAAlG,GAAA29C,EAAAjjF,EAAAkQ,MACAo1B,EAAA29C,EAAAz3C,aAAAy3C,EAAA39C,CACA,OAAA29C,IAGAC,GAAA,SAAAlhE,EAAA9R,GACA,GAAAw1C,GAAA1jC,EAAAkjC,iBAAAljC,CAEA,IAAA0jC,EAAAy9B,eAAA,CACA,GAAA96D,GAAAq9B,EAAAy9B,gBAGA,OAFA96D,GAAAvQ,EAAA5H,EAAAgM,QAAAmM,EAAAtQ,EAAA7H,EAAAkM,QACAiM,IAAA+6D,gBAAAphE,EAAAqhE,eAAAC,YACAj7D,EAAAvQ,EAAAuQ,EAAAtQ,GAGA,GAAA6rD,GAAA5hD,EAAAuhE,uBACA,QAAArzE,EAAAgM,QAAA0nD,EAAA53D,KAAAgW,EAAAwhE,WAAAtzE,EAAAkM,QAAAwnD,EAAA33D,IAAA+V,EAAAyhE,YAGAx8B,GAAA,SAAAjlC,GACA,GAAA9R,GAAAs7B,IAEA,OADAt7B,GAAA44C,iBAAA54C,IAAA44C,eAAA,IACAo6B,GAAAlhE,EAAA9R,IAKAsyE,GAAA,SAAAA,GACA,aAAAA,EAAA/2C,GAAA,WACA,MAAAjrC,MAAAkjF,cAAAlB,KAIAmB,GAAA,SAAAhuC,GACA,kBAAAA,OAAA6sC,GAAA7sC,GAEA,QAAAzF,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,EAAA,GAAA/mE,OAAAkN,GAAAhI,EAAA,EAAqFA,EAAAgI,IAAOhI,EAC5F,OAAAC,GAAA6hE,EAAAv5C,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAAk5E,EAAAF,EAAA7hE,GAAA,GAAAlF,OAAA7L,GAAAlN,EAAA,EAA+GA,EAAAkN,IAAOlN,GACtHke,EAAAsoB,EAAAxmC,MAAA+/E,EAAAluC,EAAAjpC,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,MACA,YAAAtoB,KAAA6hE,EAAAh5C,SAAA7oB,EAAA6oB,UACAi5C,EAAAhgF,GAAA+/E,EAKA,WAAA5zC,IAAA2zC,EAAApjF,KAAA4vC,WAOA2zC,GAAA,SAAAvB,GACA,aAAAA,EAAArzE,GAAA,WACA,MAAA3O,MAAAwjF,iBAAAxB,KAIAyB,GAAA,SAAAtuC,GACA,kBAAAA,OAAAouC,GAAApuC,GAEA,QAAAzF,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,KAAA1pE,KAAA6H,EAAA,EAAyFA,EAAAgI,IAAOhI,EAChG,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAA9G,EAAA,EAA8DA,EAAAkN,IAAOlN,GACrEke,EAAAsoB,EAAAxmC,MACA8/E,EAAArwE,KAAAoiC,EAAAjpC,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,IACApwB,EAAA3G,KAAAyO,GAKA,WAAAiuB,IAAA2zC,EAAA1pE,IAGAgqE,GAAA,SAAA9uE,GACA,kBAAAA,OAAA2tE,GAAA3tE;AAEA,OAAA86B,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,EAAA,GAAA/mE,OAAAkN,GAAAhI,EAAA,EAAqFA,EAAAgI,IAAOhI,EAC5F,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAAk5E,EAAAF,EAAA7hE,MAAAje,EAAA,EAA4FA,EAAAkN,IAAOlN,GACnGke,EAAAsoB,EAAAxmC,KAAAsR,EAAA1I,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,IACAw5C,EAAAvwE,KAAAyO,EAKA,WAAAiuB,IAAA2zC,EAAApjF,KAAA4vC,WAGA+zC,GAAA,SAAAp4C,GACA,UAAAlvB,OAAAkvB,EAAAnhC,SAGAw5E,GAAA,WACA,UAAAn0C,IAAAzvC,KAAA6jF,QAAA7jF,KAAA2vC,QAAAlyB,IAAAkmE,IAAA3jF,KAAA4vC,UAWA1E,IAAA1hC,WACAxH,YAAAkpC,GACAx8B,YAAA,SAAAioC,GAAgC,MAAA32C,MAAAorC,QAAA9gC,aAAAqsC,EAAA32C,KAAAy1B,QAChCnrB,aAAA,SAAAqsC,EAAA/gC,GAAuC,MAAA5V,MAAAorC,QAAA9gC,aAAAqsC,EAAA/gC,IACvCstE,cAAA,SAAAlB,GAAqC,MAAAhiF,MAAAorC,QAAA83C,cAAAlB,IACrCwB,iBAAA,SAAAxB,GAAwC,MAAAhiF,MAAAorC,QAAAo4C,iBAAAxB,IAGxC,IAAA8B,IAAA,SAAAxsE,GACA,kBACA,MAAAA,KAIAy0B,GAAA,IAwEAg4C,GAAA,SAAA7rE,EAAAwF,GACA,IAAAxF,EAGA,MAFA/P,GAAA,GAAAkU,OAAArc,KAAAwgB,QAAAe,KACAvhB,KAAA6K,KAAA,SAAA4R,GAA2BtU,IAAAoZ,GAAA9E,IAC3BtU,CAGA,IAAA67E,GAAAtmE,EAAAiuB,GAAAN,GACA3xB,EAAA1Z,KAAA4vC,SACAF,EAAA1vC,KAAA2vC,OAEA,mBAAAz3B,OAAA4rE,GAAA5rE,GAEA,QAAAqR,GAAAmmB,EAAAtlC,OAAAmhC,EAAA,GAAAlvB,OAAAkN,GAAA+hB,EAAA,GAAAjvB,OAAAkN,GAAAiiB,EAAA,GAAAnvB,OAAAkN,GAAAhI,EAAA,EAAsGA,EAAAgI,IAAOhI,EAAA,CAC7G,GAAA9T,GAAAiM,EAAA6H,GACAuoB,EAAA4F,EAAAnuB,GACAkqB,EAAA3B,EAAA1/B,OACAjC,EAAA+P,EAAAhM,KAAAuB,OAAA48B,SAAA9oB,EAAA7H,GACAgyB,EAAAvjC,EAAAiC,OACA65E,EAAA34C,EAAA/pB,GAAA,GAAAlF,OAAAqvB,GACAw4C,EAAA34C,EAAAhqB,GAAA,GAAAlF,OAAAqvB,GACAy4C,EAAA34C,EAAAjqB,GAAA,GAAAlF,OAAAovB,EAEAu4C,GAAAv2E,EAAAq8B,EAAAm6C,EAAAC,EAAAC,EAAAh8E,EAAAuV,EAKA,QAAA67B,GAAA3jC,EAAAumC,EAAA,EAAAN,EAAA,EAA4CM,EAAAzQ,IAAiByQ,EAC7D,GAAA5C,EAAA0qC,EAAA9nC,GAEA,IADAA,GAAAN,MAAAM,EAAA,KACAvmC,EAAAsuE,EAAAroC,SAAAnQ,GACA6N,EAAA9jB,MAAA7f,GAAA,KAQA,MAHA21B,GAAA,GAAAkE,IAAAlE,EAAA7xB,GACA6xB,EAAAs4C,OAAAv4C,EACAC,EAAA64C,MAAA54C,EACAD,GAGA84C,GAAA,WACA,UAAA50C,IAAAzvC,KAAAokF,OAAApkF,KAAA2vC,QAAAlyB,IAAAkmE,IAAA3jF,KAAA4vC,WAGA00C,GAAA,SAAAz0C,GAEA,OAAA00C,GAAAvkF,KAAA2vC,QAAA60C,EAAA30C,EAAAF,QAAA80C,EAAAF,EAAAn6E,OAAAkjB,EAAAk3D,EAAAp6E,OAAAmf,EAAAzd,KAAAuD,IAAAo1E,EAAAn3D,GAAAo3D,EAAA,GAAAroE,OAAAooE,GAAAljE,EAAA,EAA8JA,EAAAgI,IAAOhI,EACrK,OAAAC,GAAAmjE,EAAAJ,EAAAhjE,GAAAqjE,EAAAJ,EAAAjjE,GAAA/Q,EAAAm0E,EAAAv6E,OAAAgrC,EAAAsvC,EAAAnjE,GAAA,GAAAlF,OAAA7L,GAAAlN,EAAA,EAAwHA,EAAAkN,IAAOlN,GAC/Hke,EAAAmjE,EAAArhF,IAAAshF,EAAAthF,MACA8xC,EAAA9xC,GAAAke,EAKA,MAAQD,EAAAkjE,IAAQljE,EAChBmjE,EAAAnjE,GAAAgjE,EAAAhjE,EAGA,WAAAkuB,IAAAi1C,EAAA1kF,KAAA4vC,WAGAi1C,GAAA,WAEA,OAAAn1C,GAAA1vC,KAAA2vC,QAAApuB,KAAAgI,EAAAmmB,EAAAtlC,SAA4DmX,EAAAgI,GAC5D,OAAA/H,GAAAsoB,EAAA4F,EAAAnuB,GAAAje,EAAAwmC,EAAA1/B,OAAA,EAAAwL,EAAAk0B,EAAAxmC,KAA4EA,GAAA,IAC5Eke,EAAAsoB,EAAAxmC,MACAsS,OAAA4L,EAAAgtB,aAAA54B,EAAA64B,WAAAnkC,aAAAkX,EAAA5L,GACAA,EAAA4L,EAKA,OAAAxhB,OAGA8kF,GAAA,SAAA17B,GAGA,QAAA27B,GAAAh3E,EAAAC,GACA,MAAAD,IAAAC,EAAAo7C,EAAAr7C,EAAAs8B,SAAAr8B,EAAAq8B,WAAAt8B,GAAAC,EAHAo7C,MAAApd,GAMA,QAAA0D,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAA46E,EAAA,GAAA3oE,OAAAkN,GAAAhI,EAAA,EAAsFA,EAAAgI,IAAOhI,EAAA,CAC7F,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAA66E,EAAAD,EAAAzjE,GAAA,GAAAlF,OAAA7L,GAAAlN,EAAA,EAAwGA,EAAAkN,IAAOlN,GAC/Gke,EAAAsoB,EAAAxmC,MACA2hF,EAAA3hF,GAAAke,EAGAyjE,GAAAnuE,KAAAiuE,GAGA,UAAAt1C,IAAAu1C,EAAAhlF,KAAA4vC,UAAAmF,SAOAmwC,GAAA,WACA,GAAA55E,GAAA6M,UAAA,EAGA,OAFAA,WAAA,GAAAnY,KACAsL,EAAApJ,MAAA,KAAAiW,WACAnY,MAGAmlF,GAAA,WACA,GAAA1iE,GAAA,GAAApG,OAAArc,KAAAwgB,QAAAld,IAEA,OADAtD,MAAA6K,KAAA,WAAwB4X,IAAAnf,GAAAtD,OACxByiB,GAGA2iE,GAAA,WAEA,OAAA11C,GAAA1vC,KAAA2vC,QAAApuB,EAAA,EAAAgI,EAAAmmB,EAAAtlC,OAA2DmX,EAAAgI,IAAOhI,EAClE,OAAAuoB,GAAA4F,EAAAnuB,GAAAje,EAAA,EAAAkN,EAAAs5B,EAAA1/B,OAAwD9G,EAAAkN,IAAOlN,EAAA,CAC/D,GAAAke,GAAAsoB,EAAAxmC,EACA,IAAAke,EAAA,MAAAA,GAIA,aAGA6jE,GAAA,WACA,GAAA7kE,GAAA,CAEA,OADAxgB,MAAA6K,KAAA,aAAwB2V,IACxBA,GAGA8kE,GAAA,WACA,OAAAtlF,KAAAwhB,QAGA+jE,GAAA,SAAAj6E,GAEA,OAAAokC,GAAA1vC,KAAA2vC,QAAApuB,EAAA,EAAAgI,EAAAmmB,EAAAtlC,OAA2DmX,EAAAgI,IAAOhI,EAClE,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAAje,EAAA,EAAAkN,EAAAs5B,EAAA1/B,OAA8D9G,EAAAkN,IAAOlN,GACrEke,EAAAsoB,EAAAxmC,KAAAgI,EAAAY,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,EAIA,OAAA9pC,OA2CAwlF,GAAA,SAAA5xD,EAAA1b,GACA,GAAAqxB,GAAAs4C,GAAAjuD,EAEA,IAAAzb,UAAA/N,OAAA,GACA,GAAAoX,GAAAxhB,KAAAwhB,MACA,OAAA+nB,GAAAE,MACAjoB,EAAAwwB,eAAAzI,EAAAC,MAAAD,EAAAE,OACAjoB,EAAAgsB,aAAAjE,GAGA,MAAAvpC,MAAA6K,MAAA,MAAAqN,EACAqxB,EAAAE,MAAA0C,GAAAF,GAAA,kBAAA/zB,GACAqxB,EAAAE,MAAAgD,GAAAD,GACAjD,EAAAE,MAAA6C,GAAAD,IAAA9C,EAAArxB,KAGApY,GAAA,SAAA0hB,GACA,MAAAA,GAAA0nB,eAAA1nB,EAAA0nB,cAAAvY,aACAnP,EAAAlZ,UAAAkZ,GACAA,EAAAmP,aAuBA80D,GAAA,SAAA7xD,EAAA1b,EAAA20B,GACA,GAAArrB,EACA,OAAArJ,WAAA/N,OAAA,EACApK,KAAA6K,MAAA,MAAAqN,EACAw0B,GAAA,kBAAAx0B,GACA60B,GACAH,IAAAhZ,EAAA1b,EAAA,MAAA20B,EAAA,GAAAA,IACA/sC,GAAA0hB,EAAAxhB,KAAAwhB,QACAoP,iBAAApP,EAAA,MACAqP,iBAAA+C,IAuBA8xD,GAAA,SAAA9xD,EAAA1b,GACA,MAAAC,WAAA/N,OAAA,EACApK,KAAA6K,MAAA,MAAAqN,EACA80B,GAAA,kBAAA90B,GACAg1B,GACAD,IAAArZ,EAAA1b,IACAlY,KAAAwhB,OAAAoS,GAgBAyZ,IAAA7jC,WACAyD,IAAA,SAAA2mB,GACA,GAAAtwB,GAAAtD,KAAAutC,OAAAtyB,QAAA2Y,EACAtwB,GAAA,IACAtD,KAAAutC,OAAAx6B,KAAA6gB,GACA5zB,KAAAstC,MAAAlc,aAAA,QAAApxB,KAAAutC,OAAA5a,KAAA,QAGAvhB,OAAA,SAAAwiB,GACA,GAAAtwB,GAAAtD,KAAAutC,OAAAtyB,QAAA2Y,EACAtwB,IAAA,IACAtD,KAAAutC,OAAA12B,OAAAvT,EAAA,GACAtD,KAAAstC,MAAAlc,aAAA,QAAApxB,KAAAutC,OAAA5a,KAAA,QAGAkvC,SAAA,SAAAjuC,GACA,MAAA5zB,MAAAutC,OAAAtyB,QAAA2Y,IAAA,GAgCA,IAAA+xD,IAAA,SAAA/xD,EAAA1b,GACA,GAAAqpB,GAAA4L,GAAAvZ,EAAA,GAEA,IAAAzb,UAAA/N,OAAA,GAEA,IADA,GAAAsjC,GAAAN,GAAAptC,KAAAwhB,QAAAle,KAAAkN,EAAA+wB,EAAAn3B,SACA9G,EAAAkN,GAAA,IAAAk9B,EAAAm0B,SAAAtgC,EAAAj+B,IAAA,QACA,UAGA,MAAAtD,MAAA6K,MAAA,kBAAAqN,GACA41B,GAAA51B,EACA01B,GACAC,IAAAtM,EAAArpB,KAoBA0tE,GAAA,SAAA1tE,GACA,MAAAC,WAAA/N,OACApK,KAAA6K,KAAA,MAAAqN,EACA61B,IAAA,kBAAA71B,GACAg2B,GACAD,IAAA/1B,IACAlY,KAAAwhB,OAAAwsB,aAoBA63C,GAAA,SAAA3tE,GACA,MAAAC,WAAA/N,OACApK,KAAA6K,KAAA,MAAAqN,EACAi2B,IAAA,kBAAAj2B,GACAo2B,GACAD,IAAAn2B,IACAlY,KAAAwhB,OAAA4sB,WAOA03C,GAAA,WACA,MAAA9lF,MAAA6K,KAAA0jC,KAOAw3C,GAAA,WACA,MAAA/lF,MAAA6K,KAAA6jC,KAGAs3C,GAAA,SAAApyD,GACA,GAAAjI,GAAA,kBAAAiI,KAAAkuD,GAAAluD,EACA,OAAA5zB,MAAAm1C,OAAA,WACA,MAAAn1C,MAAA0O,YAAAid,EAAAzpB,MAAAlC,KAAAmY,eAQA8tE,GAAA,SAAAryD,EAAAmuB,GACA,GAAAp2B,GAAA,kBAAAiI,KAAAkuD,GAAAluD,GACAuhB,EAAA,MAAA4M,EAAAlT,GAAA,kBAAAkT,KAAAigC,GAAAjgC,EACA,OAAA/hD,MAAAm1C,OAAA,WACA,MAAAn1C,MAAAsK,aAAAqhB,EAAAzpB,MAAAlC,KAAAmY,WAAAg9B,EAAAjzC,MAAAlC,KAAAmY,YAAA,SASA+tE,GAAA,WACA,MAAAlmF,MAAA6K,KAAAuG,KAGA+0E,GAAA,SAAAjuE,GACA,MAAAC,WAAA/N,OACApK,KAAA6lD,SAAA,WAAA3tC,GACAlY,KAAAwhB,OAAA6oB,UA8BA+7C,GAAA,SAAAxvE,EAAAm4B,GACA,MAAA/uC,MAAA6K,MAAA,kBAAAkkC,GACAS,GACAD,IAAA34B,EAAAm4B,KAGAe,IAAA,KAWAL,IAAAjmC,UAAAqmC,GAAArmC,WACAxH,YAAAytC,GACA0F,OAAAguC,GACAruC,UAAA2uC,GACA9xE,OAAA+xE,GACAv7E,KAAA47E,GACAz4C,MAAAs4C,GACAp4C,KAAA64C,GACAjvC,MAAAkvC,GACAvvC,MAAA8vC,GACA/tE,KAAAguE,GACA54E,KAAAg5E,GACAziE,MAAA0iE,GACA3jE,KAAA4jE,GACA5kE,KAAA6kE,GACA12E,MAAA22E,GACAz6E,KAAA06E,GACA57E,KAAA67E,GACAhtE,MAAAitE,GACA5/B,SAAA6/B,GACAW,QAAAV,GACApiF,KAAAqiF,GACApL,KAAAqL,GACAl/C,MAAAm/C,GACAp3C,MAAAq3C,GACAn7E,OAAAo7E,GACA3wC,OAAA4wC,GACA70E,OAAA80E,GACA/6C,MAAAg7C,GACApmF,GAAAyiF,GACAjvD,SAAA6yD,GAGA,IAAAjxC,IAAA,SAAA6sC,GACA,sBAAAA,GACA,GAAAvyC,MAAAnnC,SAAA46E,cAAAlB,MAAA15E,SAAAmoB,kBACA,GAAAgf,MAAAuyC,IAAAlyC,KAGAgF,GAAA,SAAAktC,GACA,sBAAAA,GACA,GAAAvyC,KAAAnnC,SAAAk7E,iBAAAxB,KAAA15E,SAAAmoB,kBACA,GAAAgf,KAAA,MAAAuyC,QAAAlyC,KAGAw2C,GAAA,SAAA9kE,EAAApG,EAAAqiC,GACAtlC,UAAA/N,OAAA,IAAAqzC,EAAAriC,IAAA4vB,KAAAsd,eAEA,QAAAg+B,GAAAhjF,EAAA,EAAAkN,EAAA4K,IAAAhR,OAAA,EAA0D9G,EAAAkN,IAAOlN,EACjE,IAAAgjF,EAAAlrE,EAAA9X,IAAAm6C,eACA,MAAAilC,IAAAlhE,EAAA8kE,EAIA,cAGAlrE,GAAA,SAAAoG,EAAApG,GACA,MAAAA,MAAA4vB,KAAA5vB,QAEA,QAAA9X,GAAA,EAAAkN,EAAA4K,IAAAhR,OAAA,EAAAmW,EAAA,GAAAlE,OAAA7L,GAA0ElN,EAAAkN,IAAOlN,EACjFid,EAAAjd,GAAAo/E,GAAAlhE,EAAApG,EAAA9X,GAGA,OAAAid,IAGAgmE,GAAAhzD,GAAA,2BACAizD,MAEAt2C,GAAA,EACAM,GAAA,EACAJ,GAAA,EACAM,GAAA,EACAE,GAAA,EACAK,GAAA,EACAJ,GAAA,EAEAd,GAAA,SAAAvuB,EAAAoS,EAAAxf,EAAAnK,EAAA6/B,EAAA+J,GACA,GAAApD,GAAAjvB,EAAAwuB,YACA,IAAAS,GACA,GAAAr8B,IAAAq8B,GAAA,WADAjvB,GAAAwuB,eAEArkB,IAAAnK,EAAApN,GACAwf,OACA3pB,QACA6/B,QACA/pC,GAAAwmF,GACAx1C,MAAAy1C,GACA5wD,KAAAie,EAAAje,KACAD,MAAAke,EAAAle,MACAhqB,SAAAkoC,EAAAloC,SACAqlC,KAAA6C,EAAA7C,KACAtb,MAAA,KACAua,MAAAC,MA+HAv/B,GAAA,SAAA6Q,EAAAoS,GACA,GACAmc,GACAyN,EAEAl6C,EAJAmtC,EAAAjvB,EAAAwuB,aAGArhC,GAAA,CAGA,IAAA8hC,EAAA,CAEA7c,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAAtwB,IAAAmtC,IACAV,EAAAU,EAAAntC,IAAAswB,UACA4pB,EAAAzN,EAAAE,QAAAS,GACAX,EAAAE,MAAAY,GACAd,EAAAra,MAAA7Y,OACA2gC,GAAAzN,EAAAhwC,GAAAmM,KAAA,YAAAsV,IAAA6oB,SAAA0F,EAAA9lC,MAAA8lC,EAAAjG,aACA2G,GAAAntC,IALkDqL,GAAA,CAQlDA,UAAA6S,GAAAwuB,eAGAy2C,GAAA,SAAA7yD,GACA,MAAA5zB,MAAA6K,KAAA,WACA8F,GAAA3Q,KAAA4zB,MAqDA8yD,GAAA,SAAA9yD,EAAA1b,GACA,GAAA9D,GAAApU,KAAAuxC,GAIA,IAFA3d,GAAA,GAEAzb,UAAA/N,OAAA,GAEA,OAAAgU,GADA2yB,EAAAV,GAAArwC,KAAAwhB,OAAApN,GAAA28B,MACAztC,EAAA,EAAAkN,EAAAugC,EAAA3mC,OAAwC9G,EAAAkN,IAAOlN,EAC/C,IAAA8a,EAAA2yB,EAAAztC,IAAAswB,SACA,MAAAxV,GAAAlG,KAGA,aAGA,MAAAlY,MAAA6K,MAAA,MAAAqN,EAAAg5B,GAAAG,IAAAj9B,EAAAwf,EAAA1b,KAgBAyuE,GAAA,SAAA54E,EAAAC,GACA,GAAAC,EACA,wBAAAD,GAAAmkB,GACAnkB,YAAA6d,IAAAwpD,IACApnE,EAAA4d,GAAA7d,OAAAC,EAAAonE,IACAU,IAAAhoE,EAAAC,IAiEA44E,GAAA,SAAAhzD,EAAA1b,GACA,GAAAqxB,GAAAs4C,GAAAjuD,GAAAtwB,EAAA,cAAAimC,EAAAgtC,GAAAoQ,EACA,OAAA3mF,MAAAsyC,UAAA1e,EAAA,kBAAA1b,IACAqxB,EAAAE,MAAA0I,GAAAF,IAAA1I,EAAAjmC,EAAAguC,GAAAtxC,KAAA,QAAA4zB,EAAA1b,IACA,MAAAA,GAAAqxB,EAAAE,MAAAgI,GAAAD,IAAAjI,IACAA,EAAAE,MAAAsI,GAAAL,IAAAnI,EAAAjmC,EAAA4U,KAyBA2uE,GAAA,SAAAjzD,EAAA1b,GACA,GAAAwF,GAAA,QAAAkW,CACA,IAAAzb,UAAA/N,OAAA,SAAAsT,EAAA1d,KAAA+wC,MAAArzB,OAAA20B,MACA,UAAAn6B,EAAA,MAAAlY,MAAA+wC,MAAArzB,EAAA,KACA,sBAAAxF,GAAA,SAAA6K,MACA,IAAAwmB,GAAAs4C,GAAAjuD,EACA,OAAA5zB,MAAA+wC,MAAArzB,GAAA6rB,EAAAE,MAAA2I,GAAAE,IAAA/I,EAAArxB,KAeA4uE,GAAA,SAAA5uE,GACA,GAAA9D,GAAApU,KAAAuxC,GAEA,OAAAp5B,WAAA/N,OACApK,KAAA6K,MAAA,kBAAAqN,GACAq6B,GACAC,IAAAp+B,EAAA8D,IACAm4B,GAAArwC,KAAAwhB,OAAApN,GAAAuhB,OAeAoxD,GAAA,SAAA7uE,GACA,GAAA9D,GAAApU,KAAAuxC,GAEA,OAAAp5B,WAAA/N,OACApK,KAAA6K,MAAA,kBAAAqN,GACAu6B,GACAC,IAAAt+B,EAAA8D,IACAm4B,GAAArwC,KAAAwhB,OAAApN,GAAAzI,UAUAq7E,GAAA,SAAA9uE,GACA,GAAA9D,GAAApU,KAAAuxC,GAEA,OAAAp5B,WAAA/N,OACApK,KAAA6K,KAAA8nC,GAAAv+B,EAAA8D,IACAm4B,GAAArwC,KAAAwhB,OAAApN,GAAA48B,MAGAi2C,GAAA,SAAAryE,GACA,kBAAAA,OAAA2tE,GAAA3tE,GAEA,QAAA86B,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,EAAA,GAAA/mE,OAAAkN,GAAAhI,EAAA,EAAqFA,EAAAgI,IAAOhI,EAC5F,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAAk5E,EAAAF,EAAA7hE,MAAAje,EAAA,EAA4FA,EAAAkN,IAAOlN,GACnGke,EAAAsoB,EAAAxmC,KAAAsR,EAAA1I,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,IACAw5C,EAAAvwE,KAAAyO,EAKA,WAAAiyB,IAAA2vC,EAAApjF,KAAA4vC,SAAA5vC,KAAA0zC,MAAA1zC,KAAAuxC,MAGA21C,GAAA,SAAAz6E,GACA,GAAAA,EAAA8kC,MAAAvxC,KAAAuxC,IAAA,SAAAxuB,MAEA,QAAAwhE,GAAAvkF,KAAA2vC,QAAA60C,EAAA/3E,EAAAkjC,QAAA80C,EAAAF,EAAAn6E,OAAAkjB,EAAAk3D,EAAAp6E,OAAAmf,EAAAzd,KAAAuD,IAAAo1E,EAAAn3D,GAAAo3D,EAAA,GAAAroE,OAAAooE,GAAAljE,EAAA,EAA+JA,EAAAgI,IAAOhI,EACtK,OAAAC,GAAAmjE,EAAAJ,EAAAhjE,GAAAqjE,EAAAJ,EAAAjjE,GAAA/Q,EAAAm0E,EAAAv6E,OAAAgrC,EAAAsvC,EAAAnjE,GAAA,GAAAlF,OAAA7L,GAAAlN,EAAA,EAAwHA,EAAAkN,IAAOlN,GAC/Hke,EAAAmjE,EAAArhF,IAAAshF,EAAAthF,MACA8xC,EAAA9xC,GAAAke,EAKA,MAAQD,EAAAkjE,IAAQljE,EAChBmjE,EAAAnjE,GAAAgjE,EAAAhjE,EAGA,WAAAkyB,IAAAixC,EAAA1kF,KAAA4vC,SAAA5vC,KAAA0zC,MAAA1zC,KAAAuxC,MA0BA41C,GAAA,SAAAvzD,EAAAiW,GACA,GAAAz1B,GAAApU,KAAAuxC,GAEA,OAAAp5B,WAAA/N,OAAA,EACAimC,GAAArwC,KAAAwhB,OAAApN,GAAArU,MAAA6zB,GACA5zB,KAAA6K,KAAAgoC,GAAAz+B,EAAAwf,EAAAiW,KAWAu9C,GAAA,WACA,MAAApnF,MAAAD,GAAA,aAAAkzC,GAAAjzC,KAAAuxC,OAGA81C,GAAA,SAAAC,GACA,GAAA1zD,GAAA5zB,KAAA0zC,MACAt/B,EAAApU,KAAAuxC,GAEA,mBAAA+1C,OAAAtF,GAAAsF,GAEA,QAAA53C,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,EAAA,GAAA/mE,OAAAkN,GAAAhI,EAAA,EAAqFA,EAAAgI,IAAOhI,EAC5F,OAAAC,GAAA6hE,EAAAv5C,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAAk5E,EAAAF,EAAA7hE,GAAA,GAAAlF,OAAA7L,GAAAlN,EAAA,EAA+GA,EAAAkN,IAAOlN,GACtHke,EAAAsoB,EAAAxmC,MAAA+/E,EAAAiE,EAAAp7E,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,MACA,YAAAtoB,KAAA6hE,EAAAh5C,SAAA7oB,EAAA6oB,UACAi5C,EAAAhgF,GAAA+/E,EACAtzC,GAAAuzC,EAAAhgF,GAAAswB,EAAAxf,EAAA9Q,EAAAggF,EAAAjzC,GAAA7uB,EAAApN,IAKA,WAAAq/B,IAAA2vC,EAAApjF,KAAA4vC,SAAAhc,EAAAxf,IAGAmzE,GAAA,SAAAD,GACA,GAAA1zD,GAAA5zB,KAAA0zC,MACAt/B,EAAApU,KAAAuxC,GAEA,mBAAA+1C,OAAA/D,GAAA+D,GAEA,QAAA53C,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAg5E,KAAA1pE,KAAA6H,EAAA,EAAyFA,EAAAgI,IAAOhI,EAChG,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAA9G,EAAA,EAA8DA,EAAAkN,IAAOlN,EACrE,GAAAke,EAAAsoB,EAAAxmC,GAAA,CACA,OAAAqzC,GAAAjsC,EAAA48E,EAAAp7E,KAAAsV,IAAA6oB,SAAA/mC,EAAAwmC,GAAA8J,EAAAvD,GAAA7uB,EAAApN,GAAA4a,EAAA,EAAAtY,EAAAhM,EAAAN,OAAwI4kB,EAAAtY,IAAOsY,GAC/I2nB,EAAAjsC,EAAAskB,KACA+gB,GAAA4G,EAAA/iB,EAAAxf,EAAA4a,EAAAtkB,EAAAkpC,EAGAwvC,GAAArwE,KAAArI,GACAgP,EAAA3G,KAAAyO,GAKA,UAAAiyB,IAAA2vC,EAAA1pE,EAAAka,EAAAxf,IAGAozE,GAAA33C,GAAArmC,UAAAxH,YAEAylF,GAAA,WACA,UAAAD,IAAAxnF,KAAA2vC,QAAA3vC,KAAA4vC,WAiDA83C,GAAA,SAAA9zD,EAAA1b,EAAA20B,GACA,GAAAvpC,GAAA,cAAAswB,GAAA,IAAA0iD,GAAAqQ,EACA,cAAAzuE,EAAAlY,KACAszC,WAAA1f,EAAAsf,GAAAtf,EAAAtwB,IACAvD,GAAA,aAAA6zB,EAAAuf,GAAAvf,IACA5zB,KAAAszC,WAAA1f,EAAA,kBAAA1b,GACAm7B,GAAAzf,EAAAtwB,EAAAguC,GAAAtxC,KAAA,SAAA4zB,EAAA1b,IACAk7B,GAAAxf,EAAAtwB,EAAA4U,GAAA20B,IAcA86C,GAAA,SAAA/zD,EAAA1b,EAAA20B,GACA,GAAAnvB,GAAA,UAAAkW,GAAA,GACA,IAAAzb,UAAA/N,OAAA,SAAAsT,EAAA1d,KAAA+wC,MAAArzB,OAAA20B,MACA,UAAAn6B,EAAA,MAAAlY,MAAA+wC,MAAArzB,EAAA,KACA,sBAAAxF,GAAA,SAAA6K,MACA,OAAA/iB,MAAA+wC,MAAArzB,EAAA41B,GAAA1f,EAAA1b,EAAA,MAAA20B,EAAA,GAAAA,KAgBA+6C,GAAA,SAAA1vE,GACA,MAAAlY,MAAA+wC,MAAA,yBAAA74B,GACAs7B,GAAAlC,GAAAtxC,KAAA,OAAAkY,IACAq7B,GAAA,MAAAr7B,EAAA,GAAAA,EAAA,MAGA2vE,GAAA,WAKA,OAJAj0D,GAAA5zB,KAAA0zC,MACAo0C,EAAA9nF,KAAAuxC,IACAw2C,EAAAp0C,KAEAjE,EAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAmX,EAAA,EAA2DA,EAAAgI,IAAOhI,EAClE,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAA9G,EAAA,EAA8DA,EAAAkN,IAAOlN,EACrE,GAAAke,EAAAsoB,EAAAxmC,GAAA,CACA,GAAAswC,GAAAvD,GAAA7uB,EAAAsmE,EACA/3C,IAAAvuB,EAAAoS,EAAAm0D,EAAAzkF,EAAAwmC,GACAlU,KAAAge,EAAAhe,KAAAge,EAAAje,MAAAie,EAAAjoC,SACAgqB,MAAA,EACAhqB,SAAAioC,EAAAjoC,SACAqlC,KAAA4C,EAAA5C,OAMA,UAAAyC,IAAA/D,EAAA1vC,KAAA4vC,SAAAhc,EAAAm0D,IAGA3zE,GAAA,EAiBA4zE,GAAAn4C,GAAArmC,SAEAiqC,IAAAjqC,UAAAiD,GAAAjD,WACAxH,YAAAyxC,GACA0B,OAAAkyC,GACAvyC,UAAAyyC,GACA51E,OAAAs1E,GACA7xC,MAAA8xC,GACAr3C,UAAA43C,GACAh7E,WAAAo7E,GACA37E,KAAA87E,GAAA97E,KACAuW,MAAAulE,GAAAvlE,MACAjB,KAAAwmE,GAAAxmE,KACAhB,KAAAwnE,GAAAxnE,KACA7R,MAAAq5E,GAAAr5E,MACA9D,KAAAm9E,GAAAn9E,KACA9K,GAAAonF,GACAx9E,KAAAi9E,GACAt0C,UAAAu0C,GACAruE,MAAAkvE,GACAp0C,WAAAq0C,GACApkF,KAAAqkF,GACAx2E,OAAAg2E,GACAr2C,MAAA21C,GACA/wD,MAAAmxD,GACAn7E,SAAAo7E,GACA/1C,KAAAg2C,GAGA,IAAAlzC,KACAle,KAAA,KACAD,MAAA,EACAhqB,SAAA,IACAqlC,KAAAtyB,GAaAupE,GAAA,SAAAr0D,GACA,GAAAxf,GACAy/B,CAEAjgB,aAAA6f,KACAr/B,EAAAwf,EAAA2d,IAAA3d,IAAA8f,QAEAt/B,EAAAu/B,MAAAE,EAAAC,IAAAle,KAAA/pB,KAAA+nB,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAA8b,GAAA1vC,KAAA2vC,QAAApmB,EAAAmmB,EAAAtlC,OAAAmX,EAAA,EAA2DA,EAAAgI,IAAOhI,EAClE,OAAAC,GAAAsoB,EAAA4F,EAAAnuB,GAAA/Q,EAAAs5B,EAAA1/B,OAAA9G,EAAA,EAA8DA,EAAAkN,IAAOlN,GACrEke,EAAAsoB,EAAAxmC,KACAysC,GAAAvuB,EAAAoS,EAAAxf,EAAA9Q,EAAAwmC,EAAA+J,GAAAD,GAAApyB,EAAApN,GAKA,WAAAq/B,IAAA/D,EAAA1vC,KAAA4vC,SAAAhc,EAAAxf,GAGAy7B,IAAArmC,UAAAmH,UAAA81E,GACA52C,GAAArmC,UAAAiD,WAAAw7E,EAEA,IAAAC,KAAA,MAEA1qC,GAAA,SAAAh8B,EAAAoS,GACA,GACAmc,GACAzsC,EAFAmtC,EAAAjvB,EAAAwuB,YAIA,IAAAS,EAAA,CACA7c,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAAtwB,IAAAmtC,GACA,IAAAV,EAAAU,EAAAntC,IAAA2sC,MAAAO,IAAAT,EAAAnc,SACA,UAAA6f,MAAAjyB,IAAA0mE,GAAAt0D,IAAAtwB,IAKA,aAGAkyC,GAAAn5B,MAAA7S,UAAAkM,MAEA8+B,GAAA,SAAAl9B,GACA,MAAAA,IAGA7L,GAAA,EACAoM,GAAA,EACAyJ,GAAA,EACA9V,GAAA,EACA8pC,GAAA,KAuMA6yC,GAAA,WAMA,QAAAA,GAAAr4C,GACA,GAAAs4C,GACA9wE,EAAA,CAGAw4B,GAAAu4C,UAAA,SAAA7mE,GACA,GAAA9W,GAAA8W,EAAA9W,QACAA,IACA8W,EAAAlK,EAAAy+B,GAAArrC,GACA8W,EAAAjK,EAAA2+B,GAAAxrC,KAEA8W,EAAAlK,EAAA8wE,EAAA9wE,GAAAgxE,EAAA9mE,EAAA4mE,GAAA,EACA5mE,EAAAjK,EAAA,EACA6wE,EAAA5mE,IAIA,IAAAhW,GAAA4qC,GAAAtG,GACAj4B,EAAAw+B,GAAAvG,GACAnuB,EAAAnW,EAAA8L,EAAAgxE,EAAA98E,EAAAqM,GAAA,EACAgK,EAAAhK,EAAAP,EAAAgxE,EAAAzwE,EAAArM,GAAA,CAGA,OAAAskC,GAAAu4C,UAAAE,EAAA,SAAA/mE,GACAA,EAAAlK,GAAAkK,EAAAlK,EAAAw4B,EAAAx4B,GAAA6O,EACA3E,EAAAjK,GAAAu4B,EAAAv4B,EAAAiK,EAAAjK,GAAA6O,GACK,SAAA5E,GACLA,EAAAlK,GAAAkK,EAAAlK,EAAAqK,IAAAE,EAAAF,GAAAwE,EACA3E,EAAAjK,GAAA,GAAAu4B,EAAAv4B,EAAAiK,EAAAjK,EAAAu4B,EAAAv4B,EAAA,IAAA6O,IAjCA,GAAAkiE,GAAAxyC,GACA3vB,EAAA,EACAC,EAAA,EACAmiE,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAAhxE,GACA,MAAAa,WAAA/N,QAAAk+E,EAAAhxE,EAAA6wE,GAAAG,GAGAH,EAAA3nE,KAAA,SAAAlJ,GACA,MAAAa,WAAA/N,QAAAm+E,GAAA,EAAApiE,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA6wE,GAAAI,EAAA,MAAApiE,EAAAC,IAGA+hE,EAAAI,SAAA,SAAAjxE,GACA,MAAAa,WAAA/N,QAAAm+E,GAAA,EAAApiE,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA6wE,GAAAI,GAAApiE,EAAAC,GAAA,MAGA+hE,GAGAK,GAAA,SAAAl9E,GACA,GAAAm3E,GAAA/3E,EAAApH,EAAAkN,EAAAgR,EAAAxhB,KAAA4V,GAAA4L,EACA,GAEA,KADAihE,EAAA7sE,EAAA8tB,UAAA9tB,KACA4L,EAAAihE,EAAA5wD,OAEA,GADAvmB,EAAAkW,GAAA9W,EAAA8W,EAAA9W,SACA,IAAApH,EAAA,EAAAkN,EAAA9F,EAAAN,OAAoD9G,EAAAkN,IAAOlN,EAC3DsS,EAAA7C,KAAArI,EAAApH,UAGGsS,EAAAxL,OACH,OAAApK,OAGAyoF,GAAA,SAAAn9E,GAEA,IADA,GAAAZ,GAAApH,EAAAke,EAAAxhB,KAAAyiB,GAAAjB,GACAA,EAAAiB,EAAAoP,OAEA,GADAvmB,EAAAkW,GAAA9W,EAAA8W,EAAA9W,SACA,IAAApH,EAAAoH,EAAAN,OAAA,EAA+C9G,GAAA,IAAQA,EACvDmf,EAAA1P,KAAArI,EAAApH,GAGA,OAAAtD,OAGA0oF,GAAA,SAAAp9E,GAEA,IADA,GAAAZ,GAAApH,EAAAkN,EAAAgR,EAAAxhB,KAAAyiB,GAAAjB,GAAA5L,KACA4L,EAAAiB,EAAAoP,OAEA,GADAjc,EAAA7C,KAAAyO,GAAA9W,EAAA8W,EAAA9W,SACA,IAAApH,EAAA,EAAAkN,EAAA9F,EAAAN,OAAkD9G,EAAAkN,IAAOlN,EACzDmf,EAAA1P,KAAArI,EAAApH,GAGA,MAAAke,EAAA5L,EAAAic,OACAvmB,EAAAkW,EAEA,OAAAxhB,OAGA2oF,GAAA,SAAAzwE,GACA,MAAAlY,MAAAqoF,UAAA,SAAA7mE,GAIA,IAHA,GAAAq9C,IAAA3mD,EAAAsJ,EAAArZ,OAAA,EACAuC,EAAA8W,EAAA9W,SACApH,EAAAoH,KAAAN,SACA9G,GAAA,GAAAu7D,GAAAn0D,EAAApH,GAAA4U,KACAsJ,GAAAtJ,MAAA2mD,KAIA+pB,GAAA,SAAAx/B,GACA,MAAAppD,MAAAi3C,WAAA,SAAAz1B,GACAA,EAAA9W,UACA8W,EAAA9W,SAAAoM,KAAAsyC,MAKAy/B,GAAA,SAAAx0E,GAIA,IAHA,GAAAuI,GAAA5c,KACAu7C,EAAAjF,GAAA15B,EAAAvI,GACAoO,GAAA7F,GACAA,IAAA2+B,GACA3+B,IAAAnP,OACAgV,EAAA1P,KAAA6J,EAGA,KADA,GAAAoS,GAAAvM,EAAArY,OACAiK,IAAAknC,GACA94B,EAAA5L,OAAAmY,EAAA,EAAA3a,GACAA,IAAA5G,MAEA,OAAAgV,IAkBAqmE,GAAA,WAEA,IADA,GAAAtnE,GAAAxhB,KAAAyiB,GAAAjB,GACAA,IAAA/T,QACAgV,EAAA1P,KAAAyO,EAEA,OAAAiB,IAGAsmE,GAAA,WACA,GAAAtmE,KAIA,OAHAziB,MAAA6K,KAAA,SAAA2W,GACAiB,EAAA1P,KAAAyO,KAEAiB,GAGAumE,GAAA,WACA,GAAAC,KAMA,OALAjpF,MAAAi3C,WAAA,SAAAz1B,GACAA,EAAA9W,UACAu+E,EAAAl2E,KAAAyO,KAGAynE,GAGAC,GAAA,WACA,GAAAp5C,GAAA9vC,KAAAmpF,IAMA,OALAr5C,GAAAjlC,KAAA,SAAA2W,GACAA,IAAAsuB,GACAq5C,EAAAp2E,MAAkB+xB,OAAAtjB,EAAA/T,OAAAlB,OAAAiV,MAGlB2nE,EAuDAtyC,IAAArtC,UAAAktC,GAAAltC,WACAxH,YAAA60C,GACAhsC,KAAA29E,GACAH,UAAAK,GACAzxC,WAAAwxC,GACA5pB,IAAA8pB,GACA7xE,KAAA8xE,GACA7nE,KAAA8nE,GACAryC,UAAAsyC,GACAM,YAAAL,GACAE,OAAAD,GACAG,MAAAD,GACArmE,KAAAs0B,GAQA,IAAAkyC,IAAA,SAAA9oC,GAMA,IALA,GAAAj9C,GACAkN,GAAA+vC,IAAA7qC,SAAAtL,OACA0tC,EAAA,KACAt2B,EAAAs2B,EAEAtnC,GAAA,CACA,GAAAoF,GAAA,GAAAyhC,IAAAkJ,EAAA/vC,EAAA,GACAgR,OAAA5L,OACAkiC,EAAAliC,EACA2qC,EAAAj9C,GAAAi9C,IAAA/vC,GAGA,OACAsnC,OACAI,KAAA12B,IAIAy4B,GAAA,SAAAR,GACA,MAAAjC,IAAA6xC,GAAA5vC,QAqOA6vC,GAAA,SAAA7vC,GAEA,MADAD,IAAAC,GACAA,GAgBA8vC,GAAA,SAAAjyE,GACA,kBACA,MAAAA,KAQArN,GAAA,WAMA,QAAA+vC,GAAAlK,GAYA,MAXAA,GAAAx4B,EAAA6O,EAAA,EAAA2pB,EAAAv4B,EAAA6O,EAAA,EACAwB,EACAkoB,EAAAmH,WAAAqD,GAAA1yB,IACAygE,UAAA9tC,GAAA7iC,EAAA,KACAu/B,WAAAuD,GAAA,IAEA1K,EAAAmH,WAAAqD,GAAAD,KACAguC,UAAA9tC,GAAAH,GAAA,IACAiuC,UAAA9tC,GAAA7iC,EAAAo4B,EAAA11B,EAAAtO,KAAAuD,IAAA8W,EAAAC,KACA6wB,WAAAuD,GAAA1uC,KAAAuD,IAAA8W,EAAAC,IAAA,EAAA0pB,EAAA11B,KAEA01B,EAjBA,GAAAloB,GAAA,KACAzB,EAAA,EACAC,EAAA,EACA1O,EAAA0iC,EA6BA,OAZAJ,GAAApyB,OAAA,SAAAtQ,GACA,MAAAa,WAAA/N,QAAAwd,EAAAsyB,GAAA5iC,GAAA0iC,GAAApyB,GAGAoyB,EAAAx5B,KAAA,SAAAlJ,GACA,MAAAa,WAAA/N,QAAA+b,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA0iC,IAAA7zB,EAAAC,IAGA4zB,EAAAtiC,QAAA,SAAAJ,GACA,MAAAa,WAAA/N,QAAAsN,EAAA,kBAAAJ,KAAAiyE,IAAAjyE,GAAA0iC,GAAAtiC,GAGAsiC,GAuCAwvC,GAAA,SAAAhoE,GACAA,EAAAG,GAAA7V,KAAA6O,MAAA6G,EAAAG,IACAH,EAAAI,GAAA9V,KAAA6O,MAAA6G,EAAAI,IACAJ,EAAAK,GAAA/V,KAAA6O,MAAA6G,EAAAK,IACAL,EAAAM,GAAAhW,KAAA6O,MAAA6G,EAAAM,KAGAu6B,GAAA,SAAA5uC,EAAAkU,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAN,GADAiB,EAAAhV,EAAA/C,SAEApH,KACAkN,EAAAiS,EAAArY,OACA4kB,EAAAvhB,EAAAyK,QAAA2J,EAAAF,GAAAlU,EAAAyK,QAEA5U,EAAAkN,GACAgR,EAAAiB,EAAAnf,GAAAke,EAAAI,KAAAJ,EAAAM,KACAN,EAAAG,KAAAH,EAAAK,GAAAF,GAAAH,EAAAtJ,MAAA8W,GAIAy6D,GAAA,WAMA,QAAAA,GAAA35C,GACA,GAAAt/B,GAAAs/B,EAAA3kC,OAAA,CAOA,OANA2kC,GAAAnuB,GACAmuB,EAAAluB,GAAAlK,EACAo4B,EAAAjuB,GAAAsE,EACA2pB,EAAAhuB,GAAAsE,EAAA5V,EACAs/B,EAAAmH,WAAAyyC,EAAAtjE,EAAA5V,IACAmK,GAAAm1B,EAAAmH,WAAAuyC,IACA15C,EAGA,QAAA45C,GAAAtjE,EAAA5V,GACA,gBAAAgR,GACAA,EAAA9W,UACA2xC,GAAA76B,IAAAG,GAAAyE,GAAA5E,EAAAw1B,MAAA,GAAAxmC,EAAAgR,EAAAK,GAAAuE,GAAA5E,EAAAw1B,MAAA,GAAAxmC,EAEA,IAAAmR,GAAAH,EAAAG,GACAC,EAAAJ,EAAAI,GACAC,EAAAL,EAAAK,GAAAnK,EACAoK,EAAAN,EAAAM,GAAApK,CACAmK,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAN,EAAAG,KACAH,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,MA9BA,GAAAqE,GAAA,EACAC,EAAA,EACA1O,EAAA,EACAiD,GAAA,CA2CA,OAZA8uE,GAAA9uE,MAAA,SAAArD,GACA,MAAAa,WAAA/N,QAAAuQ,IAAArD,EAAAmyE,GAAA9uE,GAGA8uE,EAAAjpE,KAAA,SAAAlJ,GACA,MAAAa,WAAA/N,QAAA+b,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAAmyE,IAAAtjE,EAAAC,IAGAqjE,EAAA/xE,QAAA,SAAAJ,GACA,MAAAa,WAAA/N,QAAAsN,GAAAJ,EAAAmyE,GAAA/xE,GAGA+xE,GAGAE,GAAA,IACAC,IAAe5yC,UACf6yC,MAUAC,GAAA,WAIA,QAAAA,GAAA3hF,GACA,GAAAsU,GACAnZ,EAEAwsC,EACAriC,EACA+T,EAEAuoE,EACAC,EANAx5E,EAAArI,EAAAiC,OAIAqY,EAAA,GAAApG,OAAA7L,GAGAy5E,IAEA,KAAA3mF,EAAA,EAAeA,EAAAkN,IAAOlN,EACtBmZ,EAAAtU,EAAA7E,GAAAke,EAAAiB,EAAAnf,GAAA,GAAAuzC,IAAAp6B,GACA,OAAAstE,EAAA31E,EAAAqI,EAAAnZ,EAAA6E,MAAA4hF,GAAA,MACAC,EAAAL,IAAAnoE,EAAApN,GAAA21E,GACAE,EAAAD,OAAAC,GAAAJ,GAAAroE,EAIA,KAAAle,EAAA,EAAeA,EAAAkN,IAAOlN,EAEtB,GADAke,EAAAiB,EAAAnf,GAAAymF,EAAApvC,EAAAxyC,EAAA7E,KAAA6E,GACA,MAAA4hF,OAAA,IAGO,CAEP,GADAt8E,EAAAw8E,EAAAN,GAAAI,IACAt8E,EAAA,SAAAsV,OAAA,YAAAgnE,EACA,IAAAt8E,IAAAo8E,GAAA,SAAA9mE,OAAA,cAAAgnE,EACAt8E,GAAA/C,SAAA+C,EAAA/C,SAAAqI,KAAAyO,GACA/T,EAAA/C,UAAA8W,GACAA,EAAA/T,aATA,CACA,GAAAqiC,EAAA,SAAA/sB,OAAA,iBACA+sB,GAAAtuB,EAWA,IAAAsuB,EAAA,SAAA/sB,OAAA,UAIA,IAHA+sB,EAAAriC,OAAAm8E,GACA95C,EAAAmH,WAAA,SAAAz1B,GAAoCA,EAAAw1B,MAAAx1B,EAAA/T,OAAAupC,MAAA,IAAoCxmC,IAAOymC,WAAAC,IAC/EpH,EAAAriC,OAAA,KACA+C,EAAA,WAAAuS,OAAA,QAEA,OAAA+sB,GA5CA,GAAA17B,GAAAqmC,GACAE,EAAAD,EAsDA,OARAovC,GAAA11E,GAAA,SAAAkD,GACA,MAAAa,WAAA/N,QAAAgK,EAAA+lC,GAAA7iC,GAAAwyE,GAAA11E,GAGA01E,EAAAnvC,SAAA,SAAArjC,GACA,MAAAa,WAAA/N,QAAAuwC,EAAAR,GAAA7iC,GAAAwyE,GAAAnvC,GAGAmvC,EA0EAtuC,IAAAhyC,UAAAkiB,OAAAC,OAAAkrB,GAAArtC,UA0BA,IAAAwX,IAAA,WAMA,QAAAA,GAAA8uB,GACA,GAAA1xB,GAAAq9B,GAAA3L,EAOA,IAJA1xB,EAAAiqE,UAAA6B,GAAA9rE,EAAA3Q,OAAA8b,GAAAnL,EAAA4P,EACA5P,EAAA64B,WAAAkzC,GAGA5B,EAAAz4C,EAAAmH,WAAAmzC,OAIA,CACA,GAAA5+E,GAAAskC,EACAj4B,EAAAi4B,EACAxuB,EAAAwuB,CACAA,GAAAmH,WAAA,SAAAz1B,GACAA,EAAAlK,EAAA9L,EAAA8L,IAAA9L,EAAAgW,GACAA,EAAAlK,EAAAO,EAAAP,IAAAO,EAAA2J,GACAA,EAAAw1B,MAAA11B,EAAA01B,QAAA11B,EAAAE,IAEA,IAAAgK,GAAAhgB,IAAAqM,EAAA,EAAAywE,EAAA98E,EAAAqM,GAAA,EACAwyE,EAAA7+D,EAAAhgB,EAAA8L,EACA4wD,EAAA/hD,GAAAtO,EAAAP,EAAAkU,EAAA6+D,GACAliB,EAAA/hD,GAAA9E,EAAA01B,OAAA,EACAlH,GAAAmH,WAAA,SAAAz1B,GACAA,EAAAlK,GAAAkK,EAAAlK,EAAA+yE,GAAAniB,EACA1mD,EAAAjK,EAAAiK,EAAAw1B,MAAAmxB,IAIA,MAAAr4B,GAOA,QAAAo6C,GAAA3+D,GACA,GAAA7gB,GAAA6gB,EAAA7gB,SACA4+E,EAAA/9D,EAAA9d,OAAA/C,SACA+vB,EAAAlP,EAAAjoB,EAAAgmF,EAAA/9D,EAAAjoB,EAAA,OACA,IAAAoH,EAAA,CACA0wC,GAAA7vB,EACA,IAAA++D,IAAA5/E,EAAA,GAAAsjB,EAAAtjB,IAAAN,OAAA,GAAA4jB,GAAA,CACAyM,IACAlP,EAAAyC,EAAAyM,EAAAzM,EAAAs6D,EAAA/8D,EAAAhpB,EAAAk4B,EAAAl4B,GACAgpB,EAAAhC,EAAAgC,EAAAyC,EAAAs8D,GAEA/+D,EAAAyC,EAAAs8D,MAEK7vD,KACLlP,EAAAyC,EAAAyM,EAAAzM,EAAAs6D,EAAA/8D,EAAAhpB,EAAAk4B,EAAAl4B,GAEAgpB,GAAA9d,OAAAswB,EAAAwsD,EAAAh/D,EAAAkP,EAAAlP,EAAA9d,OAAAswB,GAAAurD,EAAA,IAIA,QAAAa,GAAA5+D,GACAA,EAAAhpB,EAAA+U,EAAAiU,EAAAyC,EAAAzC,EAAA9d,OAAA8b,EACAgC,EAAAhC,GAAAgC,EAAA9d,OAAA8b,EAcA,QAAAghE,GAAAh/D,EAAAkP,EAAA8gB,GACA,GAAA9gB,EAAA,CAUA,IATA,GAQAygB,GARAsvC,EAAAj/D,EACAk/D,EAAAl/D,EACA+vB,EAAA7gB,EACAiwD,EAAAF,EAAA/8E,OAAA/C,SAAA,GACAigF,EAAAH,EAAAjhE,EACAqhE,EAAAH,EAAAlhE,EACAshE,EAAAvvC,EAAA/xB,EACAuhE,EAAAJ,EAAAnhE,EAEA+xB,EAAAR,GAAAQ,GAAAkvC,EAAA3vC,GAAA2vC,GAAAlvC,GAAAkvC,GACAE,EAAA7vC,GAAA6vC,GACAD,EAAA3vC,GAAA2vC,GACAA,EAAA18E,EAAAwd,EACA2vB,EAAAI,EAAAttB,EAAA68D,EAAAL,EAAAx8D,EAAA28D,EAAArC,EAAAhtC,EAAA/4C,EAAAioF,EAAAjoF,GACA24C,EAAA,IACAH,GAAAM,GAAAC,EAAA/vB,EAAAgwB,GAAAhwB,EAAA2vB,GACAyvC,GAAAzvC,EACA0vC,GAAA1vC,GAEA2vC,GAAAvvC,EAAA/xB,EACAohE,GAAAH,EAAAjhE,EACAuhE,GAAAJ,EAAAnhE,EACAqhE,GAAAH,EAAAlhE,CAEA+xB,KAAAR,GAAA2vC,KACAA,EAAArsE,EAAAk9B,EACAmvC,EAAAlhE,GAAAshE,EAAAD,GAEAJ,IAAA3vC,GAAA6vC,KACAA,EAAAtsE,EAAAosE,EACAE,EAAAnhE,GAAAohE,EAAAG,EACAvvC,EAAAhwB,GAGA,MAAAgwB,GAGA,QAAA6uC,GAAA5oE,GACAA,EAAAlK,GAAA6O,EACA3E,EAAAjK,EAAAiK,EAAAw1B,MAAA5wB,EAxHA,GAAAkiE,GAAA1tC,GACAz0B,EAAA,EACAC,EAAA,EACAmiE,EAAA,IAoIA,OAZAvnE,GAAAsnE,WAAA,SAAAhxE,GACA,MAAAa,WAAA/N,QAAAk+E,EAAAhxE,EAAA0J,GAAAsnE,GAGAtnE,EAAAR,KAAA,SAAAlJ,GACA,MAAAa,WAAA/N,QAAAm+E,GAAA,EAAApiE,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA0J,GAAAunE,EAAA,MAAApiE,EAAAC,IAGApF,EAAAunE,SAAA,SAAAjxE,GACA,MAAAa,WAAA/N,QAAAm+E,GAAA,EAAApiE,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA0J,GAAAunE,GAAApiE,EAAAC,GAAA,MAGApF,GAGAs7B,GAAA,SAAA7uC,EAAAkU,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAN,GADAiB,EAAAhV,EAAA/C,SAEApH,KACAkN,EAAAiS,EAAArY,OACA4kB,EAAAvhB,EAAAyK,QAAA4J,EAAAF,GAAAnU,EAAAyK,QAEA5U,EAAAkN,GACAgR,EAAAiB,EAAAnf,GAAAke,EAAAG,KAAAH,EAAAK,KACAL,EAAAI,KAAAJ,EAAAM,GAAAF,GAAAJ,EAAAtJ,MAAA8W,GAIA48B,IAAA,EAAA9/C,KAAA+P,KAAA,MAgDAkvE,GAAA,QAAAxqB,IAAA5kB,GAEA,QAAAovC,GAAAt9E,EAAAkU,EAAAC,EAAAC,EAAAC,GACA45B,GAAAC,EAAAluC,EAAAkU,EAAAC,EAAAC,EAAAC,GAOA,MAJAipE,GAAApvC,MAAA,SAAArkC,GACA,MAAAipD,KAAAjpD,MAAA,EAAAA,EAAA,IAGAyzE,GACCn/B,IAEDo/B,GAAA,WAYA,QAAAC,GAAAn7C,GAQA,MAPAA,GAAAnuB,GACAmuB,EAAAluB,GAAA,EACAkuB,EAAAjuB,GAAAsE,EACA2pB,EAAAhuB,GAAAsE,EACA0pB,EAAAmH,WAAAyyC,GACAwB,GAAA,GACAvwE,GAAAm1B,EAAAmH,WAAAuyC,IACA15C,EAGA,QAAA45C,GAAAloE,GACA,GAAA4F,GAAA8jE,EAAA1pE,EAAAw1B,OACAr1B,EAAAH,EAAAG,GAAAyF,EACAxF,EAAAJ,EAAAI,GAAAwF,EACAvF,EAAAL,EAAAK,GAAAuF,EACAtF,EAAAN,EAAAM,GAAAsF,CACAvF,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAN,EAAAG,KACAH,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,KACAN,EAAA9W,WACA0c,EAAA8jE,EAAA1pE,EAAAw1B,MAAA,GAAApT,EAAApiB,GAAA,EACAG,GAAAwpE,EAAA3pE,GAAA4F,EACAxF,GAAAwpE,EAAA5pE,GAAA4F,EACAvF,GAAAwpE,EAAA7pE,GAAA4F,EACAtF,GAAAwpE,EAAA9pE,GAAA4F,EACAvF,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAypE,EAAA/pE,EAAAG,EAAAC,EAAAC,EAAAC,IA1CA,GAAAypE,GAAAR,GACApwE,GAAA,EACAwL,EAAA,EACAC,EAAA,EACA8kE,GAAA,GACAtnD,EAAAwW,GACAgxC,EAAAhxC,GACAixC,EAAAjxC,GACAkxC,EAAAlxC,GACA+wC,EAAA/wC,EA6EA,OAxCA6wC,GAAAtwE,MAAA,SAAArD,GACA,MAAAa,WAAA/N,QAAAuQ,IAAArD,EAAA2zE,GAAAtwE,GAGAswE,EAAAzqE,KAAA,SAAAlJ,GACA,MAAAa,WAAA/N,QAAA+b,GAAA7O,EAAA,GAAA8O,GAAA9O,EAAA,GAAA2zE,IAAA9kE,EAAAC,IAGA6kE,EAAAM,KAAA,SAAAj0E,GACA,MAAAa,WAAA/N,QAAAmhF,EAAApxC,GAAA7iC,GAAA2zE,GAAAM,GAGAN,EAAAvzE,QAAA,SAAAJ,GACA,MAAAa,WAAA/N,OAAA6gF,EAAArnD,aAAAtsB,GAAAusB,aAAAvsB,GAAA2zE,EAAArnD,gBAGAqnD,EAAArnD,aAAA,SAAAtsB,GACA,MAAAa,WAAA/N,QAAAw5B,EAAA,kBAAAtsB,KAAAiyE,IAAAjyE,GAAA2zE,GAAArnD,GAGAqnD,EAAApnD,aAAA,SAAAvsB,GACA,MAAAa,WAAA/N,OAAA6gF,EAAAG,WAAA9zE,GAAA+zE,aAAA/zE,GAAAg0E,cAAAh0E,GAAA6zE,YAAA7zE,GAAA2zE,EAAAG,cAGAH,EAAAG,WAAA,SAAA9zE,GACA,MAAAa,WAAA/N,QAAAghF,EAAA,kBAAA9zE,KAAAiyE,IAAAjyE,GAAA2zE,GAAAG,GAGAH,EAAAI,aAAA,SAAA/zE,GACA,MAAAa,WAAA/N,QAAAihF,EAAA,kBAAA/zE,KAAAiyE,IAAAjyE,GAAA2zE,GAAAI,GAGAJ,EAAAK,cAAA,SAAAh0E,GACA,MAAAa,WAAA/N,QAAAkhF,EAAA,kBAAAh0E,KAAAiyE,IAAAjyE,GAAA2zE,GAAAK,GAGAL,EAAAE,YAAA,SAAA7zE,GACA,MAAAa,WAAA/N,QAAA+gF,EAAA,kBAAA7zE,KAAAiyE,IAAAjyE,GAAA2zE,GAAAE,GAGAF,GAGAO,GAAA,SAAA/9E,EAAAkU,EAAAC,EAAAC,EAAAC,GAWA,QAAA2nE,GAAAnmF,EAAAie,EAAArJ,EAAAyJ,EAAAC,EAAAC,EAAAC,GACA,GAAAxe,GAAAie,EAAA,GACA,GAAAC,GAAAiB,EAAAnf,EAGA,OAFAke,GAAAG,KAAAH,EAAAI,KACAJ,EAAAK,KAAAL,EAAAM,KACA,OAQA,IALA,GAAA2pE,GAAAngB,EAAAhoE,GACAooF,EAAAxzE,EAAA,EAAAuzE,EACAz8D,EAAA1rB,EAAA,EACAw5D,EAAAv7C,EAAA,EAEAyN,EAAA8tC,GAAA,CACA,GAAAC,GAAA/tC,EAAA8tC,IAAA,CACAwO,GAAAvO,GAAA2uB,EAAA18D,EAAA+tC,EAAA,EACAD,EAAAC,EAGA,GAAA4uB,GAAArgB,EAAAt8C,GAAAy8D,EACAG,EAAA1zE,EAAAyzE,CAEA,IAAA7pE,EAAAF,EAAAC,EAAAF,EAAA,CACA,GAAAkqE,IAAAjqE,EAAAgqE,EAAA9pE,EAAA6pE,GAAAzzE,CACAuxE,GAAAnmF,EAAA0rB,EAAA28D,EAAAhqE,EAAAC,EAAAC,EAAAgqE,GACApC,EAAAz6D,EAAAzN,EAAAqqE,EAAAjqE,EAAAkqE,EAAAhqE,EAAAC,OACK,CACL,GAAAgqE,IAAAnqE,EAAAiqE,EAAA/pE,EAAA8pE,GAAAzzE,CACAuxE,GAAAnmF,EAAA0rB,EAAA28D,EAAAhqE,EAAAC,EAAAkqE,EAAAhqE,GACA2nE,EAAAz6D,EAAAzN,EAAAqqE,EAAAE,EAAAlqE,EAAAC,EAAAC,IAvCA,GACAxe,GACAu7D,EAFAp8C,EAAAhV,EAAA/C,SACA8F,EAAAiS,EAAArY,OACAkhE,EAAA,GAAAjvD,OAAA7L,EAAA,EAEA,KAAA86D,EAAA,GAAAzM,EAAAv7D,EAAA,EAA6BA,EAAAkN,IAAOlN,EACpCgoE,EAAAhoE,EAAA,GAAAu7D,GAAAp8C,EAAAnf,GAAA4U,KAGAuxE,GAAA,EAAAj5E,EAAA/C,EAAAyK,MAAAyJ,EAAAC,EAAAC,EAAAC,IAoCAiqE,GAAA,SAAAt+E,EAAAkU,EAAAC,EAAAC,EAAAC,IACA,EAAArU,EAAAupC,MAAAsF,GAAAD,IAAA5uC,EAAAkU,EAAAC,EAAAC,EAAAC,IAGAkqE,GAAA,QAAAzrB,IAAA5kB,GAEA,QAAAqwC,GAAAv+E,EAAAkU,EAAAC,EAAAC,EAAAC,GACA,IAAAzd,EAAAoJ,EAAAw+E,YAAA5nF,EAAAs3C,UAUA,IATA,GAAAt3C,GACAmK,EACAiU,EACAnf,EAEAkN,EADA+Q,KAEAgI,EAAAllB,EAAA+F,OACA8N,EAAAzK,EAAAyK,QAEAqJ,EAAAgI,GAAA,CAEA,IADA/a,EAAAnK,EAAAkd,GAAAkB,EAAAjU,EAAA9D,SACApH,EAAAkL,EAAA0J,MAAA,EAAA1H,EAAAiS,EAAArY,OAAiD9G,EAAAkN,IAAOlN,EAAAkL,EAAA0J,OAAAuK,EAAAnf,GAAA4U,KACxD1J,GAAA4tC,KAAAC,GAAA7tC,EAAAmT,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAApT,EAAA0J,SACAokC,GAAA9tC,EAAAmT,EAAAC,EAAAD,IAAAE,EAAAF,GAAAnT,EAAA0J,QAAA4J,GACA5J,GAAA1J,EAAA0J,UAGAzK,GAAAw+E,UAAA5nF,EAAAq3C,GAAAC,EAAAluC,EAAAkU,EAAAC,EAAAC,EAAAC,GACAzd,EAAAs3C,QAQA,MAJAqwC,GAAArwC,MAAA,SAAArkC,GACA,MAAAipD,KAAAjpD,MAAA,EAAAA,EAAA,IAGA00E,GACCpgC,IAEDsgC,GAAA,SAAA50E,EAAAC,GAMA,QAAA40E,KACA,GAAA7oF,GAEAke,EADAhR,EAAAiS,EAAArY,OAEAgiF,EAAA,EACAC,EAAA,CAEA,KAAA/oF,EAAA,EAAeA,EAAAkN,IAAOlN,EACtBke,EAAAiB,EAAAnf,GAAA8oF,GAAA5qE,EAAAlK,EAAA+0E,GAAA7qE,EAAAjK,CAGA,KAAA60E,IAAA57E,EAAA8G,EAAA+0E,IAAA77E,EAAA+G,EAAAjU,EAAA,EAAiDA,EAAAkN,IAAOlN,EACxDke,EAAAiB,EAAAnf,GAAAke,EAAAlK,GAAA80E,EAAA5qE,EAAAjK,GAAA80E,EAjBA,GAAA5pE,EAiCA,OA/BA,OAAAnL,MAAA,GACA,MAAAC,MAAA,GAkBA40E,EAAArmC,WAAA,SAAAvjD,GACAkgB,EAAAlgB,GAGA4pF,EAAA70E,EAAA,SAAA/U,GACA,MAAA4V,WAAA/N,QAAAkN,GAAA/U,EAAA4pF,GAAA70E,GAGA60E,EAAA50E,EAAA,SAAAhV,GACA,MAAA4V,WAAA/N,QAAAmN,GAAAhV,EAAA4pF,GAAA50E,GAGA40E,GAGAG,GAAA,SAAAh1E,GACA,kBACA,MAAAA,KAIAi1E,GAAA,WACA,aAAAzgF,KAAA8yD,SAAA,KAWA4tB,GAAA,SAAA5kE,GAQA,QAAAukE,KAoBA,QAAAjqF,GAAAuqF,EAAA9qE,EAAAC,EAAAC,EAAAC,GACA,GAAA3Z,GAAAskF,EAAAtkF,KAAAukF,EAAAD,EAAAryE,IAAAuyE,EAAAD,CACA,MAAAvkF,EAiBA,MAAAwZ,GAAA88C,EAAArkD,GAAAyH,EAAA48C,EAAArkD,GAAAwH,EAAAgrE,EAAAxyE,GAAA0H,EAAA8qE,EAAAxyE,CAhBA,IAAAjS,EAAA8B,MAAA3G,EAAA,CACA,GAAAgU,GAAAmnD,EAAAt2D,EAAAmP,EAAAnP,EAAAq0C,GACAjlC,EAAAq1E,EAAAzkF,EAAAoP,EAAApP,EAAAu0C,GACAhmC,EAAAY,IAAAC,GACAb,GAAA0D,MACA,IAAA9C,MAAAi1E,KAAA71E,GAAAY,KACA,IAAAC,MAAAg1E,KAAA71E,GAAAa,KACAb,GAAA0D,GAAA1D,EAAA5K,KAAA+P,KAAAnF,OAAAm2E,EACArrE,EAAAg7B,KAAAllC,GAAAZ,IAAA0D,GAAAsyE,OAAAI,EAAAJ,IACAlrE,EAAAk7B,KAAAnlC,GAAAb,GAAA0D,EACAjS,EAAAq0C,IAAAllC,GAAA8C,EAAA,EAAAA,GACAjS,EAAAu0C,IAAAnlC,EAAA6C,KAzBA,OARA9W,GACA0d,EACAQ,EACAi9C,EACAmuB,EACAD,EACAG,EANAt8E,EAAAiS,EAAArY,OAQA4kB,EAAA,EAAmBA,EAAA+9D,IAAgB/9D,EAEnC,IADAhO,EAAAwB,EAAAC,EAAA85B,GAAAE,IAAA6nB,WAAA0oB,GACA1pF,EAAA,EAAiBA,EAAAkN,IAAOlN,EACxBke,EAAAiB,EAAAnf,GACAqpF,EAAAM,EAAA3pF,GAAAwpF,EAAAH,IACAluB,EAAAj9C,EAAAlK,EAAAkK,EAAAg7B,GACAowC,EAAAprE,EAAAjK,EAAAiK,EAAAk7B,GACA17B,EAAAwiD,MAAAthE,GA2BA,QAAA8qF,GAAAP,GACA,GAAAA,EAAAtkF,KAAA,MAAAskF,GAAAryE,EAAA6yE,EAAAR,EAAAtkF,KAAA8B,MACA,QAAA3G,GAAAmpF,EAAAryE,EAAA,EAA4B9W,EAAA,IAAOA,EACnCmpF,EAAAnpF,IAAAmpF,EAAAnpF,GAAA8W,EAAAqyE,EAAAryE,IACAqyE,EAAAryE,EAAAqyE,EAAAnpF,GAAA8W,GAtDA,GAAAqI,GACAwqE,EACAJ,EAAA,EACAE,EAAA,CAyEA,OAvEA,kBAAAnlE,OAAA0kE,GAAA,MAAA1kE,EAAA,GAAAA,IAsDAukE,EAAArmC,WAAA,SAAAvjD,GACA,GAAAe,GAAAkN,GAAAiS,EAAAlgB,GAAA6H,MACA,KADkC6iF,EAAA,GAAA5wE,OAAA7L,GAClClN,EAAA,EAAeA,EAAAkN,IAAOlN,EAAA2pF,EAAA3pF,IAAAskB,EAAAnF,EAAAnf,KAAAmf,IAGtB0pE,EAAAY,WAAA,SAAAxqF,GACA,MAAA4V,WAAA/N,QAAA2iF,GAAAxqF,EAAA4pF,GAAAY,GAGAZ,EAAAU,SAAA,SAAAtqF,GACA,MAAA4V,WAAA/N,QAAAyiF,GAAAtqF,EAAA4pF,GAAAU,GAGAV,EAAAvkE,OAAA,SAAArlB,GACA,MAAA4V,WAAA/N,QAAAwd,EAAA,kBAAArlB,KAAA+pF,IAAA/pF,GAAA4pF,GAAAvkE,GAGAukE,GAOAe,GAAA,SAAA/D,GAaA,QAAAgE,GAAAD,GACA,SAAAphF,KAAAuD,IAAAyN,EAAAowE,EAAApoD,OAAA76B,OAAA6S,EAAAowE,EAAA3gF,OAAAtC,QAGA,QAAAkiF,GAAA1iE,GACA,OAAAuF,GAAA,EAAAxe,EAAA24E,EAAA/+E,OAAqC4kB,EAAA+9D,IAAgB/9D,EACrD,OAAAk+D,GAAApoD,EAAAv4B,EAAA+K,EAAAC,EAAAb,EAAA1I,EAAA1K,EAAA,EAAuDA,EAAAkN,IAAOlN,EAC9D4pF,EAAA/D,EAAA7lF,GAAAwhC,EAAAooD,EAAApoD,OAAAv4B,EAAA2gF,EAAA3gF,OACA+K,EAAA/K,EAAA+K,EAAA/K,EAAAiwC,GAAA1X,EAAAxtB,EAAAwtB,EAAA0X,IAAA+vC,KACAh1E,EAAAhL,EAAAgL,EAAAhL,EAAAmwC,GAAA5X,EAAAvtB,EAAAutB,EAAA4X,IAAA6vC,KACA71E,EAAA5K,KAAA+P,KAAAvE,IAAAC,KACAb,KAAA02E,EAAA9pF,IAAAoT,EAAA+S,EAAA4jE,EAAA/pF,GACAgU,GAAAZ,EAAAa,GAAAb,EACAnK,EAAAiwC,IAAAllC,GAAAtJ,EAAAs/E,EAAAhqF,IACAiJ,EAAAmwC,IAAAnlC,EAAAvJ,EACA82B,EAAA0X,IAAAllC,GAAAtJ,EAAA,EAAAA,GACA82B,EAAA4X,IAAAnlC,EAAAvJ,EAKA,QAAA83C,KACA,GAAArjC,EAAA,CAEA,GAAAnf,GAIA4pF,EAHA18E,EAAAiS,EAAArY,OACAmf,EAAA4/D,EAAA/+E,OACAmjF,EAAAhwE,EAAAkF,EAAArO,EAGA,KAAA9Q,EAAA,EAAAwZ,EAAA,GAAAT,OAAA7L,GAAqClN,EAAAkN,IAAOlN,EAC5CwZ,EAAAxZ,GAAA,CAGA,KAAAA,EAAA,EAAeA,EAAAimB,IAAOjmB,EACtB4pF,EAAA/D,EAAA7lF,GAAA4pF,EAAAjjF,MAAA3G,EACA,gBAAA4pF,GAAApoD,SAAAooD,EAAApoD,OAAAyoD,EAAA9+E,IAAAy+E,EAAApoD,SACA,gBAAAooD,GAAA3gF,SAAA2gF,EAAA3gF,OAAAghF,EAAA9+E,IAAAy+E,EAAA3gF,WACAuQ,EAAAowE,EAAApoD,OAAA76B,SAAA6S,EAAAowE,EAAA3gF,OAAAtC,MAGA,KAAA3G,EAAA,EAAAgqF,EAAA,GAAAjxE,OAAAkN,GAAoCjmB,EAAAimB,IAAOjmB,EAC3C4pF,EAAA/D,EAAA7lF,GAAAgqF,EAAAhqF,GAAAwZ,EAAAowE,EAAApoD,OAAA76B,QAAA6S,EAAAowE,EAAApoD,OAAA76B,OAAA6S,EAAAowE,EAAA3gF,OAAAtC,OAGAojF,GAAA,GAAAhxE,OAAAkN,GAAAikE,IACAJ,EAAA,GAAA/wE,OAAAkN,GAAAkkE,KAGA,QAAAD,KACA,GAAA/qE,EAEA,OAAAnf,GAAA,EAAAkN,EAAA24E,EAAA/+E,OAAqC9G,EAAAkN,IAAOlN,EAC5C+pF,EAAA/pF,IAAAupF,EAAA1D,EAAA7lF,KAAA6lF,GAIA,QAAAsE,KACA,GAAAhrE,EAEA,OAAAnf,GAAA,EAAAkN,EAAA24E,EAAA/+E,OAAqC9G,EAAAkN,IAAOlN,EAC5C8pF,EAAA9pF,IAAAoqF,EAAAvE,EAAA7lF,KAAA6lF,GAzEA,GAEAkE,GAEAD,EACA3qE,EACA3F,EACAwwE,EAPAl5E,EAAAuoC,GACAkwC,EAAAM,EAEAO,EAAApB,GAAA,IAKAS,EAAA,CA8FA,OA5FA,OAAA5D,UAmEAgD,EAAArmC,WAAA,SAAAvjD,GACAkgB,EAAAlgB,EACAujD,KAGAqmC,EAAAhD,MAAA,SAAA5mF,GACA,MAAA4V,WAAA/N,QAAA++E,EAAA5mF,EAAAujD,IAAAqmC,GAAAhD,GAGAgD,EAAA/3E,GAAA,SAAA7R,GACA,MAAA4V,WAAA/N,QAAAgK,EAAA7R,EAAA4pF,GAAA/3E,GAGA+3E,EAAAY,WAAA,SAAAxqF,GACA,MAAA4V,WAAA/N,QAAA2iF,GAAAxqF,EAAA4pF,GAAAY,GAGAZ,EAAAU,SAAA,SAAAtqF,GACA,MAAA4V,WAAA/N,QAAAyiF,EAAA,kBAAAtqF,KAAA+pF,IAAA/pF,GAAAirF,IAAArB,GAAAU,GAGAV,EAAAuB,SAAA,SAAAnrF,GACA,MAAA4V,WAAA/N,QAAAsjF,EAAA,kBAAAnrF,KAAA+pF,IAAA/pF,GAAAkrF,IAAAtB,GAAAuB,GAGAvB,GAWAwB,GAAA,GACAC,GAAA9hF,KAAA8O,IAAA,EAAA9O,KAAA+P,KAAA,IAEAgyE,GAAA,SAAAprE,GAaA,QAAA7W,KACAklC,IACAphC,EAAAxD,KAAA,OAAA2hF,GACApkE,EAAAqkE,IACAC,EAAAlxE,OACAnN,EAAAxD,KAAA,MAAA2hF,IAIA,QAAA/8C,KACA,GAAAxtC,GAAAke,EAAAhR,EAAAiS,EAAArY,MAQA,KANAqf,IAAAukE,EAAAvkE,GAAAwkE,EAEAC,EAAArjF,KAAA,SAAAshF,GACAA,EAAA1iE,KAGAnmB,EAAA,EAAeA,EAAAkN,IAAOlN,EACtBke,EAAAiB,EAAAnf,GACA,MAAAke,EAAAk+B,GAAAl+B,EAAAlK,GAAAkK,EAAAg7B,IAAA2xC,GACA3sE,EAAAlK,EAAAkK,EAAAk+B,GAAAl+B,EAAAg7B,GAAA,GACA,MAAAh7B,EAAAm+B,GAAAn+B,EAAAjK,GAAAiK,EAAAk7B,IAAAyxC,GACA3sE,EAAAjK,EAAAiK,EAAAm+B,GAAAn+B,EAAAk7B,GAAA,GAIA,QAAA0xC,KACA,OAAA5sE,GAAAle,EAAA,EAAAkN,EAAAiS,EAAArY,OAA2C9G,EAAAkN,IAAOlN,EAAA,CAElD,GADAke,EAAAiB,EAAAnf,GAAAke,EAAAvX,MAAA3G,EACA2d,MAAAO,EAAAlK,IAAA2J,MAAAO,EAAAjK,GAAA,CACA,GAAAqQ,GAAA+lE,GAAA7hF,KAAA+P,KAAAvY,GAAAqkB,EAAArkB,EAAAsqF,EACApsE,GAAAlK,EAAAsQ,EAAA9b,KAAA8S,IAAA+I,GACAnG,EAAAjK,EAAAqQ,EAAA9b,KAAAiT,IAAA4I,IAEA1G,MAAAO,EAAAg7B,KAAAv7B,MAAAO,EAAAk7B,OACAl7B,EAAAg7B,GAAAh7B,EAAAk7B,GAAA,IAKA,QAAA2xC,GAAAlC,GAEA,MADAA,GAAArmC,YAAAqmC,EAAArmC,WAAArjC,GACA0pE,EAvDA,GAAA0B,GACApkE,EAAA,EACAqkE,EAAA,KACAG,EAAA,EAAAniF,KAAAgQ,IAAAgyE,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAA3wE,IACAwwE,EAAAr4D,GAAA9pB,GACA8D,EAAA6jB,GAAA,aAoDA,OAlDA,OAAA9Q,UAgDA2rE,IAEAP,GACA/8C,OAEAjb,QAAA,WACA,MAAAk4D,GAAAl4D,QAAAjqB,GAAAiiF,GAGAhxE,KAAA,WACA,MAAAkxE,GAAAlxE,OAAAgxE,GAGAprE,MAAA,SAAAlgB,GACA,MAAA4V,WAAA/N,QAAAqY,EAAAlgB,EAAA6rF,IAAAF,EAAArjF,KAAAwjF,GAAAR,GAAAprE,GAGAgH,MAAA,SAAAlnB,GACA,MAAA4V,WAAA/N,QAAAqf,GAAAlnB,EAAAsrF,GAAApkE,GAGAqkE,SAAA,SAAAvrF,GACA,MAAA4V,WAAA/N,QAAA0jF,GAAAvrF,EAAAsrF,GAAAC,GAGAG,WAAA,SAAA1rF,GACA,MAAA4V,WAAA/N,QAAA6jF,GAAA1rF,EAAAsrF,IAAAI,GAGAD,YAAA,SAAAzrF,GACA,MAAA4V,WAAA/N,QAAA4jF,GAAAzrF,EAAAsrF,GAAAG,GAGAG,cAAA,SAAA5rF,GACA,MAAA4V,WAAA/N,QAAA+jF,EAAA,EAAA5rF,EAAAsrF,GAAA,EAAAM,GAGAhC,MAAA,SAAAv4D,EAAArxB,GACA,MAAA4V,WAAA/N,OAAA,SAAA7H,EAAA2rF,EAAA98E,OAAAwiB,GAAAs6D,EAAAvwE,IAAAiW,EAAAy6D,EAAA9rF,IAAAsrF,GAAAK,EAAAz/E,IAAAmlB,IAGAlqB,KAAA,SAAA4N,EAAAC,EAAAqQ,GACA,GAEAzB,GACAC,EACAC,EACA7E,EACAtR,EANA5M,EAAA,EACAkN,EAAAiS,EAAArY,MAUA,KAHA,MAAAwd,IAAAxF,IACAwF,KAEAtkB,EAAA,EAAiBA,EAAAkN,IAAOlN,EACxBke,EAAAiB,EAAAnf,GACA6iB,EAAA7O,EAAAkK,EAAAlK,EACA8O,EAAA7O,EAAAiK,EAAAjK,EACA8O,EAAAF,IAAAC,IACAC,EAAAuB,IAAA1X,EAAAsR,EAAAoG,EAAAvB,EAGA,OAAAnW,IAGAnQ,GAAA,SAAA6zB,EAAArxB,GACA,MAAA4V,WAAA/N,OAAA,GAAAsF,EAAA3P,GAAA6zB,EAAArxB,GAAAsrF,GAAAn+E,EAAA3P,GAAA6zB,MAKA06D,GAAA,WAUA,QAAAnC,GAAA5pF,GACA,GAAAe,GAAAkN,EAAAiS,EAAArY,OAAA4W,EAAAwB,EAAAC,EAAAm6B,GAAAC,IAAAynB,WAAAiqB,EACA,KAAA9kE,EAAAlnB,EAAAe,EAAA,EAA0BA,EAAAkN,IAAOlN,EAAAke,EAAAiB,EAAAnf,GAAA0d,EAAAwiD,MAAAthE,GAGjC,QAAA4jD,KACA,GAAArjC,EAAA,CACA,GAAAnf,GAAAkN,EAAAiS,EAAArY,MAEA,KADAijF,EAAA,GAAAhxE,OAAA7L,GACAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EAAA+pF,EAAA/pF,IAAAupF,EAAApqE,EAAAnf,KAAAmf,IAGtB,QAAA8rE,GAAA9B,GACA,GAAA/oE,GAAAzV,EAAAo4D,EAAAC,EAAAhjE,EAAAupF,EAAA,CAGA,IAAAJ,EAAAriF,OAAA,CACA,IAAAi8D,EAAAC,EAAAhjE,EAAA,EAA+BA,EAAA,IAAOA,GACtCogB,EAAA+oE,EAAAnpF,MAAA2K,EAAAyV,EAAAxL,SACA20E,GAAA5+E,EAAAo4D,GAAAp4D,EAAAyV,EAAApM,EAAAgvD,GAAAr4D,EAAAyV,EAAAnM,EAGAk1E,GAAAn1E,EAAA+uD,EAAAwmB,EACAJ,EAAAl1E,EAAA+uD,EAAAumB,MAIA,CACAnpE,EAAA+oE,EACA/oE,EAAApM,EAAAoM,EAAAvb,KAAAmP,EACAoM,EAAAnM,EAAAmM,EAAAvb,KAAAoP,CACA,GAAAs1E,IAAAQ,EAAA3pE,EAAAvb,KAAA8B,aACAyZ,IAAA9N,MAGA62E,EAAAv0E,MAAA20E,EAGA,QAAA3qF,GAAAuqF,EAAA5qE,EAAAtf,EAAAuiB,GACA,IAAA2nE,EAAAv0E,MAAA,QAEA,IAAAmuD,GAAAomB,EAAAn1E,EAAAkK,EAAAlK,EACAgvD,EAAAmmB,EAAAl1E,EAAAiK,EAAAjK,EACAkjB,EAAA3V,EAAAjD,EACAnL,EAAA2vD,IAAAC,GAIA,IAAA7rC,IAAA+zD,EAAA93E,EAQA,MAPAA,GAAA+3E,IACA,IAAApoB,MAAAkmB,KAAA71E,GAAA2vD,KACA,IAAAC,MAAAimB,KAAA71E,GAAA4vD,KACA5vD,EAAAg4E,IAAAh4E,EAAA5K,KAAA+P,KAAA6yE,EAAAh4E,IACA8K,EAAAg7B,IAAA6pB,EAAAomB,EAAAv0E,MAAAuR,EAAA/S,EACA8K,EAAAk7B,IAAA4pB,EAAAmmB,EAAAv0E,MAAAuR,EAAA/S,IAEA,CAIA,MAAA+1E,EAAAriF,QAAAsM,GAAA+3E,GAAA,EAGAhC,EAAAtkF,OAAAqZ,GAAAirE,EAAA72E,QACA,IAAAywD,MAAAkmB,KAAA71E,GAAA2vD,KACA,IAAAC,MAAAimB,KAAA71E,GAAA4vD,KACA5vD,EAAAg4E,IAAAh4E,EAAA5K,KAAA+P,KAAA6yE,EAAAh4E,IAGA,GAAA+1E,GAAAtkF,OAAAqZ,IACAiZ,EAAA4yD,EAAAZ,EAAAtkF,KAAA8B,OAAAwf,EAAA/S,EACA8K,EAAAg7B,IAAA6pB,EAAA5rC,EACAjZ,EAAAk7B,IAAA4pB,EAAA7rC,SACKgyD,IAAA72E,OAlFL,GAAA6M,GACAjB,EACAiI,EAEA4jE,EADAR,EAAAP,QAEAoC,EAAA,EACAD,EAAArsE,IACAosE,EAAA,GAmGA,OArBArC,GAAArmC,WAAA,SAAAvjD,GACAkgB,EAAAlgB,EACAujD,KAGAqmC,EAAAU,SAAA,SAAAtqF,GACA,MAAA4V,WAAA/N,QAAAyiF,EAAA,kBAAAtqF,KAAA+pF,IAAA/pF,GAAAujD,IAAAqmC,GAAAU,GAGAV,EAAAwC,YAAA,SAAApsF,GACA,MAAA4V,WAAA/N,QAAAskF,EAAAnsF,IAAA4pF,GAAArgF,KAAA+P,KAAA6yE,IAGAvC,EAAAyC,YAAA,SAAArsF,GACA,MAAA4V,WAAA/N,QAAAqkF,EAAAlsF,IAAA4pF,GAAArgF,KAAA+P,KAAA4yE,IAGAtC,EAAA7xB,MAAA,SAAA/3D,GACA,MAAA4V,WAAA/N,QAAAokF,EAAAjsF,IAAA4pF,GAAArgF,KAAA+P,KAAA2yE,IAGArC,GAGA0C,GAAA,SAAAv3E,GAQA,QAAA60E,GAAA1iE,GACA,OAAAjI,GAAAle,EAAA,EAAAkN,EAAAiS,EAAArY,OAA2C9G,EAAAkN,IAAOlN,EAClDke,EAAAiB,EAAAnf,GAAAke,EAAAg7B,KAAAt6B,EAAA5e,GAAAke,EAAAlK,GAAA+1E,EAAA/pF,GAAAmmB,EAIA,QAAAq8B,KACA,GAAArjC,EAAA,CACA,GAAAnf,GAAAkN,EAAAiS,EAAArY,MAGA,KAFAijF,EAAA,GAAAhxE,OAAA7L,GACA0R,EAAA,GAAA7F,OAAA7L,GACAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB+pF,EAAA/pF,GAAA2d,MAAAiB,EAAA5e,IAAAgU,EAAAmL,EAAAnf,KAAAmf,IAAA,GAAAoqE,EAAApqE,EAAAnf,KAAAmf,IAnBA,GACAA,GACA4qE,EACAnrE,EAHA2qE,EAAAP,GAAA,GAoCA,OA/BA,kBAAAh1E,OAAAg1E,GAAA,MAAAh1E,EAAA,GAAAA,IAkBA60E,EAAArmC,WAAA,SAAAvjD,GACAkgB,EAAAlgB,EACAujD,KAGAqmC,EAAAU,SAAA,SAAAtqF,GACA,MAAA4V,WAAA/N,QAAAyiF,EAAA,kBAAAtqF,KAAA+pF,IAAA/pF,GAAAujD,IAAAqmC,GAAAU,GAGAV,EAAA70E,EAAA,SAAA/U,GACA,MAAA4V,WAAA/N,QAAAkN,EAAA,kBAAA/U,KAAA+pF,IAAA/pF,GAAAujD,IAAAqmC,GAAA70E,GAGA60E,GAGA2C,GAAA,SAAAv3E,GAQA,QAAA40E,GAAA1iE,GACA,OAAAjI,GAAAle,EAAA,EAAAkN,EAAAiS,EAAArY,OAA2C9G,EAAAkN,IAAOlN,EAClDke,EAAAiB,EAAAnf,GAAAke,EAAAk7B,KAAAv6B,EAAA7e,GAAAke,EAAAjK,GAAA81E,EAAA/pF,GAAAmmB,EAIA,QAAAq8B,KACA,GAAArjC,EAAA,CACA,GAAAnf,GAAAkN,EAAAiS,EAAArY,MAGA,KAFAijF,EAAA,GAAAhxE,OAAA7L,GACA2R,EAAA,GAAA9F,OAAA7L,GACAlN,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB+pF,EAAA/pF,GAAA2d,MAAAkB,EAAA7e,IAAAiU,EAAAkL,EAAAnf,KAAAmf,IAAA,GAAAoqE,EAAApqE,EAAAnf,KAAAmf,IAnBA,GACAA,GACA4qE,EACAlrE,EAHA0qE,EAAAP,GAAA,GAoCA,OA/BA,kBAAA/0E,OAAA+0E,GAAA,MAAA/0E,EAAA,GAAAA,IAkBA40E,EAAArmC,WAAA,SAAAvjD,GACAkgB,EAAAlgB,EACAujD,KAGAqmC,EAAAU,SAAA,SAAAtqF,GACA,MAAA4V,WAAA/N,QAAAyiF,EAAA,kBAAAtqF,KAAA+pF,IAAA/pF,GAAAujD,IAAAqmC,GAAAU,GAGAV,EAAA50E,EAAA,SAAAhV,GACA,MAAA4V,WAAA/N,QAAAmN,EAAA,kBAAAhV,KAAA+pF,IAAA/pF,GAAAujD,IAAAqmC,GAAA50E,GAGA40E,GAOAhvC,GAAA,WACA39C,EAAAkQ,MAAAO,iBACAzQ,EAAAkQ,MAAAuB,4BAGA23C,GAAA,SAAA5L,GACA,GAAAlN,GAAAkN,EAAA10C,SAAAmoB,gBACAysB,EAAA/H,GAAA6H,GAAAj9C,GAAA,iBAAAo9C,IAAA,EACA,kBAAArN,GACAoN,EAAAn9C,GAAA,mBAAAo9C,IAAA,IAEArN,EAAAuN,WAAAvN,EAAAt3B,MAAA4kC,cACAtN,EAAAt3B,MAAA4kC,cAAA,SAmBA2xC,GAAA,SAAAz3E,GACA,kBACA,MAAAA,IAiBAgmC,IAAA9zC,UAAAzJ,GAAA,WACA,GAAAmY,GAAAlY,KAAAuC,EAAAxC,GAAAmC,MAAAlC,KAAAuC,EAAA4V,UACA,OAAAD,KAAAlY,KAAAuC,EAAAvC,KAAAkY,EAgBA,IAAA82E,IAAA,WAUA,QAAAA,GAAA9xC,GACAA,EACAn9C,GAAA,iBAAAkvF,GACAlvF,GAAA,kBAAAmvF,GACAnvF,GAAA,iBAAAovF,GACApvF,GAAA,iCAAAqvF,GACA52E,MAAA,+CAGA,QAAAy2E,KACA,IAAA/mC,GAAAv2C,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAAAk3E,GAAA1mC,EAAA,QAAA2mC,EAAAptF,MAAAlC,KAAAmY,WAAAsuC,GAAAzmD,KAAAmY,UACAk3E,KACAl6C,GAAA31C,EAAAkQ,MAAAstC,MAAAj9C,GAAA,iBAAAwvF,GAAA,GAAAxvF,GAAA,eAAAyvF,GAAA,GACA5mC,GAAAppD,EAAAkQ,MAAAstC,MACAF,KACA2yC,GAAA,EACAJ,EAAA,WAGA,QAAAE,KACApyC,KACAsyC,GAAA,EACAC,EAAAjpC,MAAA,QAGA,QAAA+oC,KACAr6C,GAAA31C,EAAAkQ,MAAAstC,MAAAj9C,GAAA,oCACAg9C,GAAAv9C,EAAAkQ,MAAAstC,KAAAyyC,GACAtyC,KACAuyC,EAAAjpC,MAAA,OAGA,QAAAyoC,KACA,GAAAv9E,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAEA7U,GAAA+rF,EAFAM,EAAAnwF,EAAAkQ,MAAA44C,eACAr6C,EAAAqhF,EAAAptF,MAAAlC,KAAAmY,WACA3H,EAAAm/E,EAAAvlF,MAEA,KAAA9G,EAAA,EAAeA,EAAAkN,IAAOlN,GACtB+rF,EAAA1mC,EAAAgnC,EAAArsF,GAAAm6C,WAAAxvC,EAAAq4E,GAAAtmF,KAAAmY,cACA2kC,KACAuyC,EAAA,WAKA,QAAAF,KACA,GACA7rF,GAAA+rF,EADAM,EAAAnwF,EAAAkQ,MAAA44C,eACA93C,EAAAm/E,EAAAvlF,MAEA,KAAA9G,EAAA,EAAeA,EAAAkN,IAAOlN,GACtB+rF,EAAAK,EAAAC,EAAArsF,GAAAm6C,eACAN,KACAkyC,EAAA,SAKA,QAAAD,KACA,GACA9rF,GAAA+rF,EADAM,EAAAnwF,EAAAkQ,MAAA44C,eACA93C,EAAAm/E,EAAAvlF,MAIA,KAFA89C,GAAA9nD,aAAA8nD,GACAA,EAAAxnD,WAAA,WAAyCwnD,EAAA,MAAsB,KAC/D5kD,EAAA,EAAeA,EAAAkN,IAAOlN,GACtB+rF,EAAAK,EAAAC,EAAArsF,GAAAm6C,eACAX,KACAuyC,EAAA,QAKA,QAAA1mC,GAAAv0C,EAAAk7E,EAAAznE,EAAAC,EAAA1L,GACA,GAAAoP,GAAArF,EAAAC,EAAAgB,EAAAS,EAAAynE,EAAAl7E,GACAw7E,EAAA/mC,EAAAhmC,MAEA,IAAAkoB,GAAA,GAAAuS,IAAA0xC,EAAA,cAAAxjE,EAAApX,EAAAopC,EAAAp2B,EAAA,GAAAA,EAAA,OAAAwoE,GAAA,WACA,cAAApwF,EAAAkQ,MAAA6tC,QAAA/xB,EAAA+xB,EAAAr7C,MAAA4lB,EAAA1L,MACA+J,EAAAqF,EAAAlU,EAAA8P,EAAA,MACAhB,EAAAoF,EAAAjU,EAAA6P,EAAA,OACA,KAGA,eAAAioE,GAAAz4E,GACA,GAAApG,GAAAk9C,EAAAtmC,CACA,QAAAxQ,GACA,YAAA84E,EAAAt7E,GAAAi7E,EAAA7+E,EAAAgtC,GAA2D,MAC3D,iBAAAkyC,GAAAt7E,KAAAopC,CACA,YAAAp2B,EAAAS,EAAAynE,EAAAl7E,GAAA5D,EAAAgtC,EAEAzS,GAAA,GAAAuS,IAAA0xC,EAAAp4E,EAAA4U,EAAApX,EAAA5D,EAAA4W,EAAA,GAAAjB,EAAAiB,EAAA,GAAAhB,EAAAgB,EAAA,GAAAsmC,EAAA,GAAAtmC,EAAA,GAAAsmC,EAAA,GAAAkiC,KAAA1tF,MAAA0tF,GAAAh5E,EAAAkR,EAAA1L,KApGA,GAMAqzE,GACAvnC,EAPAv2C,EAAA+rC,GACA4xC,EAAA1xC,GACAL,EAAAM,GACA6xC,KACA7mC,EAAAt1B,GAAA,sBACAiqB,EAAA,CAoHA,OAjBAwxC,GAAAr9E,OAAA,SAAApP,GACA,MAAA4V,WAAA/N,QAAAuH,EAAA,kBAAApP,KAAAwsF,KAAAxsF,GAAAysF,GAAAr9E,GAGAq9E,EAAAM,UAAA,SAAA/sF,GACA,MAAA4V,WAAA/N,QAAAklF,EAAA,kBAAA/sF,KAAAwsF,GAAAxsF,GAAAysF,GAAAM,GAGAN,EAAAzxC,QAAA,SAAAh7C,GACA,MAAA4V,WAAA/N,QAAAmzC,EAAA,kBAAAh7C,KAAAwsF,GAAAxsF,GAAAysF,GAAAzxC,GAGAyxC,EAAAjvF,GAAA,WACA,GAAAmY,GAAA2wC,EAAA9oD,GAAAmC,MAAA2mD,EAAA1wC,UACA,OAAAD,KAAA2wC,EAAAmmC,EAAA92E,GAGA82E,GAGAa,GAAA,SAAAv4E,GACA,kBACA,MAAAA,IAyBA0mC,IAAAx0C,WACAxH,YAAAg8C,GAEA3I,OAAA,SAAAy6C,EAAAtuE,GACA,GAAA/T,GAAAsiF,EAAAC,CAEA,IAAAF,EAAA,CAKA,GAJAtuE,EAAA28B,EAAA2xC,EACAtuE,EAAA48B,EAAA0xC,EAAA1xC,EACA0xC,EAAA1xC,IAAA0xC,EAAA1xC,EAAAD,EAAA38B,GACAsuE,EAAA1xC,EAAA58B,EACAsuE,EAAA5xC,EAAA,CAEA,IADA4xC,IAAA5xC,EACA4xC,EAAAv2D,GAAAu2D,IAAAv2D,CACAu2D,GAAAv2D,EAAA/X,MAEAsuE,GAAA5xC,EAAA18B,CAEA/T,GAAAqiF,MACK9vF,MAAAuC,GACLutF,EAAAvxC,GAAAv+C,KAAAuC,GACAif,EAAA28B,EAAA,KACA38B,EAAA48B,EAAA0xC,EACAA,EAAA3xC,EAAA2xC,EAAAv2D,EAAA/X,EACA/T,EAAAqiF,IAEAtuE,EAAA28B,EAAA38B,EAAA48B,EAAA,KACAp+C,KAAAuC,EAAAif,EACA/T,EAAA,KAOA,KALA+T,EAAA+X,EAAA/X,EAAA08B,EAAA,KACA18B,EAAAoZ,EAAAntB,EACA+T,EAAA0N,GAAA,EAEA4gE,EAAAtuE,EACA/T,KAAAyhB,GACA6gE,EAAAtiF,EAAAmtB,EACAntB,IAAAsiF,EAAAx2D,GACAy2D,EAAAD,EAAA7xC,EACA8xC,KAAA9gE,GACAzhB,EAAAyhB,EAAA8gE,EAAA9gE,GAAA,EACA6gE,EAAA7gE,GAAA,EACA4gE,EAAAC,IAEAD,IAAAriF,EAAAywC,IACAG,GAAAr+C,KAAAyN,GACAqiF,EAAAriF,EACAA,EAAAqiF,EAAAl1D,GAEAntB,EAAAyhB,GAAA,EACA6gE,EAAA7gE,GAAA,EACAovB,GAAAt+C,KAAA+vF,MAGAC,EAAAD,EAAAx2D,EACAy2D,KAAA9gE,GACAzhB,EAAAyhB,EAAA8gE,EAAA9gE,GAAA,EACA6gE,EAAA7gE,GAAA,EACA4gE,EAAAC,IAEAD,IAAAriF,EAAA8rB,IACA+kB,GAAAt+C,KAAAyN,GACAqiF,EAAAriF,EACAA,EAAAqiF,EAAAl1D,GAEAntB,EAAAyhB,GAAA,EACA6gE,EAAA7gE,GAAA,EACAmvB,GAAAr+C,KAAA+vF,KAGAtiF,EAAAqiF,EAAAl1D,CAEA56B,MAAAuC,EAAA2sB,GAAA,GAGA9d,OAAA,SAAAoQ,GACAA,EAAA48B,IAAA58B,EAAA48B,EAAAD,EAAA38B,EAAA28B,GACA38B,EAAA28B,IAAA38B,EAAA28B,EAAAC,EAAA58B,EAAA48B,GACA58B,EAAA48B,EAAA58B,EAAA28B,EAAA,IAEA,IACA8xC,GAGAr6E,EACA09D,EALA7lE,EAAA+T,EAAAoZ,EAEApvB,EAAAgW,EAAA+X,EACA1hB,EAAA2J,EAAA08B,CAsCA,IAhCAtoC,EAFApK,EACAqM,EACA0mC,GAAA1mC,GADArM,EADAqM,EAIApK,EACAA,EAAA8rB,IAAA/X,EAAA/T,EAAA8rB,EAAA3jB,EACAnI,EAAAywC,EAAAtoC,EAEA5V,KAAAuC,EAAAqT,EAGApK,GAAAqM,GACAy7D,EAAA19D,EAAAsZ,EACAtZ,EAAAsZ,EAAA1N,EAAA0N,EACAtZ,EAAA2jB,EAAA/tB,EACAA,EAAAovB,EAAAhlB,EACAA,IAAAiC,GACApK,EAAAmI,EAAAglB,EACAhlB,EAAAglB,EAAApZ,EAAAoZ,EACApZ,EAAA5L,EAAAsoC,EACAzwC,EAAA8rB,EAAA/X,EACA5L,EAAAsoC,EAAArmC,EACAA,EAAA+iB,EAAAhlB,IAEAA,EAAAglB,EAAAntB,EACAA,EAAAmI,EACA4L,EAAA5L,EAAAsoC,KAGAo1B,EAAA9xD,EAAA0N,EACA1N,EAAA5L,GAGA4L,MAAAoZ,EAAAntB,IACA6lE,EAAA,CACA,GAAA9xD,KAAA0N,EAAyC,YAAhB1N,EAAA0N,GAAA,EAEzB,IACA,GAAA1N,IAAAxhB,KAAAuC,EAAA,KACA,IAAAif,IAAA/T,EAAA8rB,GAQA,GAPA02D,EAAAxiF,EAAAywC,EACA+xC,EAAA/gE,IACA+gE,EAAA/gE,GAAA,EACAzhB,EAAAyhB,GAAA,EACAmvB,GAAAr+C,KAAAyN,GACAwiF,EAAAxiF,EAAAywC,GAEA+xC,EAAA12D,GAAA02D,EAAA12D,EAAArK,GACA+gE,EAAA/xC,GAAA+xC,EAAA/xC,EAAAhvB,EAAA,CACA+gE,EAAA/xC,GAAA+xC,EAAA/xC,EAAAhvB,IACA+gE,EAAA12D,EAAArK,GAAA,EACA+gE,EAAA/gE,GAAA,EACAovB,GAAAt+C,KAAAiwF,GACAA,EAAAxiF,EAAAywC,GAEA+xC,EAAA/gE,EAAAzhB,EAAAyhB,EACAzhB,EAAAyhB,EAAA+gE,EAAA/xC,EAAAhvB,GAAA,EACAmvB,GAAAr+C,KAAAyN,GACA+T,EAAAxhB,KAAAuC,CACA,YAUA,IAPA0tF,EAAAxiF,EAAA8rB,EACA02D,EAAA/gE,IACA+gE,EAAA/gE,GAAA,EACAzhB,EAAAyhB,GAAA,EACAovB,GAAAt+C,KAAAyN,GACAwiF,EAAAxiF,EAAA8rB,GAEA02D,EAAA12D,GAAA02D,EAAA12D,EAAArK,GACA+gE,EAAA/xC,GAAA+xC,EAAA/xC,EAAAhvB,EAAA,CACA+gE,EAAA12D,GAAA02D,EAAA12D,EAAArK,IACA+gE,EAAA/xC,EAAAhvB,GAAA,EACA+gE,EAAA/gE,GAAA,EACAmvB,GAAAr+C,KAAAiwF,GACAA,EAAAxiF,EAAA8rB,GAEA02D,EAAA/gE,EAAAzhB,EAAAyhB,EACAzhB,EAAAyhB,EAAA+gE,EAAA12D,EAAArK,GAAA,EACAovB,GAAAt+C,KAAAyN,GACA+T,EAAAxhB,KAAAuC,CACA,OAGA0tF,EAAA/gE,GAAA,EACA1N,EAAA/T,EACAA,IAAAmtB,SACKpZ,EAAA0N,EAEL1N,OAAA0N,GAAA,KAkVA,IAEA8yB,IAwQAO,GACA3D,GACAnF,GACAiF,GA7QAoD,MA4EAO,MA4LAxC,GAAA,KACA8B,GAAA,KA6DAoC,IAAAv6C,WACAxH,YAAA+hD,GAEAmsC,SAAA,WACA,GAAAxxC,GAAA1+C,KAAA0+C,KAEA,OAAA1+C,MAAA4+C,MAAAnhC,IAAA,SAAAwiC,GACA,GAAA6S,GAAA7S,EAAApB,UAAAphC,IAAA,SAAAna,GAAoD,MAAA88C,IAAAH,EAAAvB,EAAAp7C,KAEpD,OADAwvD,GAAA3qD,KAAA83C,EAAAF,KAAA53C,KACA2qD,KAIAq9B,UAAA,WACA,GAAAA,MACAzxC,EAAA1+C,KAAA0+C,KAqBA,OAnBA1+C,MAAA4+C,MAAApqB,QAAA,SAAAyrB,EAAA38C,GASA,IARA,GAIA4mB,GAJA61B,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACAt9B,KACAgI,EAAAs1B,EAAAz0C,OAEAo9C,EAAA9I,EAAAG,EAAAt1B,EAAA,IACAY,EAAAq9B,EAAAh8C,OAAAu0C,EAAAyH,EAAA3vC,MAAA2vC,EAAAh8C,OAEA+V,EAAAgI,GACAW,EAAAC,EACAq9B,EAAA9I,EAAAG,EAAAt9B,IACA4I,EAAAq9B,EAAAh8C,OAAAu0C,EAAAyH,EAAA3vC,MAAA2vC,EAAAh8C,KACAlI,EAAA4mB,EAAAjgB,OAAA3G,EAAA6mB,EAAAlgB,OAAA45C,GAAA9D,EAAA71B,EAAAC,GAAA,GACAgmE,EAAAp9E,MAAAgtC,EAAA53C,KAAA+hB,EAAA/hB,KAAAgiB,EAAAhiB,SAKAgoF,GAGAhH,MAAA,WACA,MAAAnpF,MAAA0+C,MAAA/sC,OAAA,SAAA8sC,GACA,MAAAA,GAAA5mC,QACK4F,IAAA,SAAAghC,GACL,OACA3Z,OAAA2Z,EAAAjzC,KAAArD,KACAoE,OAAAkyC,EAAA5mC,MAAA1P,SAMA,IAAAioF,IAAA,WAKA,QAAAA,GAAAjoF,GACA,UAAA47C,IAAA57C,EAAAsV,IAAA,SAAAhB,EAAAnZ,GACA,GAAAkoB,IAAA1f,KAAA6O,MAAA0rD,EAAA5pD,EAAAnZ,EAAA6E,GAAA03C,OAAA/zC,KAAA6O,MAAA2rD,EAAA7pD,EAAAnZ,EAAA6E,GAAA03C,OAGA,OAFAr0B,GAAAvhB,MAAA3G,EACAkoB,EAAArjB,KAAAsU,EACA+O,IACKy4B,GAVL,GAAAoiB,GAAAvoB,GACAwoB,EAAAvoB,GACAkG,EAAA,IAuCA,OA5BAmsC,GAAAF,SAAA,SAAA/nF,GACA,MAAAioF,GAAAjoF,GAAA+nF,YAGAE,EAAAjH,MAAA,SAAAhhF,GACA,MAAAioF,GAAAjoF,GAAAghF,SAGAiH,EAAAD,UAAA,SAAAhoF,GACA,MAAAioF,GAAAjoF,GAAAgoF,aAGAC,EAAA94E,EAAA,SAAA/U,GACA,MAAA4V,WAAA/N,QAAAi8D,EAAA,kBAAA9jE,KAAAstF,IAAAttF,GAAA6tF,GAAA/pB,GAGA+pB,EAAA74E,EAAA,SAAAhV,GACA,MAAA4V,WAAA/N,QAAAk8D,EAAA,kBAAA/jE,KAAAstF,IAAAttF,GAAA6tF,GAAA9pB,GAGA8pB,EAAAnsC,OAAA,SAAA1hD,GACA,MAAA4V,WAAA/N,QAAA65C,EAAA,MAAA1hD,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAA6tF,GAAAnsC,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGAmsC,EAAA5vE,KAAA,SAAAje,GACA,MAAA4V,WAAA/N,QAAA65C,EAAA,MAAA1hD,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAA6tF,GAAAnsC,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGAmsC,GAGAC,GAAA,SAAA/4E,GACA,kBACA,MAAAA,IAgBA6sC,IAAA36C,WACAxH,YAAAmiD,GACA7xB,MAAA,SAAAtD,GACA,WAAAA,EAAAhvB,KAAA,GAAAmkD,IAAAnkD,KAAAgvB,IAAAhvB,KAAAsX,EAAAtX,KAAAuX,IAEAua,UAAA,SAAAxa,EAAAC,GACA,WAAAD,EAAA,IAAAC,EAAAvX,KAAA,GAAAmkD,IAAAnkD,KAAAgvB,EAAAhvB,KAAAsX,EAAAtX,KAAAgvB,EAAA1X,EAAAtX,KAAAuX,EAAAvX,KAAAgvB,EAAAzX,IAEArV,MAAA,SAAA2lB,GACA,OAAAA,EAAA,GAAA7nB,KAAAgvB,EAAAhvB,KAAAsX,EAAAuQ,EAAA,GAAA7nB,KAAAgvB,EAAAhvB,KAAAuX,IAEA+4E,OAAA,SAAAh5E,GACA,MAAAA,GAAAtX,KAAAgvB,EAAAhvB,KAAAsX,GAEAi5E,OAAA,SAAAh5E,GACA,MAAAA,GAAAvX,KAAAgvB,EAAAhvB,KAAAuX,GAEAguB,OAAA,SAAAirD,GACA,QAAAA,EAAA,GAAAxwF,KAAAsX,GAAAtX,KAAAgvB,GAAAwhE,EAAA,GAAAxwF,KAAAuX,GAAAvX,KAAAgvB,IAEAyhE,QAAA,SAAAn5E,GACA,OAAAA,EAAAtX,KAAAsX,GAAAtX,KAAAgvB,GAEA0hE,QAAA,SAAAn5E,GACA,OAAAA,EAAAvX,KAAAuX,GAAAvX,KAAAgvB,GAEA2hE,SAAA,SAAAr5E,GACA,MAAAA,GAAAuL,OAAAwgB,OAAA/rB,EAAA4f,QAAAzZ,IAAAzd,KAAAywF,QAAAzwF,MAAAyd,IAAAnG,EAAAiuB,OAAAjuB,KAEAs5E,SAAA,SAAAr5E,GACA,MAAAA,GAAAsL,OAAAwgB,OAAA9rB,EAAA2f,QAAAzZ,IAAAzd,KAAA0wF,QAAA1wF,MAAAyd,IAAAlG,EAAAguB,OAAAhuB,KAEA0pB,SAAA,WACA,mBAAAjhC,KAAAsX,EAAA,IAAAtX,KAAAuX,EAAA,WAAAvX,KAAAgvB,EAAA,KAIA,IAAAq1B,IAAA,GAAAF,IAAA,MAEAhrC,IAAA3P,UAAA26C,GAAA36C,SAUA,IAAAqnF,IAAA,WACArxF,EAAAkQ,MAAAO,iBACAzQ,EAAAkQ,MAAAuB,4BAyBA6/E,GAAA,WAiBA,QAAAA,GAAA5zC,GACAA,EACAn9C,GAAA,aAAAgxF,GACAhxF,GAAA,iBAAAkvF,GACAlvF,GAAA,gBAAAixF,GACAjxF,GAAA,kBAAAmvF,GACAnvF,GAAA,iBAAAovF,GACApvF,GAAA,iCAAAqvF,GACA52E,MAAA,+CACAqtC,SAAA,SAAAhB,IA8CA,QAAAvyB,GAAAnZ,EAAA6V,GAEA,MADAA,GAAAljB,KAAA+G,IAAAo+E,EAAAnlF,KAAAuD,IAAA6hF,EAAAliE,IACAA,IAAA7V,EAAA6V,EAAA7V,EAAA,GAAAgrC,IAAAn1B,EAAA7V,EAAA7B,EAAA6B,EAAA5B,GAGA,QAAAua,GAAA3Y,EAAAu0C,EAAA/V,GACA,GAAArgC,GAAAo2C,EAAA,GAAA/V,EAAA,GAAAx+B,EAAA6V,EAAAzX,EAAAm2C,EAAA,GAAA/V,EAAA,GAAAx+B,EAAA6V,CACA,OAAA1X,KAAA6B,EAAA7B,GAAAC,IAAA4B,EAAA5B,EAAA4B,EAAA,GAAAgrC,IAAAhrC,EAAA6V,EAAA1X,EAAAC,GAGA,QAAA45E,GAAAh4E,EAAA8qC,GACA,GAAA99B,GAAAra,KAAAuD,IAAA,EAAA8J,EAAAs3E,QAAAxsC,EAAA,OAAAtiC,IAAA7V,KAAA+G,IAAA,EAAAsG,EAAAs3E,QAAAxsC,EAAA,OAAApiC,GACAuE,EAAAta,KAAAuD,IAAA,EAAA8J,EAAAu3E,QAAAzsC,EAAA,OAAAriC,IAAA9V,KAAA+G,IAAA,EAAAsG,EAAAu3E,QAAAzsC,EAAA,OAAAniC,EACA,OAAAqE,IAAAC,EAAAjN,EAAA2Y,UAAA3L,EAAAC,GAAAjN,EAGA,QAAAkoD,GAAApd,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAAlU,GAAAqhD,EAAAj4E,EAAA86B,GACAm9C,EACArxF,GAAA,wBAAsCsvF,EAAArvF,KAAAmY,WAAAyE,UACtC7c,GAAA,qCAAmDsvF,EAAArvF,KAAAmY,WAAA9D,QACnD08B,MAAA,kBACA,GAAAjpB,GAAA9nB,KACAoc,EAAAjE,UACA4U,EAAAsiE,EAAAvnE,EAAA1L,GACAuH,EAAAsgC,EAAA/hD,MAAA4lB,EAAA1L,GACAgL,EAAA6sB,GAAAotB,EAAA19C,GACA8W,EAAA3uB,KAAA+G,IAAA8Q,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA5V,EAAA+Z,EAAAs8B,OACAp2C,EAAA,kBAAAmL,KAAAjX,MAAA4lB,EAAA1L,GAAAjD,EACA7V,EAAAuzE,GAAA9oE,EAAAw3B,OAAAne,GAAA2M,OAAA0G,EAAA1sB,EAAAihB,GAAAhhB,EAAAu3B,OAAAne,GAAA2M,OAAA0G,EAAAzsB,EAAAghB,GACA,iBAAA5Q,GACA,OAAAA,IAAApQ,MACA,CAAkB,GAAA0I,GAAApT,EAAA8a,GAAA4Q,EAAAyL,EAAA/jB,EAAA,EAA4B0H,GAAA,GAAA+lC,IAAAn1B,EAAA5H,EAAA,GAAA1Q,EAAA,GAAAsY,EAAA5H,EAAA,GAAA1Q,EAAA,GAAAsY,GAC9CjC,EAAA+jE,KAAA,KAAA1yE,MAKA,QAAAixE,GAAAvnE,EAAA1L,GACA,OAAA2Q,GAAAzpB,EAAA,EAAAkN,EAAAk/E,EAAAtlF,OAA2C9G,EAAAkN,IAAOlN,EAClD,IAAAypB,EAAA2iE,EAAApsF,IAAAwkB,SACA,MAAAiF,EAGA,WAAAskE,GAAAvpE,EAAA1L,GAGA,QAAAi1E,GAAAvpE,EAAA1L,GACApc,KAAA8nB,OACA9nB,KAAAoc,OACApc,KAAAiK,SACAjK,KAAAw9C,OAAA,EACAx9C,KAAAikD,SAAA/hD,MAAA4lB,EAAA1L,GAgCA,QAAA20E,KA8BA,QAAAO,KACAvkE,EAAAwkE,MAAA,KACAxkE,EAAA1Y,MA/BA,GAAA1C,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAAA4U,GAAAsiE,EAAArvF,KAAAmY,WACAiG,EAAApe,KAAAokD,OACAp1B,EAAAljB,KAAA+G,IAAAo+E,EAAAnlF,KAAAuD,IAAA6hF,EAAA9yE,EAAA4Q,EAAAljB,KAAAgQ,IAAA,GAAAtc,EAAAkQ,MAAA8hF,QAAAhyF,EAAAkQ,MAAA+hF,UAAA,cACArqE,EAAAq/B,GAAAzmD,KAIA,IAAA+sB,EAAAwkE,MACAxkE,EAAA05B,MAAA,QAAAr/B,EAAA,IAAA2F,EAAA05B,MAAA,QAAAr/B,EAAA,KACA2F,EAAA05B,MAAA,GAAAroC,EAAAmnB,OAAAxY,EAAA05B,MAAA,GAAAr/B,IAEAhnB,aAAA2sB,EAAAwkE,WAIA;AAAA,GAAAnzE,EAAA4Q,MAAA,MAIAjC,GAAA05B,OAAAr/B,EAAAhJ,EAAAmnB,OAAAne,IACAzW,GAAA3Q,MACA+sB,EAAAnQ,QAGAi0E,KACA9jE,EAAAwkE,MAAA7wF,WAAA4wF,EAAAI,GACA3kE,EAAA+jE,KAAA,QAAAK,EAAAr/D,EAAAQ,EAAAlU,EAAA4Q,GAAAjC,EAAA05B,MAAA,GAAA15B,EAAA05B,MAAA,IAAA15B,EAAAk3B,UAQA,QAAAgrC,KAYA,QAAAM,KACAsB,KACA9jE,EAAAw5B,OAAA,EACAx5B,EAAA+jE,KAAA,QAAAK,EAAAr/D,EAAA/E,EAAAjF,KAAAs8B,OAAAr3B,EAAA05B,MAAA,GAAAA,GAAA15B,EAAAjF,MAAAiF,EAAA05B,MAAA,IAAA15B,EAAAk3B,SAGA,QAAAurC,KACAjkE,EAAAxrB,GAAA,oCACAg9C,GAAAv9C,EAAAkQ,MAAAstC,KAAAjwB,EAAAw5B,OACAsqC,KACA9jE,EAAA1Y,MArBA,IAAA6zC,GAAAv2C,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAAA4U,GAAAsiE,EAAArvF,KAAAmY,WACAoT,EAAA4pB,GAAA31C,EAAAkQ,MAAAstC,MAAAj9C,GAAA,iBAAAwvF,GAAA,GAAAxvF,GAAA,eAAAyvF,GAAA,GACApoE,EAAAq/B,GAAAzmD,KAEA4oD,IAAAppD,EAAAkQ,MAAAstC,MACAsH,KACAv3B,EAAA05B,OAAAr/B,EAAApnB,KAAAokD,OAAA7e,OAAAne,IACAzW,GAAA3Q,MACA+sB,EAAAnQ,SAgBA,QAAAo0E,KACA,GAAAr/E,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAAAoS,GAAAvqB,KAAAokD,OACAsJ,EAAAjH,GAAAzmD,MACA23C,EAAAptB,EAAAgb,OAAAmoB,GACAwjC,EAAA3mE,EAAAyE,GAAAxvB,EAAAkQ,MAAAg5C,SAAA,MACAl+B,EAAA2mE,EAAAr/D,EAAAQ,EAAA/H,EAAA2mE,GAAAxjC,EAAA/V,GAAAsM,EAAA/hD,MAAAlC,KAAAmY,WAEA04E,MACAllF,EAAA,EAAAwpC,GAAAn1C,MAAAyM,aAAAd,YAAAO,KAAA6jC,EAAAvlB,EAAAkjC,GACAvY,GAAAn1C,MAAAkM,KAAA4kF,EAAA33E,UAAAqR,IAGA,QAAA0kE,KACA,GAAAv9E,EAAAzP,MAAAlC,KAAAmY,WAAA,CACA,GAEA7U,GAAA8a,EAAAgJ,EAFA2F,EAAAsiE,EAAArvF,KAAAmY,WACAw3E,EAAAnwF,EAAAkQ,MAAA44C,eACA93C,EAAAm/E,EAAAvlF,MAGA,KADAk6C,KACAhhD,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB8a,EAAAuxE,EAAArsF,GAAA8jB,EAAAk/D,GAAAtmF,KAAA2vF,EAAAvxE,EAAAq/B,YACAr2B,KAAApnB,KAAAokD,OAAA7e,OAAAne,GAAAhJ,EAAAq/B,YACA1wB,EAAA4kE,OACA5kE,EAAA6kE,SAAA7kE,EAAA6kE,OAAAxqE,GADA2F,EAAA4kE,OAAAvqE,CAGA,OAAAyqE,KACAA,EAAAzxF,aAAAyxF,IACA9kE,EAAA6kE,SAAA7kE,EAAA1Y,MAAA28E,EAAA9uF,MAAAlC,KAAAmY,iBAEA3Y,EAAAkQ,MAAA0L,QAAAhR,SAAAoG,IACAqhF,EAAAnxF,WAAA,WAA6CmxF,EAAA,MAAwBC,GACrEnhF,GAAA3Q,MACA+sB,EAAAnQ,WAIA,QAAAuyE,KACA,GAEA7rF,GAAA8a,EAAAgJ,EAAA1Q,EAFAqW,EAAAsiE,EAAArvF,KAAAmY,WACAw3E,EAAAnwF,EAAAkQ,MAAA44C,eACA93C,EAAAm/E,EAAAvlF,MAIA,KAFAymF,KACAgB,MAAAzxF,aAAAyxF,IACAvuF,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB8a,EAAAuxE,EAAArsF,GAAA8jB,EAAAk/D,GAAAtmF,KAAA2vF,EAAAvxE,EAAAq/B,YACA1wB,EAAA4kE,QAAA5kE,EAAA4kE,OAAA,KAAAvzE,EAAAq/B,WAAA1wB,EAAA4kE,OAAA,GAAAvqE,EACA2F,EAAA6kE,QAAA7kE,EAAA6kE,OAAA,KAAAxzE,EAAAq/B,aAAA1wB,EAAA6kE,OAAA,GAAAxqE,EAGA,IADAhJ,EAAA2O,EAAAjF,KAAAs8B,OACAr3B,EAAA6kE,OAAA,CACA,GAAAlkC,GAAA3gC,EAAA4kE,OAAA,GAAA/5C,EAAA7qB,EAAA4kE,OAAA,GACAh6C,EAAA5qB,EAAA6kE,OAAA,GAAA/5C,EAAA9qB,EAAA6kE,OAAA,GACAG,KAAAp6C,EAAA,GAAA+V,EAAA,IAAAqkC,KAAAp6C,EAAA,GAAA+V,EAAA,IAAAqkC,EACAC,KAAAn6C,EAAA,GAAAD,EAAA,IAAAo6C,KAAAn6C,EAAA,GAAAD,EAAA,IAAAo6C,CACA5zE,GAAAkU,EAAAlU,EAAAtS,KAAA+P,KAAAk2E,EAAAC,IACA5qE,IAAAsmC,EAAA,GAAA/V,EAAA,OAAA+V,EAAA,GAAA/V,EAAA,OACAjhC,IAAAkhC,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAA9qB,EAAA4kE,OACA,MADAvqE,GAAA2F,EAAA4kE,OAAA,GAAAj7E,EAAAqW,EAAA4kE,OAAA,GAEA5kE,EAAA+jE,KAAA,QAAAK,EAAAr/D,EAAA1T,EAAAgJ,EAAA1Q,GAAAqW,EAAAk3B,SAGA,QAAAmrC,KACA,GAEA9rF,GAAA8a,EAFA2O,EAAAsiE,EAAArvF,KAAAmY,WACAw3E,EAAAnwF,EAAAkQ,MAAA44C,eACA93C,EAAAm/E,EAAAvlF,MAKA,KAHAk6C,KACA4D,GAAA9nD,aAAA8nD,GACAA,EAAAxnD,WAAA,WAAyCwnD,EAAA,MAAsB4pC,GAC/DxuF,EAAA,EAAeA,EAAAkN,IAAOlN,EACtB8a,EAAAuxE,EAAArsF,GACAypB,EAAA4kE,QAAA5kE,EAAA4kE,OAAA,KAAAvzE,EAAAq/B,iBAAA1wB,GAAA4kE,OACA5kE,EAAA6kE,QAAA7kE,EAAA6kE,OAAA,KAAAxzE,EAAAq/B,kBAAA1wB,GAAA6kE,MAEA7kE,GAAA6kE,SAAA7kE,EAAA4kE,SAAA5kE,EAAA4kE,OAAA5kE,EAAA6kE,aAAA7kE,GAAA6kE,QACA7kE,EAAA4kE,QAAA5kE,EAAA1Y,MA3SA,GAWAw9E,GACA3pC,EAZAv2C,EAAA4yC,GACAN,EAAAO,GACAysC,EAAA,EACAC,EAAA9uE,IACAT,GAAAuvE,EACArvE,EAAAqvE,EACAtvE,EAAAD,EACAG,EAAAD,EACAlW,EAAA,IACA+jF,KACA7mC,EAAAt1B,GAAA,sBAGAu+D,EAAA,IACAJ,EAAA,GAyTA,OA3SAZ,GAAA33E,UAAA,SAAA84E,EAAA94E,GACA,GAAA+jC,GAAA+0C,EAAApiD,UAAAoiD,EAAApiD,YAAAoiD,CACA/0C,GAAA2I,SAAA,SAAAhB,IACAotC,IAAA/0C,EACAnN,EAAAkiD,EAAA94E,GAEA+jC,EAAAvsC,YAAA9F,KAAA,WACAwkF,EAAArvF,KAAAmY,WACAyE,QACAk0E,KAAA,uBAAA33E,KAAAjX,MAAAlC,KAAAmY,WAAAgB,GACA9E,SAKAy8E,EAAAoB,QAAA,SAAAh1C,EAAAluB,GACA8hE,EAAAqB,QAAAj1C,EAAA,WACA,GAAA+zC,GAAAjxF,KAAAokD,OAAAp1B,EACAkiE,EAAA,kBAAAliE,KAAA9sB,MAAAlC,KAAAmY,WAAA6W,CACA,OAAAiiE,GAAAC,KAIAJ,EAAAqB,QAAA,SAAAj1C,EAAAluB,GACA8hE,EAAA33E,UAAA+jC,EAAA,WACA,GAAAv5B,GAAAsgC,EAAA/hD,MAAAlC,KAAAmY,WACAoS,EAAAvqB,KAAAokD,OACAsJ,EAAA2T,EAAA19C,GACAg0B,EAAAptB,EAAAgb,OAAAmoB,GACAwjC,EAAA,kBAAAliE,KAAA9sB,MAAAlC,KAAAmY,WAAA6W,CACA,OAAAmiE,GAAAr/D,EAAAQ,EAAA/H,EAAA2mE,GAAAxjC,EAAA/V,GAAAh0B,MAIAmtE,EAAAsB,YAAA,SAAAl1C,EAAA5lC,EAAAC,GACAu5E,EAAA33E,UAAA+jC,EAAA,WACA,MAAAi0C,GAAAnxF,KAAAokD,OAAAtyB,UACA,kBAAAxa,KAAApV,MAAAlC,KAAAmY,WAAAb,EACA,kBAAAC,KAAArV,MAAAlC,KAAAmY,WAAAZ,GACA0sC,EAAA/hD,MAAAlC,KAAAmY,eA+DAk5E,EAAA7nF,WACAoT,MAAA,WAKA,MAJA,OAAA5c,KAAAw9C,SACAx9C,KAAAiK,MAAAylF,EAAA38E,KAAA/S,MAAA,EACAA,KAAAgoD,KAAA,UAEAhoD,MAEA8wF,KAAA,SAAApzE,EAAAvE,GAMA,MALAnZ,MAAAymD,OAAA,UAAA/oC,IAAA1d,KAAAymD,MAAA,GAAAttC,EAAAosB,OAAAvlC,KAAAymD,MAAA,KACAzmD,KAAA2xF,QAAA,UAAAj0E,IAAA1d,KAAA2xF,OAAA,GAAAx4E,EAAAosB,OAAAvlC,KAAA2xF,OAAA,KACA3xF,KAAA4xF,QAAA,UAAAl0E,IAAA1d,KAAA4xF,OAAA,GAAAz4E,EAAAosB,OAAAvlC,KAAA4xF,OAAA,KACA5xF,KAAA8nB,KAAAs8B,OAAAjrC,EACAnZ,KAAAgoD,KAAA,QACAhoD,MAEAqU,IAAA,WAMA,MALA,OAAArU,KAAAw9C,SACAkyC,EAAA74E,OAAA7W,KAAAiK,MAAA,GACAjK,KAAAiK,SACAjK,KAAAgoD,KAAA,QAEAhoD,MAEAgoD,KAAA,SAAApxC,GACAm0B,GAAA,GAAAmZ,IAAA4sC,EAAAl6E,EAAA5W,KAAA8nB,KAAAs8B,QAAAyE,EAAA3mD,MAAA2mD,GAAAjyC,EAAA5W,KAAA8nB,KAAA9nB,KAAAoc,SAmJA00E,EAAAn/E,OAAA,SAAApP,GACA,MAAA4V,WAAA/N,QAAAuH,EAAA,kBAAApP,KAAA8tF,KAAA9tF,GAAAuuF,GAAAn/E,GAGAm/E,EAAA7sC,OAAA,SAAA1hD,GACA,MAAA4V,WAAA/N,QAAA65C,EAAA,kBAAA1hD,KAAA8tF,MAAA9tF,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAuuF,GAAA7sC,GAGA6sC,EAAAuB,YAAA,SAAA9vF,GACA,MAAA4V,WAAA/N,QAAA6mF,GAAA1uF,EAAA,GAAA2uF,GAAA3uF,EAAA,GAAAuuF,IAAAG,EAAAC,IAGAJ,EAAAwB,gBAAA,SAAA/vF,GACA,MAAA4V,WAAA/N,QAAAuX,GAAApf,EAAA,MAAAsf,GAAAtf,EAAA,MAAAqf,GAAArf,EAAA,MAAAuf,GAAAvf,EAAA,MAAAuuF,KAAAnvE,EAAAC,IAAAC,EAAAC,KAGAgvE,EAAAnlF,SAAA,SAAApJ,GACA,MAAA4V,WAAA/N,QAAAuB,GAAApJ,EAAAuuF,GAAAnlF,GAGAmlF,EAAA/wF,GAAA,WACA,GAAAmY,GAAA2wC,EAAA9oD,GAAAmC,MAAA2mD,EAAA1wC,UACA,OAAAD,KAAA2wC,EAAAioC,EAAA54E,GAGA44E,GAGA5nC,GAAA,SAAA5xC,GACA,kBACA,MAAAA,KAIA2xC,GAAA,SAAA18C,EAAAqK,EAAAi5B,GACA7vC,KAAAuM,SACAvM,KAAA4W,OACA5W,KAAA6vC,aAOAiX,GAAA,WACAtnD,EAAAkQ,MAAAO,iBACAzQ,EAAAkQ,MAAAuB,4BAGAk2C,IAAiBvzB,KAAA,QACjBszB,IAAkBtzB,KAAA,SAClBg0B,IAAmBh0B,KAAA,UACnBi0B,IAAmBj0B,KAAA,UAEnBiL,IACAjL,KAAA,IACAqyB,SAAA,SAAAxoC,IAAAsnC,IACA3f,MAAA,SAAA9tB,EAAAqM,GAAyB,MAAArM,QAAA,GAAAqM,EAAA,QAAArM,EAAA,GAAAqM,EAAA,SACzBwhB,OAAA,SAAAotD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBxzD,IACAnL,KAAA,IACAqyB,SAAA,SAAAxoC,IAAAsnC,IACA3f,MAAA,SAAA7tB,EAAAoM,GAAyB,MAAApM,MAAAoM,EAAA,MAAApM,EAAA,KAAAoM,EAAA,MAAApM,EAAA,MACzB4tB,OAAA,SAAAotD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACA5+D,KAAA,KACAqyB,SAAA,qCAAAxoC,IAAAsnC,IACA3f,MAAA,SAAAmtD,GAAuB,MAAAA,IACvBptD,OAAA,SAAAotD,GAAwB,MAAAA,KAGxBxsC,IACAH,QAAA,YACA/V,UAAA,OACAr/B,EAAA,YACAmT,EAAA,YACA6H,EAAA,YACAiP,EAAA,YACAg4D,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGA9qC,IACAnkC,EAAA,IACA8W,EAAA,IACAg4D,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA7qC,IACAv3C,EAAA,IACAgb,EAAA,IACAinE,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGApqC,IACA5C,QAAA,EACA/V,UAAA,EACAr/B,EAAA,KACAmT,EAAA,EACA6H,EAAA,KACAiP,KACAg4D,MACAC,GAAA,EACAC,GAAA,EACAC,OAGAnqC,IACA7C,QAAA,EACA/V,UAAA,EACAr/B,KACAmT,EAAA,KACA6H,EAAA,EACAiP,EAAA,KACAg4D,MACAC,MACAC,GAAA,EACAC,GAAA,GAyCAjtC,GAAA,WACA,MAAAF,IAAA+sC,KAyZA5zE,GAAA9S,KAAA8S,IACAG,GAAAjT,KAAAiT,IACA8zE,GAAA/mF,KAAA8O,GACAk4E,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAAlnF,KAAA+G,IAWAogF,GAAA,WAMA,QAAAA,GAAA1hE,GACA,GAOAvC,GACA1X,EACAqK,EACAwE,EACA7iB,EACAie,EAZA/Q,EAAA+gB,EAAAnnB,OACA8oF,KACAC,EAAAj8D,GAAA1mB,GACA4iF,KACAC,KACA3jD,EAAA2jD,EAAA3jD,OAAA,GAAArzB,OAAA7L,GACA4yE,EAAA,GAAA/mE,OAAA7L,IASkB,KAAlBwe,EAAA,EAAA1rB,OAAkBA,EAAAkN,GAAA,CACE,IAApB8G,EAAA,EAAAiK,OAAoBA,EAAA/Q,GACpB8G,GAAAia,EAAAjuB,GAAAie,EAEA2xE,GAAAngF,KAAAuE,GACA87E,EAAArgF,KAAAmkB,GAAA1mB,IACAwe,GAAA1X,EAuBkB,IAnBlBg8E,GAAAH,EAAAr8E,KAAA,SAAA/I,EAAAC,GACA,MAAAslF,GAAAJ,EAAAnlF,GAAAmlF,EAAAllF,MAIAulF,GAAAH,EAAA5+D,QAAA,SAAA/X,EAAAnZ,GACAmZ,EAAA3F,KAAA,SAAA/I,EAAAC,GACA,MAAAulF,GAAAhiE,EAAAjuB,GAAAyK,GAAAwjB,EAAAjuB,GAAA0K,QAOAghB,EAAAgkE,GAAA,EAAAD,GAAAruE,EAAAlU,GAAAwe,EACA7I,EAAA6I,EAAAtK,EAAAquE,GAAAviF,EAIA8G,EAAA,EAAAhU,OAAkBA,EAAAkN,GAAA,CACG,IAArBmR,EAAArK,EAAAiK,OAAqBA,EAAA/Q,GAAA,CACrB,GAAAgjF,GAAAL,EAAA7vF,GACAmwF,EAAAL,EAAAI,GAAAjyE,GACAgK,EAAAgG,EAAAiiE,GAAAC,GACA1gC,EAAAz7C,EACAg7C,EAAAh7C,GAAAiU,EAAAyD,CACAo0D,GAAAqQ,EAAAjjF,EAAAgjF,IACAvpF,MAAAupF,EACAE,SAAAD,EACAnvE,WAAAyuC,EACAvuC,SAAA8tC,EACAp6C,MAAAqT,GAGAmkB,EAAA8jD,IACAvpF,MAAAupF,EACAlvE,WAAA3C,EACA6C,SAAAlN,EACAY,MAAAg7E,EAAAM,IAEAl8E,GAAA6O,EAIW,IAAX7iB,OAAWA,EAAAkN,GACK,IAAhB+Q,EAAAje,EAAA,IAAgBie,EAAA/Q,GAAA,CAChB,GAAAs0B,GAAAs+C,EAAA7hE,EAAA/Q,EAAAlN,GACAiJ,EAAA62E,EAAA9/E,EAAAkN,EAAA+Q,IACAujB,EAAA5sB,OAAA3L,EAAA2L,QACAm7E,EAAAtgF,KAAA+xB,EAAA5sB,MAAA3L,EAAA2L,OACiB4sB,OAAAv4B,SAAAu4B,IACAA,SAAAv4B,WAKjB,MAAAonF,GAAAN,EAAAv8E,KAAA68E,GAAAN,EAvFA,GAAA3uE,GAAA,EACA4uE,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAvuE,SAAA,SAAAniB,GACA,MAAA4V,WAAA/N,QAAAsa,EAAAsuE,GAAA,EAAAzwF,GAAA0wF,GAAAvuE,GAGAuuE,EAAAK,WAAA,SAAA/wF,GACA,MAAA4V,WAAA/N,QAAAkpF,EAAA/wF,EAAA0wF,GAAAK,GAGAL,EAAAM,cAAA,SAAAhxF,GACA,MAAA4V,WAAA/N,QAAAmpF,EAAAhxF,EAAA0wF,GAAAM,GAGAN,EAAAU,WAAA,SAAApxF,GACA,MAAA4V,WAAA/N,QAAA,MAAA7H,EAAAoxF,EAAA,MAAAA,EAAAxqC,GAAA5mD,QAAA0wF,GAAAU,KAAApxF,GAGA0wF,GAGAW,GAAAv3E,MAAA7S,UAAAkM,MAEAm+E,GAAA,SAAAv8E,GACA,kBACA,MAAAA,KAwBAw8E,GAAA,WAQA,QAAAA,KACA,GAAA/uB,GACAgvB,EAAAH,GAAA1nF,KAAAiM,WACAqT,EAAAsZ,EAAA5iC,MAAAlC,KAAA+zF,GACA31E,EAAA7R,EAAArK,MAAAlC,KAAA+zF,GACAC,GAAApsE,EAAA1lB,MAAAlC,MAAA+zF,EAAA,GAAAvoE,EAAAuoE,IACAE,EAAA3vE,EAAApiB,MAAAlC,KAAA+zF,GAAAjB,GACAoB,EAAA1vE,EAAAtiB,MAAAlC,KAAA+zF,GAAAjB,GACAqB,EAAAH,EAAAp1E,GAAAq1E,GACA94B,EAAA64B,EAAAj1E,GAAAk1E,GACAG,GAAAxsE,EAAA1lB,MAAAlC,MAAA+zF,EAAA,GAAA31E,EAAA21E,IACAM,EAAA/vE,EAAApiB,MAAAlC,KAAA+zF,GAAAjB,GACAwB,EAAA9vE,EAAAtiB,MAAAlC,KAAA+zF,GAAAjB,EAaA,IAXA5rE,MAAA69C,EAAAhkD,KAEAmG,EAAAm7C,OAAA8xB,EAAAh5B,GACAj0C,EAAAk6B,IAAA,IAAA4yC,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACAptE,EAAAs7C,iBAAA,IAAA4xB,EAAAx1E,GAAAy1E,GAAAD,EAAAr1E,GAAAs1E,IACAntE,EAAAk6B,IAAA,IAAAgzC,EAAAC,EAAAC,IAEAptE,EAAAs7C,iBAAA,IAAA2xB,EAAAh5B,GACAj0C,EAAAo7C,YAEAyC,EAAA,MAAA79C,GAAA,KAAA69C,EAAA,SAhCA,GAAAjgC,GAAAukB,GACA98C,EAAA+8C,GACA1hC,EAAA2hC,GACAjlC,EAAAklC,GACAhlC,EAAAilC,GACAviC,EAAA,IAsDA,OAxBA4sE,GAAAlsE,OAAA,SAAArlB,GACA,MAAA4V,WAAA/N,QAAAwd,EAAA,kBAAArlB,KAAAsxF,IAAAtxF,GAAAuxF,GAAAlsE,GAGAksE,EAAAxvE,WAAA,SAAA/hB,GACA,MAAA4V,WAAA/N,QAAAka,EAAA,kBAAA/hB,KAAAsxF,IAAAtxF,GAAAuxF,GAAAxvE,GAGAwvE,EAAAtvE,SAAA,SAAAjiB,GACA,MAAA4V,WAAA/N,QAAAoa,EAAA,kBAAAjiB,KAAAsxF,IAAAtxF,GAAAuxF,GAAAtvE,GAGAsvE,EAAAhvD,OAAA,SAAAviC,GACA,MAAA4V,WAAA/N,QAAA06B,EAAAviC,EAAAuxF,GAAAhvD,GAGAgvD,EAAAvnF,OAAA,SAAAhK,GACA,MAAA4V,WAAA/N,QAAAmC,EAAAhK,EAAAuxF,GAAAvnF,GAGAunF,EAAA5sE,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QAAA8c,EAAA,MAAA3kB,EAAA,KAAAA,EAAAuxF,GAAA5sE,GAGA4sE,GAUAjqC,GAAA,WACA,UAAAH,IAOAA,IAAAlgD,WACAxH,YAAA0nD,GACAC,MAAA,WACA3pD,KAAAwrB,EACAxrB,KAAAoe,EAAA,GAEAnR,IAAA,SAAAsK,GACAqyC,GAAA2qC,GAAAh9E,EAAAvX,KAAAoe,GACAwrC,GAAA5pD,KAAAu0F,GAAA/oE,EAAAxrB,KAAAwrB,GACAxrB,KAAAwrB,EAAAxrB,KAAAoe,GAAAm2E,GAAAn2E,EACApe,KAAAwrB,EAAA+oE,GAAAn2E,GAEAo2E,QAAA,WACA,MAAAx0F,MAAAwrB,GAIA,IAwHAigC,IACAC,GACAI,GACAC,GACAG,GA+FAmB,GACAE,GACAD,GACAE,GACAQ,GACAU,GACAC,GACAjB,GAEAP,GACAC,GAmKA+B,GACAS,GACAR,GACAC,GACAC,GACAO,GACAC,GACAC,GACAS,GACAC,GACAC,GACAL,GACAC,GACA3uC,GACAC,GACA8tC,GAvZA6kC,GAAA,GAAA7qC,IASAoF,GAAA,KACA2lC,GAAA,MACAxqC,GAAAn+C,KAAA8O,GACAuvC,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA2G,GAAA,EAAA3G,GAEAkE,GAAA,IAAAlE,GACA4B,GAAA5B,GAAA,IAEA52C,GAAAvH,KAAAuH,IACA0kD,GAAAjsD,KAAAisD,KACAr9C,GAAA5O,KAAA4O,MACAsxC,GAAAlgD,KAAA8S,IACA7S,GAAAD,KAAAC,KACA8mB,GAAA/mB,KAAA+mB,IAEAgpC,GAAA/vD,KAAAvL,IACA47D,GAAArwD,KAAAgQ,IACAuuC,GAAAv+C,KAAAiT,IACAq9C,GAAAtwD,KAAAge,MAAA,SAAAxS,GAAuC,MAAAA,GAAA,IAAAA,EAAA,QACvC21C,GAAAnhD,KAAA+P,KACAigD,GAAAhwD,KAAAgwD,IAsBA44B,IACAC,QAAA,SAAAC,EAAAnqC,GACAF,GAAAqqC,EAAApqC,SAAAC,IAEAoqC,kBAAA,SAAAr3E,EAAAitC,GAEA,IADA,GAAAqqC,GAAAt3E,EAAAs3E,SAAAxxF,KAAAkN,EAAAskF,EAAA1qF,SACA9G,EAAAkN,GAAA+5C,GAAAuqC,EAAAxxF,GAAAknD,SAAAC,KAIAC,IACAqqC,OAAA,SAAAv3E,EAAAitC,GACAA,EAAA8Q,UAEAy5B,MAAA,SAAAx3E,EAAAitC,GACAjtC,IAAAotC,YACAH,EAAA5iC,MAAArK,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAy3E,WAAA,SAAAz3E,EAAAitC,GAEA,IADA,GAAAG,GAAAptC,EAAAotC,YAAAtnD,KAAAkN,EAAAo6C,EAAAxgD,SACA9G,EAAAkN,GAAAgN,EAAAotC,EAAAtnD,GAAAmnD,EAAA5iC,MAAArK,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA03E,WAAA,SAAA13E,EAAAitC,GACAE,GAAAntC,EAAAotC,YAAAH,EAAA,IAEA0qC,gBAAA,SAAA33E,EAAAitC,GAEA,IADA,GAAAG,GAAAptC,EAAAotC,YAAAtnD,KAAAkN,EAAAo6C,EAAAxgD,SACA9G,EAAAkN,GAAAm6C,GAAAC,EAAAtnD,GAAAmnD,EAAA,IAEA2qC,QAAA,SAAA53E,EAAAitC,GACAQ,GAAAztC,EAAAotC,YAAAH,IAEA4qC,aAAA,SAAA73E,EAAAitC,GAEA,IADA,GAAAG,GAAAptC,EAAAotC,YAAAtnD,KAAAkN,EAAAo6C,EAAAxgD,SACA9G,EAAAkN,GAAAy6C,GAAAL,EAAAtnD,GAAAmnD,IAEA6qC,mBAAA,SAAA93E,EAAAitC,GAEA,IADA,GAAA8qC,GAAA/3E,EAAA+3E,WAAAjyF,KAAAkN,EAAA+kF,EAAAnrF,SACA9G,EAAAkN,GAAA+5C,GAAAgrC,EAAAjyF,GAAAmnD,KAkBA8N,GAAA,SAAA/6C,EAAAitC,GACAjtC,GAAAk3E,GAAAplF,eAAAkO,EAAA5G,MACA89E,GAAAl3E,EAAA5G,MAAA4G,EAAAitC,GAEAF,GAAA/sC,EAAAitC,IAIA+B,GAAA3C,KAEA2rC,GAAA3rC,KAOAwB,IACAxjC,MAAAyiC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAsB,GAAA7C,QACA0B,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAAsqC,IAAAjpC,EACAgpC,IAAAvoF,IAAAwoF,EAAA,EAAA7kC,GAAA6kC,KACAz1F,KAAA+qD,UAAA/qD,KAAAgrD,QAAAhrD,KAAA6nB,MAAAyiC,IAEAiR,OAAA,WACAi6B,GAAAvoF,IAAA2jD,MAwCA8kC,GAAA,SAAAl4E,GAGA,MAFAg4E,IAAA7rC,QACA4O,GAAA/6C,EAAA6tC,IACA,EAAAmqC,IA2CA/mC,GAAA5E,KAIAyE,IACAzmC,MAAAqlC,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAAzmC,MAAA2mC,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA9E,QACA0B,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAAzmC,MAAAqlC,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA/B,GAAA,GAAAa,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAiB,GAAAK,GAAAtB,GAAA,GACAiB,IAAAK,KAAAvB,QACAH,GAAA,GAAAC,GAAAD,GAAA,GAAAE,KAyGAqoC,GAAA,SAAAf,GACA,GAAAtxF,GAAAkN,EAAAzC,EAAAC,EAAAowD,EAAAw3B,EAAA7nC,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAAnrC,KACA+qC,MACAoL,GAAAq8B,EAAAtmC,IAGA99C,EAAA28C,GAAA/iD,OAAA,CAIA,IAHA+iD,GAAAr2C,KAAAi4C,IAGAzrD,EAAA,EAAAyK,EAAAo/C,GAAA,GAAAiR,GAAArwD,GAA4CzK,EAAAkN,IAAOlN,EACnD0K,EAAAm/C,GAAA7pD,GACA0rD,GAAAjhD,EAAAC,EAAA,KAAAghD,GAAAjhD,EAAAC,EAAA,KACA2Z,GAAA5Z,EAAA,GAAAC,EAAA,IAAA2Z,GAAA5Z,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACA2Z,GAAA3Z,EAAA,GAAAD,EAAA,IAAA4Z,GAAA5Z,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAowD,EAAArrD,KAAAhF,EAAAC,EAMA,KAAA4nF,IAAAxzE,KAAA5R,EAAA4tD,EAAAh0D,OAAA,EAAA9G,EAAA,EAAAyK,EAAAqwD,EAAA5tD,GAA2ElN,GAAAkN,EAAQzC,EAAAC,IAAA1K,EACnF0K,EAAAowD,EAAA96D,IACAyqD,EAAApmC,GAAA5Z,EAAA,GAAAC,EAAA,KAAA4nF,MAAA7nC,EAAAV,GAAAr/C,EAAA,GAAAs/C,GAAAv/C,EAAA,IAMA,MAFAo/C,IAAAC,GAAA,KAEAC,KAAAjrC,KAAAmrC,KAAAnrC,MACAO,sBACA0qC,GAAAE,KAAAD,GAAAE,MAoBAgC,IACA+L,OAAAjR,GACAziC,MAAAonC,GACAlE,UAAAwE,GACAvE,QAAAgF,GACA9E,aAAA,WACAsE,GAAAzE,UAAAkF,GACAT,GAAAxE,QAAAmF,IAEAhF,WAAA,WACAqE,GAAAzE,UAAAwE,GACAC,GAAAxE,QAAAgF,KA+FA6lC,GAAA,SAAAr4E,GACA2xC,GAAAS,GACAR,GAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAS,GAAAC,GAAAC,GAAA,EACA6H,GAAA/6C,EAAAgyC,GAEA,IAAAl4C,GAAAk5C,GACAj5C,EAAAk5C,GACAziC,EAAA0iC,GACAnnC,EAAAjS,IAAAC,IAAAyW,GAGA,OAAAzE,GAAAkrE,KACAn9E,EAAAu4C,GAAAt4C,EAAAu4C,GAAA9hC,EAAA+hC,GAEAH,GAAAd,KAAAx3C,EAAA83C,GAAA73C,EAAA83C,GAAArhC,EAAAshC,IACA/lC,EAAAjS,IAAAC,IAAAyW,IAEAzE,EAAAkrE,KAAA9xE,UAGAjI,GAAAnD,EAAAD,GAAA62C,GAAAjE,GAAAl8B,EAAAi/B,GAAA1jC,IAAA4kC,KAGA2nC,GAAA,SAAAx+E,GACA,kBACA,MAAAA,KAIA25C,GAAA,SAAAljD,EAAAC,GAEA,QAAAijD,GAAA35C,EAAAC,GACA,MAAAD,GAAAvJ,EAAAuJ,EAAAC,GAAAvJ,EAAAsJ,EAAA,GAAAA,EAAA,IAOA,MAJAvJ,GAAAw3B,QAAAv3B,EAAAu3B,SAAA0rB,EAAA1rB,OAAA,SAAAjuB,EAAAC,GACA,MAAAD,GAAAtJ,EAAAu3B,OAAAjuB,EAAAC,GAAAD,GAAAvJ,EAAAw3B,OAAAjuB,EAAA,GAAAA,EAAA,MAGA25C,EAOAN,IAAAprB,OAAAorB,EAsDA,IAucA6D,IACAC,GACAC,GAmMAzuC,GACAC,GACAmvC,GACAC,GA4EAwB,GACAC,GACAX,GACAC,GA9tBAhF,GAAA,SAAAj/B,GAGA,QAAA2jE,GAAAnrC,GAEA,MADAA,GAAAx4B,EAAAw4B,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,EAQA,MAZAx4B,GAAAy+B,GAAAz+B,EAAA,GAAAy5B,GAAAz5B,EAAA,GAAAy5B,GAAAz5B,EAAAhoB,OAAA,EAAAgoB,EAAA,GAAAy5B,GAAA,GAOAkqC,EAAAxwD,OAAA,SAAAqlB,GAEA,MADAA,GAAAx4B,EAAAmT,OAAAqlB,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,GAGAmrC,GA+BAC,GAAA,WAQA,QAAAnuE,GAAAvQ,EAAAC,GACAy7C,EAAAjgD,KAAAuE,EAAA8a,EAAA9a,EAAAC,IACAD,EAAA,IAAA62C,GAAA72C,EAAA,IAAA62C,GAGA,QAAA1W,KACA,GAAAxpC,GAAAgmC,EAAA/xC,MAAAlC,KAAAmY,WACAiC,EAAAwN,EAAA1lB,MAAAlC,KAAAmY,WAAA0zC,GACAzkC,EAAAwR,EAAA12B,MAAAlC,KAAAmY,WAAA0zC,EAMA,OALAmH,MACA5gC,EAAAy+B,IAAA5iD,EAAA,GAAA49C,IAAA59C,EAAA,GAAA49C,GAAA,GAAAtmB,OACAmsB,GAAAjH,EAAArwC,EAAAgN,EAAA,GACAnZ,GAAS2I,KAAA,UAAAg0C,aAAAoI,IACTA,EAAA5gC,EAAA,KACAnkB,EArBA,GAGA+kD,GACA5gC,EAJA6hB,EAAA6hD,IAAA,MACAluE,EAAAkuE,GAAA,IACAl9D,EAAAk9D,GAAA,GAGArrC,GAAgB5iC,QA+BhB,OAZA4vB,GAAAxD,OAAA,SAAA1xC,GACA,MAAA4V,WAAA/N,QAAA6pC,EAAA,kBAAA1xC,KAAAuzF,KAAAvzF,EAAA,IAAAA,EAAA,KAAAk1C,GAAAxD,GAGAwD,EAAA7vB,OAAA,SAAArlB,GACA,MAAA4V,WAAA/N,QAAAwd,EAAA,kBAAArlB,KAAAuzF,IAAAvzF,GAAAk1C,GAAA7vB,GAGA6vB,EAAA7e,UAAA,SAAAr2B,GACA,MAAA4V,WAAA/N,QAAAwuB,EAAA,kBAAAr2B,KAAAuzF,IAAAvzF,GAAAk1C,GAAA7e,GAGA6e,GAGA0c,GAAA,WACA,GACAjf,GADA+gD,IAEA,QACApuE,MAAA,SAAAvQ,EAAAC,GACA29B,EAAAniC,MAAAuE,EAAAC,KAEAwzC,UAAA,WACAkrC,EAAAljF,KAAAmiC,OAEA8V,QAAAV,GACAwJ,OAAA,WACAmiC,EAAA7rF,OAAA,GAAA6rF,EAAAljF,KAAAkjF,EAAApkE,MAAAkC,OAAAkiE,EAAA/6C,WAEA6Y,OAAA,WACA,GAAAA,GAAAkiC,CAGA,OAFAA,MACA/gD,EAAA,KACA6e,KAKAG,GAAA,SAAAnmD,EAAAC,EAAA2T,EAAAC,EAAAC,EAAAC,GACA,GAQA1H,GARA2+B,EAAAhrC,EAAA,GACAirC,EAAAjrC,EAAA,GACAkxC,EAAAjxC,EAAA,GACAkxC,EAAAlxC,EAAA,GACAuc,EAAA,EACAC,EAAA,EACArE,EAAA84B,EAAAlG,EACA3yB,EAAA84B,EAAAlG,CAIA,IADA5+B,EAAAuH,EAAAo3B,EACA5yB,KAAA/L,EAAA,IAEA,GADAA,GAAA+L,EACAA,EAAA,GACA,GAAA/L,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,OACG,IAAA+L,EAAA,GACH,GAAA/L,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,GAIA,GADAA,EAAAyH,EAAAk3B,EACA5yB,KAAA/L,EAAA,IAEA,GADAA,GAAA+L,EACAA,EAAA,GACA,GAAA/L,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,OACG,IAAA+L,EAAA,GACH,GAAA/L,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,GAIA,GADAA,EAAAwH,EAAAo3B,EACA5yB,KAAAhM,EAAA,IAEA,GADAA,GAAAgM,EACAA,EAAA,GACA,GAAAhM,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,OACG,IAAAgM,EAAA,GACH,GAAAhM,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,GAIA,GADAA,EAAA0H,EAAAk3B,EACA5yB,KAAAhM,EAAA,IAEA,GADAA,GAAAgM,EACAA,EAAA,GACA,GAAAhM,EAAAoQ,EAAA,MACApQ,GAAAmQ,MAAAnQ,OACG,IAAAgM,EAAA,GACH,GAAAhM,EAAAmQ,EAAA,MACAnQ,GAAAoQ,MAAApQ,GAKA,MAFAmQ,GAAA,IAAAxc,EAAA,GAAAgrC,EAAAxuB,EAAApE,EAAApY,EAAA,GAAAirC,EAAAzuB,EAAAnE,GACAoE,EAAA,IAAAxc,EAAA,GAAA+qC,EAAAvuB,EAAArE,EAAAnY,EAAA,GAAAgrC,EAAAxuB,EAAApE,IACA,OAGA8vE,GAAA,SAAAnoF,EAAAC,GACA,MAAAqF,IAAAtF,EAAA,GAAAC,EAAA,IAAA8gD,IAAAz7C,GAAAtF,EAAA,GAAAC,EAAA,IAAA8gD,IAeAwE,GAAA,SAAAJ,EAAAT,EAAAW,EAAAruB,EAAA0lB,GACA,GAEAnnD,GACAkN,EAHA+sC,KACA+a,IAwBA,IApBApF,EAAA1+B,QAAA,SAAAgjC,GACA,MAAAhnD,EAAAgnD,EAAAptD,OAAA,QACA,GAAAoG,GAAA8G,EAAAo2C,EAAA8J,EAAA,GAAA7f,EAAA6f,EAAAhnD,EAKA,IAAA0lF,GAAAxoC,EAAA/V,GAAA,CAEA,IADA8S,EAAAM,YACAznD,EAAA,EAAiBA,EAAAkN,IAAOlN,EAAAmnD,EAAA5iC,OAAA6lC,EAAA8J,EAAAl0D,IAAA,GAAAoqD,EAAA,GAExB,YADAjD,GAAAO,UAIAzN,EAAAxqC,KAAAuE,EAAA,GAAAw6C,IAAApE,EAAA8J,EAAA,YACAc,EAAAvlD,KAAAuE,EAAAuG,EAAA,GAAAi0C,IAAApE,EAAA,KAAAp2C,IAAA,KACAimC,EAAAxqC,KAAAuE,EAAA,GAAAw6C,IAAAna,EAAA6f,EAAA,YACAc,EAAAvlD,KAAAuE,EAAAuG,EAAA,GAAAi0C,IAAAna,EAAA,KAAArgC,IAAA,QAGAimC,EAAAnzC,OAAA,CAMA,IAJAkuD,EAAAxhD,KAAA27C,GACAR,GAAA1U,GACA0U,GAAAqG,GAEAh1D,EAAA,EAAAkN,EAAA8nD,EAAAluD,OAA8B9G,EAAAkN,IAAOlN,EACrCg1D,EAAAh1D,GAAAqgB,EAAAyvC,IAOA,KAJA,GACA7yC,GACAsH,EAFAjL,EAAA2gC,EAAA,KAIA,CAIA,IAFA,GAAAklC,GAAA7lE,EACAu5E,GAAA,EACA1T,EAAAl3D,GAAA,IAAAk3D,IAAAjyE,KAAAoM,EAAA,MACA2D,GAAAkiE,EAAAz0D,EACAy8B,EAAAM,WACA,IAEA,GADA03B,EAAAl3D,EAAAk3D,EAAA5kE,EAAA0N,GAAA,EACAk3D,EAAA9+D,EAAA,CACA,GAAAwyE,EACA,IAAA7yF,EAAA,EAAAkN,EAAA+P,EAAAnW,OAAwC9G,EAAAkN,IAAOlN,EAAAmnD,EAAA5iC,SAAAtH,EAAAjd,IAAA,GAAAukB,EAAA,QAE/Ckd,GAAA09C,EAAAnrE,EAAAmrE,EAAAjyE,EAAA8G,EAAA,EAAAmzC,EAEAg4B,KAAAjyE,MACO,CACP,GAAA2lF,EAEA,IADA51E,EAAAkiE,EAAAr7D,EAAA4G,EACA1qB,EAAAid,EAAAnW,OAAA,EAAqC9G,GAAA,IAAQA,EAAAmnD,EAAA5iC,SAAAtH,EAAAjd,IAAA,GAAAukB,EAAA,QAE7Ckd,GAAA09C,EAAAnrE,EAAAmrE,EAAAr7D,EAAA9P,KAAAmzC,EAEAg4B,KAAAr7D,EAEAq7D,IAAA5kE,EACA0C,EAAAkiE,EAAAz0D,EACAmoE,YACK1T,EAAAl3D,EACLk/B,GAAAO,aAmBAiJ,GAAA,IACAD,IAAAC,GAmKAmiC,GAAA,WACA,GAIAh8B,GACAC,EACA/B,EANA32C,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAAw2C,IACA7N,OAAA,SAAAA,GACA,MAAA2P,IAAAC,IAAA5P,EAAA2P,IAAAlI,GAAAvwC,EAAAC,EAAAC,EAAAC,GAAAu4C,EAAA5P,IAEAxG,OAAA,SAAA1hD,GACA,MAAA4V,WAAA/N,QAAAuX,GAAApf,EAAA,MAAAqf,GAAArf,EAAA,MAAAsf,GAAAtf,EAAA,MAAAuf,GAAAvf,EAAA,MAAA63D,EAAAC,EAAA,KAAA/B,KAAA32C,EAAAC,IAAAC,EAAAC,OAKAgzC,GAAAjL,KAKAwK,IACAkH,OAAAjR,GACAziC,MAAAyiC,GACAS,UAAAqJ,GACApJ,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCA+rC,GAAA,SAAA74E,GAGA,MAFAs3C,IAAAnL,QACA4O,GAAA/6C,EAAA62C,KACAS,IAGAlK,IAAA,WACA0rC,IAAgB1/E,KAAA,aAAAg0C,gBAEhB8iC,GAAA,SAAA3/E,EAAAC,GAGA,MAFA48C,IAAA,GAAA78C,EACA68C,GAAA,GAAA58C,EACAqoF,GAAAC,KAaAC,GAAA,WAOA,QAAAA,KACA,OAAY3/E,KAAA,kBAAAg0C,YAAAqrC,KAGZ,QAAAA,KACA,MAAA/+D,IAAAnrB,GAAAqjD,EAAAonC,KAAA3mC,EAAA2mC,GAAA/4E,IAAAohB,GACA9K,OAAAmD,GAAAnrB,GAAAsjD,EAAAonC,KAAA3mC,EAAA2mC,GAAAh5E,IAAAshB,IACAhL,OAAAmD,GAAAnrB,GAAA4V,EAAAwE,KAAAtE,EAAAsE,GAAAxU,OAAA,SAAA2F,GAAsE,MAAAjE,IAAAiE,EAAAk/E,GAAA1nC,KAAkCrxC,IAAAnG,IACxGyc,OAAAmD,GAAAnrB,GAAA6V,EAAAwE,KAAAtE,EAAAsE,GAAAzU,OAAA,SAAA4F,GAAsE,MAAAlE,IAAAkE,EAAAk/E,GAAA3nC,KAAkCrxC,IAAAlG,IAdxG,GAAAsK,GAAAF,EAAAkuC,EAAAT,EACAttC,EAAAF,EAAAkuC,EAAAT,EAEA/3C,EAAAC,EAAAsnB,EAAAE,EADA5Y,EAAA,GAAAC,EAAAD,EAAAqwE,EAAA,GAAAC,EAAA,IAEA79D,EAAA,GA+EA,OAlEA29D,GAAAN,MAAA,WACA,MAAAA,KAAAx4E,IAAA,SAAAmtC,GAA8C,OAASh0C,KAAA,aAAAg0C,kBAGvD2rC,EAAAG,QAAA,WACA,OACA9/E,KAAA,UACAg0C,aACA/rB,EAAAuwB,GAAAr7B,OACAgL,EAAA+wB,GAAAp6C,MAAA,GACAmpB,EAAAgxB,GAAAnsB,UAAAhuB,MAAA,GACAqpB,EAAAswB,GAAA3rB,UAAAhuB,MAAA,OAKA6gF,EAAAtyC,OAAA,SAAA1hD,GACA,MAAA4V,WAAA/N,OACAmsF,EAAAI,YAAAp0F,GAAAq0F,YAAAr0F,GADAg0F,EAAAK,eAIAL,EAAAI,YAAA,SAAAp0F,GACA,MAAA4V,WAAA/N,QACAglD,GAAA7sD,EAAA,MAAAstD,GAAAttD,EAAA,MACA8sD,GAAA9sD,EAAA,MAAAutD,GAAAvtD,EAAA,MACA6sD,EAAAS,IAAAttD,EAAA6sD,IAAAS,IAAAttD,GACA8sD,EAAAS,IAAAvtD,EAAA8sD,IAAAS,IAAAvtD,GACAg0F,EAAA39D,gBALAw2B,EAAAC,IAAAQ,EAAAC,KAQAymC,EAAAK,YAAA,SAAAr0F,GACA,MAAA4V,WAAA/N,QACAuX,GAAApf,EAAA,MAAAsf,GAAAtf,EAAA,MACAqf,GAAArf,EAAA,MAAAuf,GAAAvf,EAAA,MACAof,EAAAE,IAAAtf,EAAAof,IAAAE,IAAAtf,GACAqf,EAAAE,IAAAvf,EAAAqf,IAAAE,IAAAvf,GACAg0F,EAAA39D,gBALAjX,EAAAC,IAAAC,EAAAC,KAQAy0E,EAAA3qF,KAAA,SAAArJ,GACA,MAAA4V,WAAA/N,OACAmsF,EAAAM,UAAAt0F,GAAAu0F,UAAAv0F,GADAg0F,EAAAO,aAIAP,EAAAM,UAAA,SAAAt0F,GACA,MAAA4V,WAAA/N,QACAosF,GAAAj0F,EAAA,GAAAk0F,GAAAl0F,EAAA,GACAg0F,IAFAC,EAAAC,IAKAF,EAAAO,UAAA,SAAAv0F,GACA,MAAA4V,WAAA/N,QACA+b,GAAA5jB,EAAA,GAAA6jB,GAAA7jB,EAAA,GACAg0F,IAFApwE,EAAAC,IAKAmwE,EAAA39D,UAAA,SAAAr2B,GACA,MAAA4V,WAAA/N,QACAwuB,GAAAr2B,EACA+U,EAAAy9C,GAAAnzC,EAAAE,EAAA,IACAvK,EAAAy9C,GAAArzC,EAAAE,EAAA+W,GACAiG,EAAAk2B,GAAA1F,EAAAS,EAAA,IACA/wB,EAAAi2B,GAAA5F,EAAAS,EAAAj3B,GACA29D,GANA39D,GASA29D,EACAI,uBAAA7nC,KAAA,OAAAA,MACA8nC,uBAAA9nC,KAAA,OAAAA,OAGAioC,GAAA,SAAAhpF,EAAAC,GACA,GAAA2T,GAAA5T,EAAA,GAAA89C,GACAjqC,EAAA7T,EAAA,GAAA89C,GACAhqC,EAAA7T,EAAA,GAAA69C,GACA/pC,EAAA9T,EAAA,GAAA69C,GACArlC,EAAAwlC,GAAApqC,GACAu5C,EAAA9Q,GAAAzoC,GACA8E,EAAAslC,GAAAlqC,GACAk1E,EAAA3sC,GAAAvoC,GACAm1E,EAAAzwE,EAAAwlC,GAAArqC,GACAu1E,EAAA1wE,EAAA6jC,GAAA1oC,GACAw1E,EAAAzwE,EAAAslC,GAAAnqC,GACAu1E,EAAA1wE,EAAA2jC,GAAAxoC,GACApF,EAAA,EAAAytC,GAAA+C,GAAA7C,GAAAtoC,EAAAF,GAAA4E,EAAAE,EAAA0jC,GAAAvoC,EAAAF,KACAqN,EAAAq7B,GAAA5tC,GAEAsoB,EAAAtoB,EAAA,SAAA2B,GACA,GAAA4f,GAAAqsB,GAAAjsC,GAAA3B,GAAAuS,EACA+O,EAAAssB,GAAA5tC,EAAA2B,GAAA4Q,EACA1X,EAAAymB,EAAAk5D,EAAAj5D,EAAAm5D,EACA5/E,EAAAwmB,EAAAm5D,EAAAl5D,EAAAo5D,EACAppE,EAAA+P,EAAAo9B,EAAAn9B,EAAAg5D,CACA,QACAt8E,GAAAnD,EAAAD,GAAA62C,GACAzzC,GAAAsT,EAAAi/B,GAAA31C,IAAAC,MAAA42C,KAEG,WACH,OAAAxsC,EAAAwsC,GAAAvsC,EAAAusC,IAKA,OAFAppB,GAAA2oD,SAAAjxE,EAEAsoB,GAGA21B,GAAA,SAAApjD,GACA,MAAAA,IAGA+/E,GAAAxtC,KACA0L,GAAA1L,KAMAqL,IACArtC,MAAAyiC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAgK,GAAAnK,UAAAkK,GACAC,GAAAlK,QAAAwK,IAEArK,WAAA,WACA+J,GAAAnK,UAAAmK,GAAAlK,QAAAkK,GAAArtC,MAAAyiC,GACA+sC,GAAApqF,IAAAoG,GAAAkiD,KACAA,GAAA5L,SAEAoK,OAAA,WACA,GAAAqN,GAAAi2B,GAAA,CAEA,OADAA,IAAA1tC,QACAyX,IAsBA1L,GAAAtzC,IACAuzC,GAAAD,GACA7zC,IAAA6zC,GACA5zC,GAAAD,GAEA22C,IACA3wC,MAAA4tC,GACA1K,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACAyJ,OAAA,WACA,GAAA4hC,KAAAjgC,GAAAC,KAAA9zC,GAAAC,IAEA,OADAD,IAAAC,KAAA6zC,GAAAD,GAAAtzC,KACAuzE,IAaA9/B,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACApuC,MAAA+tC,GACA7K,UAAAiL,GACAhL,QAAAyL,GACAvL,aAAA,WACA+K,GAAAlL,UAAA2L,GACAT,GAAAjL,QAAA4L,IAEAzL,WAAA,WACA8K,GAAApuC,MAAA+tC,GACAK,GAAAlL,UAAAiL,GACAC,GAAAjL,QAAAyL,IAEA1C,OAAA,WACA,GAAAsN,GAAAnK,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACApzC,QAIA,OAHAkzC,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACAmK,GAgEAlK,IAAA3tD,WACA8tF,QAAA,IACAC,YAAA,SAAAh1F,GACA,MAAAvC,MAAAs3F,QAAA/0F,EAAAvC,MAEAkrD,aAAA,WACAlrD,KAAA+lE,MAAA,GAEA5a,WAAA,WACAnrD,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAAimE,OAAA,GAEAjb,QAAA,WACA,IAAAhrD,KAAA+lE,OAAA/lE,KAAAmnB,SAAAm7C,YACAtiE,KAAAimE,OAAAtjD,KAEAkF,MAAA,SAAAvQ,EAAAC,GACA,OAAAvX,KAAAimE,QACA,OACAjmE,KAAAmnB,SAAAk7C,OAAA/qD,EAAAC,GACAvX,KAAAimE,OAAA,CACA,MAEA,QACAjmE,KAAAmnB,SAAAo7C,OAAAjrD,EAAAC,EACA,MAEA,SACAvX,KAAAmnB,SAAAk7C,OAAA/qD,EAAAtX,KAAAs3F,QAAA//E,GACAvX,KAAAmnB,SAAAi6B,IAAA9pC,EAAAC,EAAAvX,KAAAs3F,QAAA,EAAA1mC,MAKAmD,OAAAzJ,IAOA8M,GAAA5tD,WACAguF,QAAAlgC,GAAA,KACAigC,YAAA,SAAAh1F,GACA,MAAAvC,MAAAw3F,QAAAlgC,GAAA/0D,GAAAvC,MAEAkrD,aAAA,WACAlrD,KAAA+lE,MAAA,GAEA5a,WAAA,WACAnrD,KAAA+lE,MAAApjD,KAEAooC,UAAA,WACA/qD,KAAAimE,OAAA,GAEAjb,QAAA,WACA,IAAAhrD,KAAA+lE,OAAA/lE,KAAAq3D,QAAAtkD,KAAA,KACA/S,KAAAimE,OAAAtjD,KAEAkF,MAAA,SAAAvQ,EAAAC,GACA,OAAAvX,KAAAimE,QACA,OACAjmE,KAAAq3D,QAAAtkD,KAAA,IAAAuE,EAAA,IAAAC,GACAvX,KAAAimE,OAAA,CACA,MAEA,QACAjmE,KAAAq3D,QAAAtkD,KAAA,IAAAuE,EAAA,IAAAC,EACA,MAEA,SACAvX,KAAAq3D,QAAAtkD,KAAA,IAAAuE,EAAA,IAAAC,EAAAvX,KAAAw3F,WAKAzjC,OAAA,WACA,GAAA/zD,KAAAq3D,QAAAjtD,OAAA,CACA,GAAA2pD,GAAA/zD,KAAAq3D,QAAA1kC,KAAA,GAEA,OADA3yB,MAAAq3D,WACAtD,IAYA,IAAA0jC,IAAA,WAOA,QAAA12E,GAAAvD,GAKA,MAJAA,KACA,kBAAA+5E,IAAAG,EAAAH,eAAAr1F,MAAAlC,KAAAmY,YACAogD,GAAA/6C,EAAAm6E,EAAAD,KAEAA,EAAA3jC,SAXA,GACA+F,GACA69B,EACAzwE,EACAwwE,EAJAH,EAAA,GA8CA,OAhCAx2E,GAAAqgD,KAAA,SAAA5jD,GAEA,MADA+6C,IAAA/6C,EAAAm6E,EAAAziC,KACAA,GAAAnB,UAGAhzC,EAAA40E,OAAA,SAAAn4E,GAEA,MADA+6C,IAAA/6C,EAAAm6E,EAAAn/B,KACAA,GAAAzE,UAGAhzC,EAAAsgD,SAAA,SAAA7jD,GAEA,MADA+6C,IAAA/6C,EAAAm6E,EAAA1hC,KACAA,GAAAlC,UAGAhzC,EAAA+4C,WAAA,SAAAv3D,GACA,MAAA4V,WAAA/N,QAAAutF,EAAA,OAAA79B,EAAAv3D,GAAAm4D,GAAAn4D,EAAAkoD,OAAA1pC,GAAA+4C,GAGA/4C,EAAAmG,QAAA,SAAA3kB,GACA,MAAA4V,WAAA/N,QACAstF,EAAA,OAAAxwE,EAAA3kB,GAAA,GAAA60D,IAAA,GAAAD,IAAA50D,GACA,kBAAAg1F,IAAAG,EAAAH,eACAx2E,GAHAmG,GAMAnG,EAAAw2E,YAAA,SAAAh1F,GACA,MAAA4V,WAAA/N,QACAmtF,EAAA,kBAAAh1F,MAAAm1F,EAAAH,aAAAh1F,OACAwe,GAFAw2E,GAKAx2E,EAAA+4C,WAAA,MAAA5yC,QAAA,OAGA0wE,GAAA/tC,KAEAguC,GAAA,SAAA/kC,EAAAjrC,GACA,GAAA8jC,GAAA9jC,EAAA,GACA+jC,EAAA/jC,EAAA,GACA8lC,GAAAtD,GAAAsB,IAAAK,GAAAL,GAAA,GACAhkC,EAAA,EACAkrC,EAAA,CAEA+kC,IAAAjuC,OAEA,QAAArmD,GAAA,EAAAkN,EAAAsiD,EAAA1oD,OAAqC9G,EAAAkN,IAAOlN,EAC5C,GAAAimB,GAAAypC,EAAAF,EAAAxvD,IAAA8G,OASA,OARA4oD,GACAzpC,EACAy9B,EAAAgM,EAAAzpC,EAAA,GACAuiC,EAAA9E,EAAA,GACAuG,EAAAvG,EAAA,KAAAiF,GACAC,EAAA7B,GAAAkD,GACAxB,EAAAC,GAAAuB,GAEAhsC,EAAA,EAAmBA,EAAAgI,IAAOhI,EAAAuqC,EAAAwB,EAAApB,EAAA4rC,EAAA/rC,EAAA8L,EAAA7Q,EAAAR,EAAA,CAC1B,GAAAA,GAAAwM,EAAAzxC,GACA+rC,EAAA9G,EAAA,GACAgH,EAAAhH,EAAA,KAAAyF,GACA6rC,EAAAztC,GAAAmD,GACAqK,EAAA7L,GAAAwB,GACAO,EAAAT,EAAAxB,EACAmC,EAAAF,GAAA,OACAgqC,EAAA9pC,EAAAF,EACAK,EAAA2pC,EAAA9tC,GACAj7B,EAAAk9B,EAAA4rC,CAOA,IALAF,GAAA3qF,IAAAyN,GAAAsU,EAAAi/B,EAAA5D,GAAA0tC,GAAAhsC,EAAA8L,EAAA7oC,EAAAg9B,GAAA+rC,KACApwE,GAAAymC,EAAAL,EAAAE,EAAA2C,GAAA7C,EAIAK,EAAAtC,GAAAH,EAAA2B,GAAA3B,EAAA,CACA,GAAAvK,GAAAwL,GAAAF,GAAA1F,GAAA0F,GAAAlG,GACAwG,IAAA5L,EACA,IAAA42C,GAAAprC,GAAAe,EAAAvM,EACA4L,IAAAgrC,EACA,IAAAC,IAAA7pC,EAAAL,GAAA,QAAA7D,GAAA8tC,EAAA,KACApsC,EAAAqsC,GAAArsC,IAAAqsC,IAAA72C,EAAA,IAAAA,EAAA,OACAyR,GAAAzE,EAAAL,GAAA,SAiBA,OAAApmC,GAAAmnC,IAAAnnC,EAAAmnC,IAAA8oC,IAAA9oC,IAAA,EAAA+D,GAGAyF,GAAA,SAAA4/B,EAAAhkC,EAAAnvB,EAAAnoB,GACA,gBAAAwV,EAAA+lE,GAgDA,QAAAtwE,GAAA8jC,EAAAC,GACA,GAAA/jC,GAAAuK,EAAAu5B,EAAAC,EACAssC,GAAAvsC,EAAA9jC,EAAA,GAAA+jC,EAAA/jC,EAAA,KAAAswE,EAAAtwE,MAAA8jC,EAAAC,GAGA,QAAAwsC,GAAAzsC,EAAAC,GACA,GAAA/jC,GAAAuK,EAAAu5B,EAAAC,EACA1W,GAAArtB,QAAA,GAAAA,EAAA,IAGA,QAAAkjC,KACAuN,EAAAzwC,MAAAuwE,EACAljD,EAAA6V,YAGA,QAAAC,KACAsN,EAAAzwC,QACAqtB,EAAA8V,UAGA,QAAAqtC,GAAA1sC,EAAAC,GACAoH,EAAAjgD,MAAA44C,EAAAC,GACA,IAAA/jC,GAAAuK,EAAAu5B,EAAAC,EACA0sC,GAAAzwE,QAAA,GAAAA,EAAA,IAGA,QAAA2xC,KACA8+B,EAAAvtC,YACAiI,KAGA,QAAA0G,KACA2+B,EAAArlC,EAAA,MAAAA,EAAA,OACAslC,EAAAttC,SAEA,IAEA1nD,GAAAimB,EACAiuC,EACA3vC,EAJAsrC,EAAAmlC,EAAAnlC,QACAolC,EAAAC,EAAAzkC,SACAvjD,EAAA+nF,EAAAnuF,MAQA,IAJA4oD,EAAAnhC,MACAihC,EAAA//C,KAAAigD,GACAA,EAAA,KAEAxiD,EAGA,KAAA2iD,GAEA,GADAqE,EAAA+gC,EAAA,IACAhvE,EAAAiuC,EAAAptD,OAAA,MAGA,IAFAquF,IAAAN,EAAAjtC,eAAAutC,GAAA,GACAN,EAAAptC,YACAznD,EAAA,EAAqBA,EAAAimB,IAAOjmB,EAAA60F,EAAAtwE,SAAA2vC,EAAAl0D,IAAA,GAAAukB,EAAA,GAC5BswE,GAAAntC,eAOAx6C,GAAA,KAAA2iD,GAAAolC,EAAAxlF,KAAAwlF,EAAA1mE,MAAAkC,OAAAwkE,EAAAr9C,UAEAgY,EAAAngD,KAAAwlF,EAAA5mF,OAAA4lD,KA9GA,GAKAzE,GACAI,EACAF,EAPA9d,EAAAgf,EAAAikC,GACAO,EAAAtmE,EAAAmT,OAAA3oB,EAAA,GAAAA,EAAA,IACA47E,EAAArkC,KACAmkC,EAAApkC,EAAAskC,GACAC,GAAA,EAKAngC,GACAzwC,QACAkjC,YACAC,UACAE,aAAA,WACAoN,EAAAzwC,MAAAwwE,EACA//B,EAAAvN,UAAAyO,EACAlB,EAAAtN,QAAA0O,EACAxG,KACAJ,MAEA3H,WAAA,WACAmN,EAAAzwC,QACAywC,EAAAvN,YACAuN,EAAAtN,UACAkI,EAAA9d,GAAA8d,EACA,IAAAE,GAAAykC,GAAA/kC,EAAA4lC,EACAxlC,GAAA9oD,QACAquF,IAAAN,EAAAjtC,eAAAutC,GAAA,GACAnlC,GAAAJ,EAAAT,GAAAW,EAAAruB,EAAAozD,IACS/kC,IACTqlC,IAAAN,EAAAjtC,eAAAutC,GAAA,GACAN,EAAAptC,YACAhmB,EAAA,YAAAozD,GACAA,EAAAntC,WAEAytC,IAAAN,EAAAhtC,aAAAstC,GAAA,GACAvlC,EAAAJ,EAAA,MAEAyI,OAAA,WACA48B,EAAAjtC,eACAitC,EAAAptC,YACAhmB,EAAA,YAAAozD,GACAA,EAAAntC,UACAmtC,EAAAhtC,cAsEA,OAAAmN,KAeAkC,GAAAlC,GACA,WAAc,UACdb,GACAO,KACA/N,IAAAE,KAsFA4Q,GAAA,SAAAnzC,EAAAmmC,GAKA,QAAAhpB,GAAAqtB,EAAAC,EAAAzsD,EAAA6kD,GACAiH,GAAAjH,EAAA7iC,EAAAmmC,EAAAnoD,EAAAwsD,EAAAC,GAGA,QAAAF,GAAAxG,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAA+sC,EAOA,QAAAzkC,GAAAzJ,GACA,GAAAzD,GACA+R,EACA1pC,EACA0xB,EACAoS,CACA,QACApI,UAAA,WACAhK,EAAA1xB,GAAA,EACA8jC,EAAA,GAEAtrC,MAAA,SAAA8jC,EAAAC,GACA,GACAgtC,GADApyC,GAAAmF,EAAAC,GAEArgC,EAAA4mC,EAAAxG,EAAAC,GACA39C,EAAA4qF,EACAttE,EAAA,EAAAutE,EAAAntC,EAAAC,GACArgC,EAAAutE,EAAAntC,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXA5E,IAAAjG,EAAA1xB,EAAA9D,IAAAk/B,EAAAM,YAGAx/B,IAAA8D,IACAupE,EAAA/zE,EAAAmiC,EAAAR,IACA0vC,GAAAlvC,EAAA4xC,IAAA1C,GAAA1vC,EAAAoyC,MACApyC,EAAA,IAAAsI,GACAtI,EAAA,IAAAsI,GACAvjC,EAAA4mC,EAAA3L,EAAA,GAAAA,EAAA,MAGAj7B,IAAA8D,EACA8jC,EAAA,EACA5nC,GAEAk/B,EAAAM,YACA6tC,EAAA/zE,EAAA2hC,EAAAQ,GACAyD,EAAA5iC,MAAA+wE,EAAA,GAAAA,EAAA,MAGAA,EAAA/zE,EAAAmiC,EAAAR,GACAiE,EAAA5iC,MAAA+wE,EAAA,GAAAA,EAAA,IACAnuC,EAAAO,WAEAhE,EAAA4xC,MACS,IAAAG,GAAA/xC,GAAA6xC,EAAAttE,EAAA,CACT,GAAAnN,EAGAnQ,GAAA8qD,KAAA36C,EAAAyG,EAAA2hC,EAAAQ,GAAA,MACAmM,EAAA,EACA0lC,GACApuC,EAAAM,YACAN,EAAA5iC,MAAAzJ,EAAA,MAAAA,EAAA,OACAqsC,EAAA5iC,MAAAzJ,EAAA,MAAAA,EAAA,OACAqsC,EAAAO,YAEAP,EAAA5iC,MAAAzJ,EAAA,MAAAA,EAAA,OACAqsC,EAAAO,UACAP,EAAAM,YACAN,EAAA5iC,MAAAzJ,EAAA,MAAAA,EAAA,UAIAmN,GAAAy7B,GAAAkvC,GAAAlvC,EAAAR,IACAiE,EAAA5iC,MAAA2+B,EAAA,GAAAA,EAAA,IAEAQ,EAAAR,EAAAn3B,EAAA9D,EAAAwtC,EAAA9qD,GAEA+8C,QAAA,WACA37B,GAAAo7B,EAAAO,UACAhE,EAAA,MAIAmM,MAAA,WACA,MAAAA,IAAApS,GAAA1xB,IAAA,IAMA,QAAAxK,GAAA9W,EAAAC,EAAAgrF,GACA,GAAA7xB,GAAAza,GAAA3+C,GACAkrF,EAAAvsC,GAAA1+C,GAIA25C,GAAA,OACAuxC,EAAAtsC,GAAAua,EAAA8xB,GACAE,EAAAxsC,GAAAusC,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAL,GAAAjrF,CAEA,IAAAirD,GAAA2/B,EAAAQ,EAAAE,EACA5gD,GAAAkgD,EAAAS,EAAAC,EACAC,EAAA1sC,GAAAjF,EAAAuxC,GACAn7D,EAAA+uB,GAAAnF,EAAAqR,GACAh7B,EAAA8uB,GAAAosC,EAAAzgD,EACAoU,IAAA9uB,EAAAC,EAGA,IAAA0I,GAAA4yD,EACA7+D,EAAAkyB,GAAA5uB,EAAA2I,GACA6yD,EAAA5sC,GAAAjmB,KACAtY,EAAAqM,IAAA8+D,GAAA5sC,GAAA5uB,KAAA,EAEA,MAAA3P,EAAA,IAEA,GAAAhQ,GAAA6uC,GAAA7+B,GACA1K,EAAAopC,GAAApmB,IAAAjM,EAAArc,GAAAm7E,EAIA,IAHA1sC,GAAAnpC,EAAAqa,GACAra,EAAA+oC,GAAA/oC,IAEAs1E,EAAA,MAAAt1E,EAGA,IAIAsK,GAJA89B,EAAA/9C,EAAA,GACAu/C,EAAAt/C,EAAA,GACAu/C,EAAAx/C,EAAA,GACAy/C,EAAAx/C,EAAA,EAGAs/C,GAAAxB,IAAA99B,EAAA89B,IAAAwB,IAAAt/B,EAEA,IAAA+/B,GAAAT,EAAAxB,EACA0tC,EAAAnmF,GAAA06C,EAAA9D,IAAA6E,GACA2qC,EAAAD,GAAAzrC,EAAAe,EAKA,KAHA0qC,GAAAhsC,EAAAD,IAAAv/B,EAAAu/B,IAAAC,IAAAx/B,GAGAyrE,EACAD,EACAjsC,EAAAC,EAAA,EAAA9pC,EAAA,IAAArQ,GAAAqQ,EAAA,GAAAooC,GAAAgD,GAAAvB,EAAAC,GACAD,GAAA7pC,EAAA,IAAAA,EAAA,IAAA8pC,EACAO,EAAA9D,IAAA6B,GAAApoC,EAAA,IAAAA,EAAA,IAAA4pC,GAAA,CACA,GAAAosC,GAAA5sC,GAAApmB,IAAAjM,EAAArc,GAAAm7E,EAEA,OADA1sC,IAAA6sC,EAAA37D,IACAra,EAAA+oC,GAAAitC,MAMA,QAAAZ,GAAAntC,EAAAC,GACA,GAAAxxC,GAAAy+E,EAAAjxE,EAAAqiC,GAAAriC,EACAkxE,EAAA,CAKA,OAJAntC,IAAAvxC,EAAA0+E,GAAA,EACAntC,EAAAvxC,IAAA0+E,GAAA,GACAltC,GAAAxxC,EAAA0+E,GAAA,EACAltC,EAAAxxC,IAAA0+E,GAAA,GACAA,EAzKA,GAAAH,GAAA3sC,GAAApkC,GACAixE,EAAAF,EAAA,EACAI,EAAA1lF,GAAAslF,GAAA7pC,EA0KA,OAAAwJ,IAAAnG,EAAA+B,EAAAnvB,EAAA8zD,GAAA,GAAAjxE,KAAAqiC,GAAAriC,EAAAqiC,MAGA0vC,GAAA,SAAAnwF,GACA,OACAihD,OAAAwN,GAAAzuD,IAiBA2uD,IAAA3uD,WACAqe,MAAA,SAAAvQ,EAAAC,GAAyBvX,KAAAyqD,OAAA5iC,MAAAvQ,EAAAC,IACzBgkD,OAAA,WAAsBv7D,KAAAyqD,OAAA8Q,UACtBxQ,UAAA,WAAyB/qD,KAAAyqD,OAAAM,aACzBC,QAAA,WAAuBhrD,KAAAyqD,OAAAO,WACvBE,aAAA,WAA4BlrD,KAAAyqD,OAAAS,gBAC5BC,WAAA,WAA0BnrD,KAAAyqD,OAAAU,cAwC1B,IAAAoO,IAAA,GACAF,GAAArN,GAAA,GAAAH,IAEA+O,GAAA,SAAAvC,EAAAQ,GACA,OAAAA,EAAAD,GAAAP,EAAAQ,GAAAF,GAAAN,IA+FAwC,GAAA5C,IACApwC,MAAA,SAAAvQ,EAAAC,GACAvX,KAAAyqD,OAAA5iC,MAAAvQ,EAAAu0C,GAAAt0C,EAAAs0C,OA0HA+tC,GAAA,WACA,MAAA5+B,IAAAE,IACA5oC,MAAA,SACA2hB,QAAA,aAGA4lD,GAAA,WACA,MAAAD,MACA3+B,WAAA,YACA3oC,MAAA,MACAR,WAAA,UACAM,QAAA,OACA6hB,YAAA,QAsBA6lD,GAAA,WAQA,QAAAA,GAAAlvC,GACA,GAAAtzC,GAAAszC,EAAA,GAAArzC,EAAAqzC,EAAA,EACA,OAAA/iC,GAAA,KACAkyE,EAAAlyE,MAAAvQ,EAAAC,GAAAsQ,IACAmyE,EAAAnyE,MAAAvQ,EAAAC,GAAAsQ,KACAoyE,EAAApyE,MAAAvQ,EAAAC,GAAAsQ,GAZA,GAAAuyC,GACAC,EACA0/B,EACAC,EACAC,EACApyE,EAHAqyE,EAAAL,KACAM,EAAAP,KAAAxnE,QAAA,QAAA6hB,WAAA,OAAAgnB,WAAA,QACAm/B,EAAAR,KAAAxnE,QAAA,QAAA6hB,WAAA,OAAAgnB,WAAA,OACAo/B,GAA4BxyE,MAAA,SAAAvQ,EAAAC,GAAuBsQ,GAAAvQ,EAAAC,IA8DnD,OApDAuiF,GAAAv0D,OAAA,SAAAqlB,GACA,GAAA57B,GAAAkrE,EAAA5nE,QACAlU,EAAA87E,EAAApoE,YACAxa,GAAAszC,EAAA,GAAAxsC,EAAA,IAAA4Q,EACAzX,GAAAqzC,EAAA,GAAAxsC,EAAA,IAAA4Q,CACA,QAAAzX,GAAA,KAAAA,EAAA,MAAAD,kBAAA6iF,EACA5iF,GAAA,MAAAA,EAAA,MAAAD,kBAAA8iF,EACAF,GAAA30D,OAAAqlB,IAGAkvC,EAAArvC,OAAA,SAAAA,GACA,MAAA2P,IAAAC,IAAA5P,EAAA2P,IAAAiB,IAAA6+B,EAAAzvC,OAAA4P,EAAA5P,GAAA0vC,EAAA1vC,UAAA2vC,EAAA3vC,aAGAqvC,EAAAlhE,UAAA,SAAAr2B,GACA,MAAA4V,WAAA/N,QACA8vF,EAAAthE,UAAAr2B,GAAA43F,EAAAvhE,UAAAr2B,GAAA63F,EAAAxhE,UAAAr2B,GACAu3F,GAFAI,EAAAthE,aAKAkhE,EAAAxnE,MAAA,SAAA/vB,GACA,MAAA4V,WAAA/N,QACA8vF,EAAA5nE,MAAA/vB,GAAA43F,EAAA7nE,MAAA,IAAA/vB,GAAA63F,EAAA9nE,MAAA/vB,GACAu3F,EAAAhoE,UAAAooE,EAAApoE,cAFAooE,EAAA5nE,SAKAwnE,EAAAhoE,UAAA,SAAAvvB,GACA,IAAA4V,UAAA/N,OAAA,MAAA8vF,GAAApoE,WACA,IAAA9C,GAAAkrE,EAAA5nE,QAAAhb,GAAA/U,EAAA,GAAAgV,GAAAhV,EAAA,EAiBA,OAfAw3F,GAAAG,EACApoE,UAAAvvB,GACA2vD,aAAA56C,EAAA,KAAA0X,EAAAzX,EAAA,KAAAyX,IAAA1X,EAAA,KAAA0X,EAAAzX,EAAA,KAAAyX,KACAy7B,OAAA4vC,GAEAL,EAAAG,EACAroE,WAAAxa,EAAA,KAAA0X,EAAAzX,EAAA,KAAAyX,IACAkjC,aAAA56C,EAAA,KAAA0X,EAAA8/B,GAAAv3C,EAAA,IAAAyX,EAAA8/B,KAAAx3C,EAAA,KAAA0X,EAAA8/B,GAAAv3C,EAAA,KAAAyX,EAAA8/B,MACArE,OAAA4vC,GAEAJ,EAAAG,EACAtoE,WAAAxa,EAAA,KAAA0X,EAAAzX,EAAA,KAAAyX,IACAkjC,aAAA56C,EAAA,KAAA0X,EAAA8/B,GAAAv3C,EAAA,KAAAyX,EAAA8/B,KAAAx3C,EAAA,KAAA0X,EAAA8/B,GAAAv3C,EAAA,KAAAyX,EAAA8/B,MACArE,OAAA4vC,GAEAP,GAGAA,EAAAphC,aAAAohC,GAEAA,EAAArhC,WAAAqhC,GAEAA,EAAAxnE,MAAA,OA4BAgoE,GAAA9+B,GAAA,SAAA++B,GACA,MAAAttC,IAAA,KAAAstC,KAGAD,IAAA/0D,OAAAk2B,GAAA,SAAAztC,GACA,SAAAk8B,GAAAl8B,EAAA,IAGA,IAAAwsE,IAAA,WACA,MAAA1gC,IAAAwgC,IACAhoE,MAAA,QACAwoC,UAAA,UAGA2/B,GAAAj/B,GAAA,SAAAvtD,GACA,OAAAA,EAAA+7C,GAAA/7C,OAAAo8C,GAAAp8C,IAGAwsF,IAAAl1D,OAAAk2B,GAAA,SAAAztC,GACA,MAAAA,IAGA,IAAA0sE,IAAA,WACA,MAAA5gC,IAAA2gC,IACAnoE,MAAA,SACAwoC,UAAA,SAOAc,IAAAr2B,OAAA,SAAAjuB,EAAAC,GACA,OAAAD,EAAA,EAAAygD,GAAAllC,GAAAtb,IAAA4yC,IAGA,IAAAwwC,IAAA,WACA,MAAA5+B,IAAAH,IACAtpC,MAAA,IAAAs+B,KA0DAgqC,GAAA,WACA,MAAA5/B,IAAAkB,IACA5pC,MAAA,OACA2oC,WAAA,QAOAoB,IAAA92B,OAAA82B,EAEA,IAAAw+B,IAAA,WACA,MAAA/gC,IAAAuC,IACA/pC,MAAA,SAuBAwoE,GAAA,WACA,MAAA9/B,IAAAsB,IACAhqC,MAAA,SACA2hB,QAAA,YAQAwoB,IAAAl3B,OAAAk2B,GAAA1D,GAEA,IAAAgjC,IAAA,WACA,MAAAjhC,IAAA2C,IACAnqC,MAAA,SACAwoC,UAAA,IAOA4B,IAAAn3B,OAAAk2B,GAAAvR,GAEA,IAAA8wC,IAAA,WACA,MAAAlhC,IAAA4C,IACApqC,MAAA,OACAwoC,UAAA,GAAAhM,IAQA6N,IAAAp3B,OAAAk2B,GAAA,SAAAztC,GACA,SAAA+pC,GAAA/pC,IAGA,IAAAitE,IAAA,WACA,MAAAnhC,IAAA6C,IACArqC,MAAA,KACAwoC,UAAA,KAOA8B,IAAAr3B,OAAA,SAAAjuB,EAAAC,GACA,QAAAA,EAAA,EAAAwgD,GAAAllC,GAAAvb,IAAA6yC,IAGA,IAAA+wC,IAAA,WACA,GAAA3xE,GAAAwyC,GAAAa,IACA3oB,EAAA1qB,EAAA0qB,OACA7hB,EAAA7I,EAAA6I,MAUA,OARA7I,GAAA0qB,OAAA,SAAA1xC,GACA,MAAA4V,WAAA/N,OAAA6pC,IAAA1xC,EAAA,GAAAA,EAAA,MAAAA,EAAA0xC,KAAA1xC,EAAA,IAAAA,EAAA,MAGAgnB,EAAA6I,OAAA,SAAA7vB,GACA,MAAA4V,WAAA/N,OAAAgoB,GAAA7vB,EAAA,GAAAA,EAAA,GAAAA,EAAA6H,OAAA,EAAA7H,EAAA,YAAAA,EAAA6vB,KAAA7vB,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGA6vB,GAAA,SACAE,MAAA,SAGA9yB,GAAAq9D,WACAr9D,EAAA27F,OAAAt2D,GACArlC,EAAAqlC,eACArlC,EAAAy9D,cACAz9D,EAAAkd,aACAld,EAAA6oC,YACA7oC,EAAA09D,cACA19D,EAAA69D,aACA79D,EAAAykD,UACAzkD,EAAAk+D,aACAl+D,EAAA47F,0BAAAt9B,GACAt+D,EAAA67F,eAAAt9B,GACAv+D,EAAA87F,iBAAA99B,GACAh+D,EAAAqT,OACArT,EAAAw+D,QACAx+D,EAAAy+D,UACAz+D,EAAA41C,SACA51C,EAAA6P,OACA7P,EAAA6+D,SACA7+D,EAAA8+D,WACA9+D,EAAA+7F,SAAAx0D,GACAvnC,EAAA03B,SACA13B,EAAAg/D,QACAh/D,EAAAm/D,WACAn/D,EAAAq/D,OACAr/D,EAAAomC,SACApmC,EAAAmd,WACAnd,EAAAs/D,aACAt/D,EAAA49D,YACA59D,EAAAu/D,OACAv/D,EAAA2/D,WACA3/D,EAAA0/D,QACA1/D,EAAAukC,UACAvkC,EAAAie,IAAAF,EACA/d,EAAAme,MACAne,EAAA4/D,QACA5/D,EAAAg8F,cAAA37B,GACArgE,EAAAygE,aAAAtS,GACAnuD,EAAAi8F,gBAAAz7B,GACAxgE,EAAAk8F,YAAAv7B,GACA3gE,EAAA4gE,gBAAAF,GACA1gE,EAAAm8F,kBAAAt7B,GACA7gE,EAAAo8F,WAAAz9E,EACA3e,EAAAq8F,SAAAt9E,EACA/e,EAAAs8F,WAAAz9E,EACA7e,EAAAu8F,YAAAz9E,EACA9e,EAAAw8F,cAAAz9E,EACA/e,EAAAy8F,UAAAv9E,EACAlf,EAAA08F,YAAA19E,EACAhf,EAAA28F,aAAA19E,EACAjf,EAAA48F,eAAA19E,EACAlf,EAAA68F,SAAA57B,GACAjhE,EAAA88F,WAAAh8B,GACA9gE,EAAA+8F,YAAA/7B,GACAhhE,EAAAg9F,cAAA/7B,GACAjhE,EAAAi9F,QAAAz9E,EACAxf,EAAAk9F,UAAA/9E,EACAnf,EAAAm9F,WAAA79E,EACAtf,EAAAo9F,aAAA59E,EACAxf,EAAAq9F,QAAAz9E,EACA5f,EAAAs9F,UAAA59E,EACA1f,EAAAu9F,WAAA59E,EACA3f,EAAAw9F,aAAA59E,EACA5f,EAAAy9F,WAAA19E,EACA/f,EAAA09F,aAAA79E,EACA7f,EAAA29F,cAAA79E,EACA9f,EAAA49F,gBAAA79E,EACA/f,EAAA69F,WAAA59E,EACAjgB,EAAA89F,aAAA99E,EACAhgB,EAAA+9F,cAAA99E,EACAjgB,EAAAg+F,gBAAAp9E,EACA5gB,EAAAi+F,SAAA58B,GACArhE,EAAAk+F,WAAA/8B,GACAnhE,EAAAm+F,YAAA/8B,GACAphE,EAAAo+F,cAAA/8B,GACArhE,EAAAq+F,YAAA38B,GACA1hE,EAAAs+F,cAAA78B,GACAzhE,EAAAu+F,eAAA78B,GACA1hE,EAAAw+F,iBAAA78B,GACA3hE,EAAAy+F,YAAA78B,GACA5hE,EAAA0+F,gBAAA78B,GACA7hE,EAAA2+F,YAAA78B,GACA9hE,EAAAq4F,gBAAAh2B,GACAriE,EAAA4+F,cAAAr8B,GACAviE,EAAAuhB,OACAvhB,EAAAgjB,WACAhjB,EAAAukB,QACAvkB,EAAA4hD,OACA5hD,EAAA4hE,KAAAmF,GACA/mE,EAAA01C,QACA11C,EAAAynE,OACAznE,EAAA8nE,cACA9nE,EAAAkoB,WAAA2/C,GACA7nE,EAAAk5B,UACAl5B,EAAAipE,WACAjpE,EAAA6+F,aAAA5mD,GACAj4C,EAAA8+F,YAAA12B,GACApoE,EAAA++F,cAAAx2B,GACAvoE,EAAAg/F,aAAAn2B,GACA7oE,EAAAi/F,WAAAr2B,GACA5oE,EAAAk/F,eAAAn2B,GACA/oE,EAAAm/F,UAAAn2B,GACAhpE,EAAAo/F,iBAAA51B,GACAxpE,EAAAq/F,eAAA51B,GACAzpE,EAAAs/F,WAAAn2B,GACAnpE,EAAAu/F,YAAA71B,GACA1pE,EAAAw/F,oBAAA11B,GACA9pE,EAAAy/F,kBAAA11B,GACA/pE,EAAA0/F,cAAA/1B,GACA3pE,EAAA2/F,sBAAAx1B,GACAnqE,EAAA4/F,oBAAAx1B,GACApqE,EAAA6/F,gBAAA31B,GACAlqE,EAAA8/F,kBAAAz1B,GACArqE,EAAA0mE,eACA1mE,EAAA+/F,eAAA30E,GACAprB,EAAAggG,eAAA30E,GACArrB,EAAAigG,aAAAx1B,GACAzqE,EAAAkgG,UAAA9zF,GACApM,EAAAmgG,eAAAx0E,GACA3rB,EAAAogG,gBAAA10E,GACA1rB,EAAA6qE,SACA7qE,EAAAqgG,kBAAAj1B,GACAprE,EAAAsgG,gBAAA31B,GACA3qE,EAAAugG,sBAAAl1B,GACArrE,EAAAwgG,kBAAAl1B,GACAtrE,EAAAygG,oBAAA50B,GACA7rE,EAAA0gG,qBAAA30B,GACA/rE,EAAA2gG,oBAAA30B,GACAhsE,EAAA4gG,eAAAh2B,GACA5qE,EAAA6gG,kBAAA38D,GACAlkC,EAAAqsB,SACArsB,EAAAytB,OACAztB,EAAA4tB,OACA5tB,EAAA0uB,OACA1uB,EAAAivB,OACAjvB,EAAA2vB,aACA3vB,EAAAulC,eACAvlC,EAAA8gG,iBAAA5qB,GACAl2E,EAAA+gG,gBAAAzpE,GACAt3B,EAAA2yB,qBACA3yB,EAAAghG,kBAAAhjF,GACAhe,EAAAkmC,oBACAlmC,EAAAu2E,qBACAv2E,EAAA82E,2BACA92E,EAAA+2E,2BACA/2E,EAAAq3E,mBACAr3E,EAAA61E,kBACA71E,EAAAihG,oBAAAjrB,GACAh2E,EAAAkhG,0BAAAjrB,GACAj2E,EAAAmhG,eAAAxpB,GACA33E,EAAAohG,mBAAAxpB,GACA53E,EAAAqhG,eAAA3tE,GACA1zB,EAAAshG,eAAAzpB,GACA73E,EAAAuhG,mBAAAzpB,GACA93E,EAAAwhG,qBAAAzpB,GACA/3E,EAAAyhG,yBAAAzpB,GACAh4E,EAAA0hG,iBAAA/rB,GACA31E,EAAA2hG,uBAAA/rB,GACA51E,EAAAi4E,YACAj4E,EAAA+zB,YACA/zB,EAAA4hG,UAAAzpB,GACAn4E,EAAAi5E,YACAj5E,EAAAk5E,gBACAl5E,EAAAm5E,aACAn5E,EAAAo5E,iBACAp5E,EAAAs5E,YACAt5E,EAAAu5E,gBACAv5E,EAAAw5E,aACAx5E,EAAAy5E,iBACAz5E,EAAA05E,WACA15E,EAAAg7E,QACAh7E,EAAAm7E,QACAn7E,EAAA+D,QACA/D,EAAAo7E,OACAp7E,EAAAg5E,IAAAuC,GACAv7E,EAAAq5E,IAAAmC,GACAx7E,EAAAqM,OACArM,EAAAk2B,SACAl2B,EAAAs2B,cACAt2B,EAAA22B,QAAAwa,GACAnxC,EAAAi3B,SAAA2kD,GACA57E,EAAA6hG,aAAA3qE,GACAl3B,EAAA8hG,gBAAAhmB,GACA97E,EAAA+hG,iBAAAhmB,GACA/7E,EAAAgiG,WAAA7lB,GACAn8E,EAAAiiG,YAAA7lB,GACAp8E,EAAAkiG,WAAA7lB,GACAr8E,EAAAmiG,YAAA7lB,GACAt8E,EAAAoiG,SAAA7lB,GACAv8E,EAAAqiG,UAAA7lB,GACAx8E,EAAAsiG,QAAAngE,GACAniC,EAAAuiG,SAAAtkE,GACAj+B,EAAAwiG,SAAAhgE,GACAxiC,EAAAyiG,UAAA3lB,GACA98E,EAAA0iG,WAAAlgE,GACAxiC,EAAA2iG,YAAA7lB,GACA98E,EAAA4iG,WAAAngE,GACAziC,EAAA6iG,YAAA9lB,GACA/8E,EAAA8iG,YAAArmB,GACAz8E,EAAA+iG,aAAA/lB,GACAh9E,EAAAgjG,cAAAtmB,GACA18E,EAAAijG,eAAAhmB,GACAj9E,EAAAkjG,aAAAvmB,GACA38E,EAAAmjG,cAAAjmB,GACAl9E,EAAAojG,WAAAxmB,GACA58E,EAAAqjG,YAAAlmB,GACAn9E,EAAAsjG,aAAAzmB,GACA78E,EAAAujG,cAAAnmB,GACAp9E,EAAAwjG,UAAAnmB,GACAr9E,EAAAyjG,WAAAtlE,GACAn+B,EAAA0jG,SAAAthE,GACApiC,EAAA2jG,UAAApmB,GACAv9E,EAAA4jG,eAAA9nB,GACA97E,EAAA6jG,gBAAA9nB,GACA/7E,EAAA8jG,UAAA3nB,GACAn8E,EAAA+jG,WAAA3nB,GACAp8E,EAAAw9E,aACAx9E,EAAA09E,cACA19E,EAAA29E,WACA39E,EAAA69E,YACA79E,EAAA2iC,UACA3iC,EAAA89E,WACA99E,EAAAgkG,QAAAhhE,GACAhjC,EAAAikG,SAAA7lB,GACAp+E,EAAAgjC,aACAhjC,EAAAo+E,cACAp+E,EAAAijC,aACAjjC,EAAAq+E,cACAr+E,EAAA+9E,cACA/9E,EAAAs+E,eACAt+E,EAAAg+E,gBACAh+E,EAAAu+E,iBACAv+E,EAAAi+E,eACAj+E,EAAAw+E,gBACAx+E,EAAAk+E,aACAl+E,EAAAy+E,cACAz+E,EAAAm+E,eACAn+E,EAAA0+E,gBACA1+E,EAAA2+E,YACA3+E,EAAA6+E,aACA7+E,EAAA4iC,WACA5iC,EAAA++E,YACA/+E,EAAAy5B,gBACAz5B,EAAAkkG,oBAAA3qE,GACAv5B,EAAAggF,mBACAhgF,EAAA0gF,kBACA1gF,EAAA2gF,mBACA3gF,EAAA4gF,kBACA5gF,EAAAmkG,UAAAnjB,GACAhhF,EAAAokG,SAAAnjB,GACAjhF,EAAAqkG,iBAAAhqE,GACAr6B,EAAAskG,wBAAAnhE,GACAnjC,EAAAukG,UAAAvgE,GACAhkC,EAAAwkG,WAAA7/D,GACA3kC,EAAAykG,cAAAj+D,GACAxmC,EAAA0kG,YAAAn+D,GACAvmC,EAAA2kG,SAAA5jG,GACAf,EAAA4kG,aAAAlhE,GACA1jC,EAAA6kG,cAAAjhE,GACA5jC,EAAA8kG,SAAAxoF,GACAtc,EAAA+kG,UAAA1oF,GACArc,EAAAglG,cAAA39D,GACArnC,EAAAilG,cAAAv9D,GACA1nC,EAAAklG,eAAAv9D,GACA3nC,EAAAmlG,UAAA/uE,GACAp2B,EAAAolG,SAAAjkB,GACAnhF,EAAAqlG,iBAAAjkB,GACAphF,EAAAslG,kBAAAjkB,GACArhF,EAAAulG,kBAAAjkB,GACAthF,EAAAwlG,iBAAAjkB,GACAvhF,EAAAylG,gBAAAl8D,GACAvpC,EAAA0lG,4BAAAlkB,GACAxhF,EAAA2lG,mBAAA/jB,GACA5hF,EAAA4lG,gBAAAnkB,GACAzhF,EAAA6lG,gBAAAnkB,GACA1hF,EAAA8lG,mBAAAhkB,GACA9hF,EAAA+lG,iBAAAhkB,GACA/hF,EAAAgmG,mBAAAhkB,GACAhiF,EAAAimG,kBAAAhkB,GACAjiF,EAAAsiF,WACAtiF,EAAAurC,eACAvrC,EAAAiqC,SACAjqC,EAAAuiF,QAAAQ,GACA/iF,EAAAinD,SACAjnD,EAAAqiF,aACAriF,EAAAkiF,cACAliF,EAAA21C,UACA31C,EAAAs1C,aACAt1C,EAAAqwC,aACArwC,EAAAwiF,YACAxiF,EAAA+jF,eACA/jF,EAAA8mF,SACA9mF,EAAA4b,WACA5b,EAAAM,UACAN,EAAAg+C,UACAh+C,EAAAmR,aACAnR,EAAAiN,cACAjN,EAAAk2C,WACAl2C,EAAAm2C,aACAn2C,EAAAo2C,cACAp2C,EAAAq2C,YACAr2C,EAAA2oF,WACA3oF,EAAAk3C,aACAl3C,EAAAw6C,KAAA/vC,GACAzK,EAAAkmG,aAAApc,GACA9pF,EAAAg6C,YAAAS,GACAz6C,EAAAiqF,aACAjqF,EAAAsqF,YACAtqF,EAAAwhB,QACAxhB,EAAAyrF,QAAAD,GACAxrF,EAAAmmG,cAAAna,GACAhsF,EAAA68C,eACA78C,EAAA88C,gBACA98C,EAAAomG,iBAAA7Z,GACAvsF,EAAAqmG,gBAAA9a,GACAvrF,EAAAsmG,kBAAA9Z,GACAxsF,EAAAumG,YAAA7Z,GACA1sF,EAAAwmG,aAAAxZ,GACAhtF,EAAAymG,UAAA/Y,GACA1tF,EAAA0mG,cAAA5X,GACA9uF,EAAA2mG,gBAAAtY,GACAruF,EAAA4mG,OAAAvX,GACArvF,EAAA6mG,OAAAvX,GACAtvF,EAAAwvF,QACAxvF,EAAAopD,eACAppD,EAAA8mG,WAAAvpD,GACAv9C,EAAA4wF,WACA5wF,EAAAsxF,QACAtxF,EAAA+mG,aAAAliD,GACA7kD,EAAAgnG,cAAArtF,GACA3Z,EAAAmmD,SACAnmD,EAAAgmD,UACAhmD,EAAAkmD,UACAlmD,EAAA8lD,kBACA9lD,EAAAyzF,SACAzzF,EAAAs0F,UACAt0F,EAAAinG,UAAA5M,GACAr6F,EAAAknG,aAAA5M,GACAt6F,EAAAmnG,QAAAjR,GACAl2F,EAAAonG,sBAAApM,GACAh7F,EAAAqnG,yBAAAvM,GACA96F,EAAAsnG,wBAAApM,GACAl7F,EAAAunG,2BAAAtM,GACAj7F,EAAAwnG,UAAArR,GACAn2F,EAAAynG,YAAApR,GACAr2F,EAAA0nG,UAAAlR,GACAx2F,EAAA2nG,cAAA/Q,GACA52F,EAAA4nG,kBAAAxM,GACAp7F,EAAA6nG,qBAAAnrC,GACA18D,EAAA8nG,kBAAA1N,GACAp6F,EAAA+nG,qBAAArsC,GACA17D,EAAAgoG,oBAAA1M,GACAt7F,EAAAioG,uBAAAnrC,GACA98D,EAAAkoG,YAAAha,GACAluF,EAAAmoG,mBAAA9M,GACAr7F,EAAAooG,sBAAAvrC,GACA78D,EAAAqoG,YAAA9M,GACAv7F,EAAAsoG,eAAArrC,GACAj9D,EAAAuoG,aAAAxR,GACA/2F,EAAAwoG,eAAAjR,GACAv3F,EAAAyoG,UAAA5R,GACA72F,EAAA0oG,YAAAvN,GACAn7F,EAAA2oG,eAAAvsC,GACAp8D,EAAA4oG,gBAAApN,GACAx7F,EAAA6oG,mBAAA3rC,GACAl9D,EAAA8oG,QAAA7Q,GACAj4F,EAAA+oG,cAAAzuC,GACAt6D,EAAAgpG,qBAAAzuC,GACAv6D,EAAAipG,YAAAp3C,GACA7xD,EAAAkpG,iBAAAzN,GACAz7F,EAAAmpG,oBAAAhsC,GACAn9D,EAAA+4D,aACA/4D,EAAAopG,aAAAjP,GACAn6F,EAAAqpG,sBAAA3N,GACA17F,EAAAspG,yBAAAlsC,GAEAlxC,OAAAq9E,eAAAvpG,EAAA,cAA8C0Y,OAAA","file":"app.8dae6fc901c95cee51ac.bundle.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar $ = __webpack_require__(1);\n\tvar slick = __webpack_require__(2);\n\tvar d3 = __webpack_require__(3);\n\t\n\tvar $siteNav = $('.siteNav');\n\tvar lastScroll = 0;\n\tvar timedNavHide = void 0;\n\t\n\t// Hiding functionality for Nav\n\t// Only hide on non-mobile screens\n\t$(window).on('scroll', function () {\n\t    if ($(this).width() > 660) {\n\t        var thisScroll = $(this).scrollTop();\n\t        // Always show Nav when at the top of the page\n\t        if (thisScroll < 100) {\n\t            clearTimeout(timedNavHide);\n\t            $siteNav.show();\n\t            console.log('showing nav: at top');\n\t            // Hide Nav on scroll down\n\t        } else if (thisScroll > lastScroll) {\n\t            $siteNav.slideUp('fast');\n\t            console.log('hiding nav on scroll');\n\t            // Show Nav on scroll up, but hide again after 2 seconds\n\t        } else {\n\t            $siteNav.slideDown('fast');\n\t            console.log('showing nav on scroll');\n\t            clearTimeout(timedNavHide);\n\t            timedNavHide = setTimeout(hideNav, 2000);\n\t        }\n\t        lastScroll = thisScroll;\n\t        // Hide menu if open on mobile scroll\n\t    } else {\n\t        if ($siteNav.hasClass('js-responsive')) {\n\t            $siteNav.removeClass('js-responsive');\n\t        }\n\t    }\n\t});\n\t\n\t// Don't hide the Nav while hovering over\n\t$siteNav.on('mouseenter', function () {\n\t    clearTimeout(timedNavHide);\n\t});\n\t\n\t// If not at top, hide the Nav again on mouse out\n\t$siteNav.on('mouseleave', function () {\n\t    var thisScroll = $(this).scrollTop();\n\t    if (thisScroll > 100) {\n\t        timedNavHide = setTimeout(hideNav, 2000);\n\t    }\n\t});\n\t\n\tvar hideNav = function hideNav() {\n\t    return $siteNav.slideUp('fast');\n\t};\n\t\n\t$('.siteNav_menuBtn').on('click', function () {\n\t    $siteNav.toggleClass('js-responsive');\n\t});\n\t\n\t$('.work_content').slick({\n\t    arrows: true,\n\t    dots: true,\n\t    infinite: true,\n\t    speed: 300,\n\t    slidesToShow: 2,\n\t    adaptiveHeight: true,\n\t    responsive: [{\n\t        breakpoint: 420,\n\t        settings: {\n\t            slidesToShow: 1\n\t        }\n\t    }]\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/*\n\t     _ _      _       _\n\t ___| (_) ___| | __  (_)___\n\t/ __| | |/ __| |/ /  | / __|\n\t\\__ \\ | | (__|   < _ | \\__ \\\n\t|___/_|_|\\___|_|\\_(_)/ |___/\n\t                   |__/\n\t\n\t Version: 1.6.0\n\t  Author: Ken Wheeler\n\t Website: http://kenwheeler.github.io\n\t    Docs: http://kenwheeler.github.io/slick\n\t    Repo: http://github.com/kenwheeler/slick\n\t  Issues: http://github.com/kenwheeler/slick/issues\n\t\n\t */\n\t/* global window, document, define, jQuery, setInterval, clearInterval */\n\t(function (factory) {\n\t    'use strict';\n\t\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== 'undefined') {\n\t        module.exports = factory(require('jquery'));\n\t    } else {\n\t        factory(jQuery);\n\t    }\n\t})(function ($) {\n\t    'use strict';\n\t\n\t    var Slick = window.Slick || {};\n\t\n\t    Slick = function () {\n\t\n\t        var instanceUid = 0;\n\t\n\t        function Slick(element, settings) {\n\t\n\t            var _ = this,\n\t                dataSettings;\n\t\n\t            _.defaults = {\n\t                accessibility: true,\n\t                adaptiveHeight: false,\n\t                appendArrows: $(element),\n\t                appendDots: $(element),\n\t                arrows: true,\n\t                asNavFor: null,\n\t                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n\t                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n\t                autoplay: false,\n\t                autoplaySpeed: 3000,\n\t                centerMode: false,\n\t                centerPadding: '50px',\n\t                cssEase: 'ease',\n\t                customPaging: function customPaging(slider, i) {\n\t                    return $('<button type=\"button\" data-role=\"none\" role=\"button\" tabindex=\"0\" />').text(i + 1);\n\t                },\n\t                dots: false,\n\t                dotsClass: 'slick-dots',\n\t                draggable: true,\n\t                easing: 'linear',\n\t                edgeFriction: 0.35,\n\t                fade: false,\n\t                focusOnSelect: false,\n\t                infinite: true,\n\t                initialSlide: 0,\n\t                lazyLoad: 'ondemand',\n\t                mobileFirst: false,\n\t                pauseOnHover: true,\n\t                pauseOnFocus: true,\n\t                pauseOnDotsHover: false,\n\t                respondTo: 'window',\n\t                responsive: null,\n\t                rows: 1,\n\t                rtl: false,\n\t                slide: '',\n\t                slidesPerRow: 1,\n\t                slidesToShow: 1,\n\t                slidesToScroll: 1,\n\t                speed: 500,\n\t                swipe: true,\n\t                swipeToSlide: false,\n\t                touchMove: true,\n\t                touchThreshold: 5,\n\t                useCSS: true,\n\t                useTransform: true,\n\t                variableWidth: false,\n\t                vertical: false,\n\t                verticalSwiping: false,\n\t                waitForAnimate: true,\n\t                zIndex: 1000\n\t            };\n\t\n\t            _.initials = {\n\t                animating: false,\n\t                dragging: false,\n\t                autoPlayTimer: null,\n\t                currentDirection: 0,\n\t                currentLeft: null,\n\t                currentSlide: 0,\n\t                direction: 1,\n\t                $dots: null,\n\t                listWidth: null,\n\t                listHeight: null,\n\t                loadIndex: 0,\n\t                $nextArrow: null,\n\t                $prevArrow: null,\n\t                slideCount: null,\n\t                slideWidth: null,\n\t                $slideTrack: null,\n\t                $slides: null,\n\t                sliding: false,\n\t                slideOffset: 0,\n\t                swipeLeft: null,\n\t                $list: null,\n\t                touchObject: {},\n\t                transformsEnabled: false,\n\t                unslicked: false\n\t            };\n\t\n\t            $.extend(_, _.initials);\n\t\n\t            _.activeBreakpoint = null;\n\t            _.animType = null;\n\t            _.animProp = null;\n\t            _.breakpoints = [];\n\t            _.breakpointSettings = [];\n\t            _.cssTransitions = false;\n\t            _.focussed = false;\n\t            _.interrupted = false;\n\t            _.hidden = 'hidden';\n\t            _.paused = true;\n\t            _.positionProp = null;\n\t            _.respondTo = null;\n\t            _.rowCount = 1;\n\t            _.shouldClick = true;\n\t            _.$slider = $(element);\n\t            _.$slidesCache = null;\n\t            _.transformType = null;\n\t            _.transitionType = null;\n\t            _.visibilityChange = 'visibilitychange';\n\t            _.windowWidth = 0;\n\t            _.windowTimer = null;\n\t\n\t            dataSettings = $(element).data('slick') || {};\n\t\n\t            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\t\n\t            _.currentSlide = _.options.initialSlide;\n\t\n\t            _.originalSettings = _.options;\n\t\n\t            if (typeof document.mozHidden !== 'undefined') {\n\t                _.hidden = 'mozHidden';\n\t                _.visibilityChange = 'mozvisibilitychange';\n\t            } else if (typeof document.webkitHidden !== 'undefined') {\n\t                _.hidden = 'webkitHidden';\n\t                _.visibilityChange = 'webkitvisibilitychange';\n\t            }\n\t\n\t            _.autoPlay = $.proxy(_.autoPlay, _);\n\t            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n\t            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n\t            _.changeSlide = $.proxy(_.changeSlide, _);\n\t            _.clickHandler = $.proxy(_.clickHandler, _);\n\t            _.selectHandler = $.proxy(_.selectHandler, _);\n\t            _.setPosition = $.proxy(_.setPosition, _);\n\t            _.swipeHandler = $.proxy(_.swipeHandler, _);\n\t            _.dragHandler = $.proxy(_.dragHandler, _);\n\t            _.keyHandler = $.proxy(_.keyHandler, _);\n\t\n\t            _.instanceUid = instanceUid++;\n\t\n\t            // A simple way to check for HTML strings\n\t            // Strict HTML recognition (must start with <)\n\t            // Extracted from jQuery v1.11 source\n\t            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\t\n\t            _.registerBreakpoints();\n\t            _.init(true);\n\t        }\n\t\n\t        return Slick;\n\t    }();\n\t\n\t    Slick.prototype.activateADA = function () {\n\t        var _ = this;\n\t\n\t        _.$slideTrack.find('.slick-active').attr({\n\t            'aria-hidden': 'false'\n\t        }).find('a, input, button, select').attr({\n\t            'tabindex': '0'\n\t        });\n\t    };\n\t\n\t    Slick.prototype.addSlide = Slick.prototype.slickAdd = function (markup, index, addBefore) {\n\t\n\t        var _ = this;\n\t\n\t        if (typeof index === 'boolean') {\n\t            addBefore = index;\n\t            index = null;\n\t        } else if (index < 0 || index >= _.slideCount) {\n\t            return false;\n\t        }\n\t\n\t        _.unload();\n\t\n\t        if (typeof index === 'number') {\n\t            if (index === 0 && _.$slides.length === 0) {\n\t                $(markup).appendTo(_.$slideTrack);\n\t            } else if (addBefore) {\n\t                $(markup).insertBefore(_.$slides.eq(index));\n\t            } else {\n\t                $(markup).insertAfter(_.$slides.eq(index));\n\t            }\n\t        } else {\n\t            if (addBefore === true) {\n\t                $(markup).prependTo(_.$slideTrack);\n\t            } else {\n\t                $(markup).appendTo(_.$slideTrack);\n\t            }\n\t        }\n\t\n\t        _.$slides = _.$slideTrack.children(this.options.slide);\n\t\n\t        _.$slideTrack.children(this.options.slide).detach();\n\t\n\t        _.$slideTrack.append(_.$slides);\n\t\n\t        _.$slides.each(function (index, element) {\n\t            $(element).attr('data-slick-index', index);\n\t        });\n\t\n\t        _.$slidesCache = _.$slides;\n\t\n\t        _.reinit();\n\t    };\n\t\n\t    Slick.prototype.animateHeight = function () {\n\t        var _ = this;\n\t        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t            _.$list.animate({\n\t                height: targetHeight\n\t            }, _.options.speed);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.animateSlide = function (targetLeft, callback) {\n\t\n\t        var animProps = {},\n\t            _ = this;\n\t\n\t        _.animateHeight();\n\t\n\t        if (_.options.rtl === true && _.options.vertical === false) {\n\t            targetLeft = -targetLeft;\n\t        }\n\t        if (_.transformsEnabled === false) {\n\t            if (_.options.vertical === false) {\n\t                _.$slideTrack.animate({\n\t                    left: targetLeft\n\t                }, _.options.speed, _.options.easing, callback);\n\t            } else {\n\t                _.$slideTrack.animate({\n\t                    top: targetLeft\n\t                }, _.options.speed, _.options.easing, callback);\n\t            }\n\t        } else {\n\t\n\t            if (_.cssTransitions === false) {\n\t                if (_.options.rtl === true) {\n\t                    _.currentLeft = -_.currentLeft;\n\t                }\n\t                $({\n\t                    animStart: _.currentLeft\n\t                }).animate({\n\t                    animStart: targetLeft\n\t                }, {\n\t                    duration: _.options.speed,\n\t                    easing: _.options.easing,\n\t                    step: function step(now) {\n\t                        now = Math.ceil(now);\n\t                        if (_.options.vertical === false) {\n\t                            animProps[_.animType] = 'translate(' + now + 'px, 0px)';\n\t                            _.$slideTrack.css(animProps);\n\t                        } else {\n\t                            animProps[_.animType] = 'translate(0px,' + now + 'px)';\n\t                            _.$slideTrack.css(animProps);\n\t                        }\n\t                    },\n\t                    complete: function complete() {\n\t                        if (callback) {\n\t                            callback.call();\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t\n\t                _.applyTransition();\n\t                targetLeft = Math.ceil(targetLeft);\n\t\n\t                if (_.options.vertical === false) {\n\t                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n\t                } else {\n\t                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n\t                }\n\t                _.$slideTrack.css(animProps);\n\t\n\t                if (callback) {\n\t                    setTimeout(function () {\n\t\n\t                        _.disableTransition();\n\t\n\t                        callback.call();\n\t                    }, _.options.speed);\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.getNavTarget = function () {\n\t\n\t        var _ = this,\n\t            asNavFor = _.options.asNavFor;\n\t\n\t        if (asNavFor && asNavFor !== null) {\n\t            asNavFor = $(asNavFor).not(_.$slider);\n\t        }\n\t\n\t        return asNavFor;\n\t    };\n\t\n\t    Slick.prototype.asNavFor = function (index) {\n\t\n\t        var _ = this,\n\t            asNavFor = _.getNavTarget();\n\t\n\t        if (asNavFor !== null && (typeof asNavFor === 'undefined' ? 'undefined' : _typeof(asNavFor)) === 'object') {\n\t            asNavFor.each(function () {\n\t                var target = $(this).slick('getSlick');\n\t                if (!target.unslicked) {\n\t                    target.slideHandler(index, true);\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.applyTransition = function (slide) {\n\t\n\t        var _ = this,\n\t            transition = {};\n\t\n\t        if (_.options.fade === false) {\n\t            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t        } else {\n\t            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t        }\n\t\n\t        if (_.options.fade === false) {\n\t            _.$slideTrack.css(transition);\n\t        } else {\n\t            _.$slides.eq(slide).css(transition);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlay = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t\n\t        if (_.slideCount > _.options.slidesToShow) {\n\t            _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlayClear = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.autoPlayTimer) {\n\t            clearInterval(_.autoPlayTimer);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlayIterator = function () {\n\t\n\t        var _ = this,\n\t            slideTo = _.currentSlide + _.options.slidesToScroll;\n\t\n\t        if (!_.paused && !_.interrupted && !_.focussed) {\n\t\n\t            if (_.options.infinite === false) {\n\t\n\t                if (_.direction === 1 && _.currentSlide + 1 === _.slideCount - 1) {\n\t                    _.direction = 0;\n\t                } else if (_.direction === 0) {\n\t\n\t                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\t\n\t                    if (_.currentSlide - 1 === 0) {\n\t                        _.direction = 1;\n\t                    }\n\t                }\n\t            }\n\t\n\t            _.slideHandler(slideTo);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildArrows = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true) {\n\t\n\t            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n\t            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\t\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t\n\t                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\t                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\t\n\t                if (_.htmlExpr.test(_.options.prevArrow)) {\n\t                    _.$prevArrow.prependTo(_.options.appendArrows);\n\t                }\n\t\n\t                if (_.htmlExpr.test(_.options.nextArrow)) {\n\t                    _.$nextArrow.appendTo(_.options.appendArrows);\n\t                }\n\t\n\t                if (_.options.infinite !== true) {\n\t                    _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                }\n\t            } else {\n\t\n\t                _.$prevArrow.add(_.$nextArrow).addClass('slick-hidden').attr({\n\t                    'aria-disabled': 'true',\n\t                    'tabindex': '-1'\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildDots = function () {\n\t\n\t        var _ = this,\n\t            i,\n\t            dot;\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$slider.addClass('slick-dotted');\n\t\n\t            dot = $('<ul />').addClass(_.options.dotsClass);\n\t\n\t            for (i = 0; i <= _.getDotCount(); i += 1) {\n\t                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n\t            }\n\t\n\t            _.$dots = dot.appendTo(_.options.appendDots);\n\t\n\t            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildOut = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slides = _.$slider.children(_.options.slide + ':not(.slick-cloned)').addClass('slick-slide');\n\t\n\t        _.slideCount = _.$slides.length;\n\t\n\t        _.$slides.each(function (index, element) {\n\t            $(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');\n\t        });\n\t\n\t        _.$slider.addClass('slick-slider');\n\t\n\t        _.$slideTrack = _.slideCount === 0 ? $('<div class=\"slick-track\"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\t\n\t        _.$list = _.$slideTrack.wrap('<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n\t        _.$slideTrack.css('opacity', 0);\n\t\n\t        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n\t            _.options.slidesToScroll = 1;\n\t        }\n\t\n\t        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\t\n\t        _.setupInfinite();\n\t\n\t        _.buildArrows();\n\t\n\t        _.buildDots();\n\t\n\t        _.updateDots();\n\t\n\t        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\t\n\t        if (_.options.draggable === true) {\n\t            _.$list.addClass('draggable');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildRows = function () {\n\t\n\t        var _ = this,\n\t            a,\n\t            b,\n\t            c,\n\t            newSlides,\n\t            numOfSlides,\n\t            originalSlides,\n\t            slidesPerSection;\n\t\n\t        newSlides = document.createDocumentFragment();\n\t        originalSlides = _.$slider.children();\n\t\n\t        if (_.options.rows > 1) {\n\t\n\t            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n\t            numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);\n\t\n\t            for (a = 0; a < numOfSlides; a++) {\n\t                var slide = document.createElement('div');\n\t                for (b = 0; b < _.options.rows; b++) {\n\t                    var row = document.createElement('div');\n\t                    for (c = 0; c < _.options.slidesPerRow; c++) {\n\t                        var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);\n\t                        if (originalSlides.get(target)) {\n\t                            row.appendChild(originalSlides.get(target));\n\t                        }\n\t                    }\n\t                    slide.appendChild(row);\n\t                }\n\t                newSlides.appendChild(slide);\n\t            }\n\t\n\t            _.$slider.empty().append(newSlides);\n\t            _.$slider.children().children().children().css({\n\t                'width': 100 / _.options.slidesPerRow + '%',\n\t                'display': 'inline-block'\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.checkResponsive = function (initial, forceUpdate) {\n\t\n\t        var _ = this,\n\t            breakpoint,\n\t            targetBreakpoint,\n\t            respondToWidth,\n\t            triggerBreakpoint = false;\n\t        var sliderWidth = _.$slider.width();\n\t        var windowWidth = window.innerWidth || $(window).width();\n\t\n\t        if (_.respondTo === 'window') {\n\t            respondToWidth = windowWidth;\n\t        } else if (_.respondTo === 'slider') {\n\t            respondToWidth = sliderWidth;\n\t        } else if (_.respondTo === 'min') {\n\t            respondToWidth = Math.min(windowWidth, sliderWidth);\n\t        }\n\t\n\t        if (_.options.responsive && _.options.responsive.length && _.options.responsive !== null) {\n\t\n\t            targetBreakpoint = null;\n\t\n\t            for (breakpoint in _.breakpoints) {\n\t                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n\t                    if (_.originalSettings.mobileFirst === false) {\n\t                        if (respondToWidth < _.breakpoints[breakpoint]) {\n\t                            targetBreakpoint = _.breakpoints[breakpoint];\n\t                        }\n\t                    } else {\n\t                        if (respondToWidth > _.breakpoints[breakpoint]) {\n\t                            targetBreakpoint = _.breakpoints[breakpoint];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (targetBreakpoint !== null) {\n\t                if (_.activeBreakpoint !== null) {\n\t                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n\t                        _.activeBreakpoint = targetBreakpoint;\n\t                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t                            _.unslick(targetBreakpoint);\n\t                        } else {\n\t                            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n\t                            if (initial === true) {\n\t                                _.currentSlide = _.options.initialSlide;\n\t                            }\n\t                            _.refresh(initial);\n\t                        }\n\t                        triggerBreakpoint = targetBreakpoint;\n\t                    }\n\t                } else {\n\t                    _.activeBreakpoint = targetBreakpoint;\n\t                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t                        _.unslick(targetBreakpoint);\n\t                    } else {\n\t                        _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n\t                        if (initial === true) {\n\t                            _.currentSlide = _.options.initialSlide;\n\t                        }\n\t                        _.refresh(initial);\n\t                    }\n\t                    triggerBreakpoint = targetBreakpoint;\n\t                }\n\t            } else {\n\t                if (_.activeBreakpoint !== null) {\n\t                    _.activeBreakpoint = null;\n\t                    _.options = _.originalSettings;\n\t                    if (initial === true) {\n\t                        _.currentSlide = _.options.initialSlide;\n\t                    }\n\t                    _.refresh(initial);\n\t                    triggerBreakpoint = targetBreakpoint;\n\t                }\n\t            }\n\t\n\t            // only trigger breakpoints during an actual break. not on initialize.\n\t            if (!initial && triggerBreakpoint !== false) {\n\t                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.changeSlide = function (event, dontAnimate) {\n\t\n\t        var _ = this,\n\t            $target = $(event.currentTarget),\n\t            indexOffset,\n\t            slideOffset,\n\t            unevenOffset;\n\t\n\t        // If target is a link, prevent default action.\n\t        if ($target.is('a')) {\n\t            event.preventDefault();\n\t        }\n\t\n\t        // If target is not the <li> element (ie: a child), find the <li>.\n\t        if (!$target.is('li')) {\n\t            $target = $target.closest('li');\n\t        }\n\t\n\t        unevenOffset = _.slideCount % _.options.slidesToScroll !== 0;\n\t        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\t\n\t        switch (event.data.message) {\n\t\n\t            case 'previous':\n\t                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n\t                if (_.slideCount > _.options.slidesToShow) {\n\t                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n\t                }\n\t                break;\n\t\n\t            case 'next':\n\t                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n\t                if (_.slideCount > _.options.slidesToShow) {\n\t                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n\t                }\n\t                break;\n\t\n\t            case 'index':\n\t                var index = event.data.index === 0 ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;\n\t\n\t                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n\t                $target.children().trigger('focus');\n\t                break;\n\t\n\t            default:\n\t                return;\n\t        }\n\t    };\n\t\n\t    Slick.prototype.checkNavigable = function (index) {\n\t\n\t        var _ = this,\n\t            navigables,\n\t            prevNavigable;\n\t\n\t        navigables = _.getNavigableIndexes();\n\t        prevNavigable = 0;\n\t        if (index > navigables[navigables.length - 1]) {\n\t            index = navigables[navigables.length - 1];\n\t        } else {\n\t            for (var n in navigables) {\n\t                if (index < navigables[n]) {\n\t                    index = prevNavigable;\n\t                    break;\n\t                }\n\t                prevNavigable = navigables[n];\n\t            }\n\t        }\n\t\n\t        return index;\n\t    };\n\t\n\t    Slick.prototype.cleanUpEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.dots && _.$dots !== null) {\n\t\n\t            $('li', _.$dots).off('click.slick', _.changeSlide).off('mouseenter.slick', $.proxy(_.interrupt, _, true)).off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t\n\t        _.$slider.off('focus.slick blur.slick');\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n\t            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\t        }\n\t\n\t        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n\t        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n\t        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n\t        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\t\n\t        _.$list.off('click.slick', _.clickHandler);\n\t\n\t        $(document).off(_.visibilityChange, _.visibility);\n\t\n\t        _.cleanUpSlideEvents();\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.$list.off('keydown.slick', _.keyHandler);\n\t        }\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n\t        }\n\t\n\t        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\t\n\t        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\t\n\t        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\t\n\t        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\t        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\t    };\n\t\n\t    Slick.prototype.cleanUpSlideEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t    };\n\t\n\t    Slick.prototype.cleanUpRows = function () {\n\t\n\t        var _ = this,\n\t            originalSlides;\n\t\n\t        if (_.options.rows > 1) {\n\t            originalSlides = _.$slides.children().children();\n\t            originalSlides.removeAttr('style');\n\t            _.$slider.empty().append(originalSlides);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.clickHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.shouldClick === false) {\n\t            event.stopImmediatePropagation();\n\t            event.stopPropagation();\n\t            event.preventDefault();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.destroy = function (refresh) {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t\n\t        _.touchObject = {};\n\t\n\t        _.cleanUpEvents();\n\t\n\t        $('.slick-cloned', _.$slider).detach();\n\t\n\t        if (_.$dots) {\n\t            _.$dots.remove();\n\t        }\n\t\n\t        if (_.$prevArrow && _.$prevArrow.length) {\n\t\n\t            _.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');\n\t\n\t            if (_.htmlExpr.test(_.options.prevArrow)) {\n\t                _.$prevArrow.remove();\n\t            }\n\t        }\n\t\n\t        if (_.$nextArrow && _.$nextArrow.length) {\n\t\n\t            _.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');\n\t\n\t            if (_.htmlExpr.test(_.options.nextArrow)) {\n\t                _.$nextArrow.remove();\n\t            }\n\t        }\n\t\n\t        if (_.$slides) {\n\t\n\t            _.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function () {\n\t                $(this).attr('style', $(this).data('originalStyling'));\n\t            });\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slideTrack.detach();\n\t\n\t            _.$list.detach();\n\t\n\t            _.$slider.append(_.$slides);\n\t        }\n\t\n\t        _.cleanUpRows();\n\t\n\t        _.$slider.removeClass('slick-slider');\n\t        _.$slider.removeClass('slick-initialized');\n\t        _.$slider.removeClass('slick-dotted');\n\t\n\t        _.unslicked = true;\n\t\n\t        if (!refresh) {\n\t            _.$slider.trigger('destroy', [_]);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.disableTransition = function (slide) {\n\t\n\t        var _ = this,\n\t            transition = {};\n\t\n\t        transition[_.transitionType] = '';\n\t\n\t        if (_.options.fade === false) {\n\t            _.$slideTrack.css(transition);\n\t        } else {\n\t            _.$slides.eq(slide).css(transition);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.fadeSlide = function (slideIndex, callback) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.cssTransitions === false) {\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                zIndex: _.options.zIndex\n\t            });\n\t\n\t            _.$slides.eq(slideIndex).animate({\n\t                opacity: 1\n\t            }, _.options.speed, _.options.easing, callback);\n\t        } else {\n\t\n\t            _.applyTransition(slideIndex);\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                opacity: 1,\n\t                zIndex: _.options.zIndex\n\t            });\n\t\n\t            if (callback) {\n\t                setTimeout(function () {\n\t\n\t                    _.disableTransition(slideIndex);\n\t\n\t                    callback.call();\n\t                }, _.options.speed);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.fadeSlideOut = function (slideIndex) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.cssTransitions === false) {\n\t\n\t            _.$slides.eq(slideIndex).animate({\n\t                opacity: 0,\n\t                zIndex: _.options.zIndex - 2\n\t            }, _.options.speed, _.options.easing);\n\t        } else {\n\t\n\t            _.applyTransition(slideIndex);\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                opacity: 0,\n\t                zIndex: _.options.zIndex - 2\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function (filter) {\n\t\n\t        var _ = this;\n\t\n\t        if (filter !== null) {\n\t\n\t            _.$slidesCache = _.$slides;\n\t\n\t            _.unload();\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\t\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.focusHandler = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slider.off('focus.slick blur.slick').on('focus.slick blur.slick', '*:not(.slick-arrow)', function (event) {\n\t\n\t            event.stopImmediatePropagation();\n\t            var $sf = $(this);\n\t\n\t            setTimeout(function () {\n\t\n\t                if (_.options.pauseOnFocus) {\n\t                    _.focussed = $sf.is(':focus');\n\t                    _.autoPlay();\n\t                }\n\t            }, 0);\n\t        });\n\t    };\n\t\n\t    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function () {\n\t\n\t        var _ = this;\n\t        return _.currentSlide;\n\t    };\n\t\n\t    Slick.prototype.getDotCount = function () {\n\t\n\t        var _ = this;\n\t\n\t        var breakPoint = 0;\n\t        var counter = 0;\n\t        var pagerQty = 0;\n\t\n\t        if (_.options.infinite === true) {\n\t            while (breakPoint < _.slideCount) {\n\t                ++pagerQty;\n\t                breakPoint = counter + _.options.slidesToScroll;\n\t                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t            }\n\t        } else if (_.options.centerMode === true) {\n\t            pagerQty = _.slideCount;\n\t        } else if (!_.options.asNavFor) {\n\t            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n\t        } else {\n\t            while (breakPoint < _.slideCount) {\n\t                ++pagerQty;\n\t                breakPoint = counter + _.options.slidesToScroll;\n\t                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t            }\n\t        }\n\t\n\t        return pagerQty - 1;\n\t    };\n\t\n\t    Slick.prototype.getLeft = function (slideIndex) {\n\t\n\t        var _ = this,\n\t            targetLeft,\n\t            verticalHeight,\n\t            verticalOffset = 0,\n\t            targetSlide;\n\t\n\t        _.slideOffset = 0;\n\t        verticalHeight = _.$slides.first().outerHeight(true);\n\t\n\t        if (_.options.infinite === true) {\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t                _.slideOffset = _.slideWidth * _.options.slidesToShow * -1;\n\t                verticalOffset = verticalHeight * _.options.slidesToShow * -1;\n\t            }\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n\t                    if (slideIndex > _.slideCount) {\n\t                        _.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1;\n\t                        verticalOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1;\n\t                    } else {\n\t                        _.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1;\n\t                        verticalOffset = _.slideCount % _.options.slidesToScroll * verticalHeight * -1;\n\t                    }\n\t                }\n\t            }\n\t        } else {\n\t            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n\t                _.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth;\n\t                verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight;\n\t            }\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.slideOffset = 0;\n\t            verticalOffset = 0;\n\t        }\n\t\n\t        if (_.options.centerMode === true && _.options.infinite === true) {\n\t            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n\t        } else if (_.options.centerMode === true) {\n\t            _.slideOffset = 0;\n\t            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n\t        }\n\t\n\t        if (_.options.vertical === false) {\n\t            targetLeft = slideIndex * _.slideWidth * -1 + _.slideOffset;\n\t        } else {\n\t            targetLeft = slideIndex * verticalHeight * -1 + verticalOffset;\n\t        }\n\t\n\t        if (_.options.variableWidth === true) {\n\t\n\t            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t            } else {\n\t                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n\t            }\n\t\n\t            if (_.options.rtl === true) {\n\t                if (targetSlide[0]) {\n\t                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t                } else {\n\t                    targetLeft = 0;\n\t                }\n\t            } else {\n\t                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t            }\n\t\n\t            if (_.options.centerMode === true) {\n\t                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t                } else {\n\t                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n\t                }\n\t\n\t                if (_.options.rtl === true) {\n\t                    if (targetSlide[0]) {\n\t                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t                    } else {\n\t                        targetLeft = 0;\n\t                    }\n\t                } else {\n\t                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t                }\n\t\n\t                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n\t            }\n\t        }\n\t\n\t        return targetLeft;\n\t    };\n\t\n\t    Slick.prototype.getOption = Slick.prototype.slickGetOption = function (option) {\n\t\n\t        var _ = this;\n\t\n\t        return _.options[option];\n\t    };\n\t\n\t    Slick.prototype.getNavigableIndexes = function () {\n\t\n\t        var _ = this,\n\t            breakPoint = 0,\n\t            counter = 0,\n\t            indexes = [],\n\t            max;\n\t\n\t        if (_.options.infinite === false) {\n\t            max = _.slideCount;\n\t        } else {\n\t            breakPoint = _.options.slidesToScroll * -1;\n\t            counter = _.options.slidesToScroll * -1;\n\t            max = _.slideCount * 2;\n\t        }\n\t\n\t        while (breakPoint < max) {\n\t            indexes.push(breakPoint);\n\t            breakPoint = counter + _.options.slidesToScroll;\n\t            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t        }\n\t\n\t        return indexes;\n\t    };\n\t\n\t    Slick.prototype.getSlick = function () {\n\t\n\t        return this;\n\t    };\n\t\n\t    Slick.prototype.getSlideCount = function () {\n\t\n\t        var _ = this,\n\t            slidesTraversed,\n\t            swipedSlide,\n\t            centerOffset;\n\t\n\t        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\t\n\t        if (_.options.swipeToSlide === true) {\n\t            _.$slideTrack.find('.slick-slide').each(function (index, slide) {\n\t                if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > _.swipeLeft * -1) {\n\t                    swipedSlide = slide;\n\t                    return false;\n\t                }\n\t            });\n\t\n\t            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\t\n\t            return slidesTraversed;\n\t        } else {\n\t            return _.options.slidesToScroll;\n\t        }\n\t    };\n\t\n\t    Slick.prototype.goTo = Slick.prototype.slickGoTo = function (slide, dontAnimate) {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'index',\n\t                index: parseInt(slide)\n\t            }\n\t        }, dontAnimate);\n\t    };\n\t\n\t    Slick.prototype.init = function (creation) {\n\t\n\t        var _ = this;\n\t\n\t        if (!$(_.$slider).hasClass('slick-initialized')) {\n\t\n\t            $(_.$slider).addClass('slick-initialized');\n\t\n\t            _.buildRows();\n\t            _.buildOut();\n\t            _.setProps();\n\t            _.startLoad();\n\t            _.loadSlider();\n\t            _.initializeEvents();\n\t            _.updateArrows();\n\t            _.updateDots();\n\t            _.checkResponsive(true);\n\t            _.focusHandler();\n\t        }\n\t\n\t        if (creation) {\n\t            _.$slider.trigger('init', [_]);\n\t        }\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.initADA();\n\t        }\n\t\n\t        if (_.options.autoplay) {\n\t\n\t            _.paused = false;\n\t            _.autoPlay();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initADA = function () {\n\t        var _ = this;\n\t        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n\t            'aria-hidden': 'true',\n\t            'tabindex': '-1'\n\t        }).find('a, input, button, select').attr({\n\t            'tabindex': '-1'\n\t        });\n\t\n\t        _.$slideTrack.attr('role', 'listbox');\n\t\n\t        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function (i) {\n\t            $(this).attr({\n\t                'role': 'option',\n\t                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n\t            });\n\t        });\n\t\n\t        if (_.$dots !== null) {\n\t            _.$dots.attr('role', 'tablist').find('li').each(function (i) {\n\t                $(this).attr({\n\t                    'role': 'presentation',\n\t                    'aria-selected': 'false',\n\t                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n\t                    'id': 'slick-slide' + _.instanceUid + i + ''\n\t                });\n\t            }).first().attr('aria-selected', 'true').end().find('button').attr('role', 'button').end().closest('div').attr('role', 'toolbar');\n\t        }\n\t        _.activateADA();\n\t    };\n\t\n\t    Slick.prototype.initArrowEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t            _.$prevArrow.off('click.slick').on('click.slick', {\n\t                message: 'previous'\n\t            }, _.changeSlide);\n\t            _.$nextArrow.off('click.slick').on('click.slick', {\n\t                message: 'next'\n\t            }, _.changeSlide);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initDotEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t            $('li', _.$dots).on('click.slick', {\n\t                message: 'index'\n\t            }, _.changeSlide);\n\t        }\n\t\n\t        if (_.options.dots === true && _.options.pauseOnDotsHover === true) {\n\t\n\t            $('li', _.$dots).on('mouseenter.slick', $.proxy(_.interrupt, _, true)).on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initSlideEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.pauseOnHover) {\n\t\n\t            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initializeEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.initArrowEvents();\n\t\n\t        _.initDotEvents();\n\t        _.initSlideEvents();\n\t\n\t        _.$list.on('touchstart.slick mousedown.slick', {\n\t            action: 'start'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchmove.slick mousemove.slick', {\n\t            action: 'move'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchend.slick mouseup.slick', {\n\t            action: 'end'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchcancel.slick mouseleave.slick', {\n\t            action: 'end'\n\t        }, _.swipeHandler);\n\t\n\t        _.$list.on('click.slick', _.clickHandler);\n\t\n\t        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.$list.on('keydown.slick', _.keyHandler);\n\t        }\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t        }\n\t\n\t        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\t\n\t        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\t\n\t        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\t\n\t        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n\t        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\t    };\n\t\n\t    Slick.prototype.initUI = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$prevArrow.show();\n\t            _.$nextArrow.show();\n\t        }\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$dots.show();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.keyHandler = function (event) {\n\t\n\t        var _ = this;\n\t        //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n\t        if (!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n\t            if (event.keyCode === 37 && _.options.accessibility === true) {\n\t                _.changeSlide({\n\t                    data: {\n\t                        message: _.options.rtl === true ? 'next' : 'previous'\n\t                    }\n\t                });\n\t            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n\t                _.changeSlide({\n\t                    data: {\n\t                        message: _.options.rtl === true ? 'previous' : 'next'\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.lazyLoad = function () {\n\t\n\t        var _ = this,\n\t            loadRange,\n\t            cloneRange,\n\t            rangeStart,\n\t            rangeEnd;\n\t\n\t        function loadImages(imagesScope) {\n\t\n\t            $('img[data-lazy]', imagesScope).each(function () {\n\t\n\t                var image = $(this),\n\t                    imageSource = $(this).attr('data-lazy'),\n\t                    imageToLoad = document.createElement('img');\n\t\n\t                imageToLoad.onload = function () {\n\t\n\t                    image.animate({ opacity: 0 }, 100, function () {\n\t                        image.attr('src', imageSource).animate({ opacity: 1 }, 200, function () {\n\t                            image.removeAttr('data-lazy').removeClass('slick-loading');\n\t                        });\n\t                        _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n\t                    });\n\t                };\n\t\n\t                imageToLoad.onerror = function () {\n\t\n\t                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');\n\t\n\t                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);\n\t                };\n\t\n\t                imageToLoad.src = imageSource;\n\t            });\n\t        }\n\t\n\t        if (_.options.centerMode === true) {\n\t            if (_.options.infinite === true) {\n\t                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n\t                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n\t            } else {\n\t                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n\t                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n\t            }\n\t        } else {\n\t            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n\t            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n\t            if (_.options.fade === true) {\n\t                if (rangeStart > 0) rangeStart--;\n\t                if (rangeEnd <= _.slideCount) rangeEnd++;\n\t            }\n\t        }\n\t\n\t        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\t        loadImages(loadRange);\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            cloneRange = _.$slider.find('.slick-slide');\n\t            loadImages(cloneRange);\n\t        } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n\t            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n\t            loadImages(cloneRange);\n\t        } else if (_.currentSlide === 0) {\n\t            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n\t            loadImages(cloneRange);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.loadSlider = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.setPosition();\n\t\n\t        _.$slideTrack.css({\n\t            opacity: 1\n\t        });\n\t\n\t        _.$slider.removeClass('slick-loading');\n\t\n\t        _.initUI();\n\t\n\t        if (_.options.lazyLoad === 'progressive') {\n\t            _.progressiveLazyLoad();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.next = Slick.prototype.slickNext = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'next'\n\t            }\n\t        });\n\t    };\n\t\n\t    Slick.prototype.orientationChange = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.checkResponsive();\n\t        _.setPosition();\n\t    };\n\t\n\t    Slick.prototype.pause = Slick.prototype.slickPause = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t        _.paused = true;\n\t    };\n\t\n\t    Slick.prototype.play = Slick.prototype.slickPlay = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlay();\n\t        _.options.autoplay = true;\n\t        _.paused = false;\n\t        _.focussed = false;\n\t        _.interrupted = false;\n\t    };\n\t\n\t    Slick.prototype.postSlide = function (index) {\n\t\n\t        var _ = this;\n\t\n\t        if (!_.unslicked) {\n\t\n\t            _.$slider.trigger('afterChange', [_, index]);\n\t\n\t            _.animating = false;\n\t\n\t            _.setPosition();\n\t\n\t            _.swipeLeft = null;\n\t\n\t            if (_.options.autoplay) {\n\t                _.autoPlay();\n\t            }\n\t\n\t            if (_.options.accessibility === true) {\n\t                _.initADA();\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.prev = Slick.prototype.slickPrev = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'previous'\n\t            }\n\t        });\n\t    };\n\t\n\t    Slick.prototype.preventDefault = function (event) {\n\t\n\t        event.preventDefault();\n\t    };\n\t\n\t    Slick.prototype.progressiveLazyLoad = function (tryCount) {\n\t\n\t        tryCount = tryCount || 1;\n\t\n\t        var _ = this,\n\t            $imgsToLoad = $('img[data-lazy]', _.$slider),\n\t            image,\n\t            imageSource,\n\t            imageToLoad;\n\t\n\t        if ($imgsToLoad.length) {\n\t\n\t            image = $imgsToLoad.first();\n\t            imageSource = image.attr('data-lazy');\n\t            imageToLoad = document.createElement('img');\n\t\n\t            imageToLoad.onload = function () {\n\t\n\t                image.attr('src', imageSource).removeAttr('data-lazy').removeClass('slick-loading');\n\t\n\t                if (_.options.adaptiveHeight === true) {\n\t                    _.setPosition();\n\t                }\n\t\n\t                _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n\t                _.progressiveLazyLoad();\n\t            };\n\t\n\t            imageToLoad.onerror = function () {\n\t\n\t                if (tryCount < 3) {\n\t\n\t                    /**\n\t                     * try to load the image 3 times,\n\t                     * leave a slight delay so we don't get\n\t                     * servers blocking the request.\n\t                     */\n\t                    setTimeout(function () {\n\t                        _.progressiveLazyLoad(tryCount + 1);\n\t                    }, 500);\n\t                } else {\n\t\n\t                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');\n\t\n\t                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);\n\t\n\t                    _.progressiveLazyLoad();\n\t                }\n\t            };\n\t\n\t            imageToLoad.src = imageSource;\n\t        } else {\n\t\n\t            _.$slider.trigger('allImagesLoaded', [_]);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.refresh = function (initializing) {\n\t\n\t        var _ = this,\n\t            currentSlide,\n\t            lastVisibleIndex;\n\t\n\t        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\t\n\t        // in non-infinite sliders, we don't want to go past the\n\t        // last visible index.\n\t        if (!_.options.infinite && _.currentSlide > lastVisibleIndex) {\n\t            _.currentSlide = lastVisibleIndex;\n\t        }\n\t\n\t        // if less slides than to show, go to start.\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.currentSlide = 0;\n\t        }\n\t\n\t        currentSlide = _.currentSlide;\n\t\n\t        _.destroy(true);\n\t\n\t        $.extend(_, _.initials, { currentSlide: currentSlide });\n\t\n\t        _.init();\n\t\n\t        if (!initializing) {\n\t\n\t            _.changeSlide({\n\t                data: {\n\t                    message: 'index',\n\t                    index: currentSlide\n\t                }\n\t            }, false);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.registerBreakpoints = function () {\n\t\n\t        var _ = this,\n\t            breakpoint,\n\t            currentBreakpoint,\n\t            l,\n\t            responsiveSettings = _.options.responsive || null;\n\t\n\t        if ($.type(responsiveSettings) === 'array' && responsiveSettings.length) {\n\t\n\t            _.respondTo = _.options.respondTo || 'window';\n\t\n\t            for (breakpoint in responsiveSettings) {\n\t\n\t                l = _.breakpoints.length - 1;\n\t                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\t\n\t                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\t\n\t                    // loop through the breakpoints and cut out any existing\n\t                    // ones with the same breakpoint number, we don't want dupes.\n\t                    while (l >= 0) {\n\t                        if (_.breakpoints[l] && _.breakpoints[l] === currentBreakpoint) {\n\t                            _.breakpoints.splice(l, 1);\n\t                        }\n\t                        l--;\n\t                    }\n\t\n\t                    _.breakpoints.push(currentBreakpoint);\n\t                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\t                }\n\t            }\n\t\n\t            _.breakpoints.sort(function (a, b) {\n\t                return _.options.mobileFirst ? a - b : b - a;\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.reinit = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');\n\t\n\t        _.slideCount = _.$slides.length;\n\t\n\t        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n\t            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.currentSlide = 0;\n\t        }\n\t\n\t        _.registerBreakpoints();\n\t\n\t        _.setProps();\n\t        _.setupInfinite();\n\t        _.buildArrows();\n\t        _.updateArrows();\n\t        _.initArrowEvents();\n\t        _.buildDots();\n\t        _.updateDots();\n\t        _.initDotEvents();\n\t        _.cleanUpSlideEvents();\n\t        _.initSlideEvents();\n\t\n\t        _.checkResponsive(false, true);\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t        }\n\t\n\t        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\t\n\t        _.setPosition();\n\t        _.focusHandler();\n\t\n\t        _.paused = !_.options.autoplay;\n\t        _.autoPlay();\n\t\n\t        _.$slider.trigger('reInit', [_]);\n\t    };\n\t\n\t    Slick.prototype.resize = function () {\n\t\n\t        var _ = this;\n\t\n\t        if ($(window).width() !== _.windowWidth) {\n\t            clearTimeout(_.windowDelay);\n\t            _.windowDelay = window.setTimeout(function () {\n\t                _.windowWidth = $(window).width();\n\t                _.checkResponsive();\n\t                if (!_.unslicked) {\n\t                    _.setPosition();\n\t                }\n\t            }, 50);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function (index, removeBefore, removeAll) {\n\t\n\t        var _ = this;\n\t\n\t        if (typeof index === 'boolean') {\n\t            removeBefore = index;\n\t            index = removeBefore === true ? 0 : _.slideCount - 1;\n\t        } else {\n\t            index = removeBefore === true ? --index : index;\n\t        }\n\t\n\t        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n\t            return false;\n\t        }\n\t\n\t        _.unload();\n\t\n\t        if (removeAll === true) {\n\t            _.$slideTrack.children().remove();\n\t        } else {\n\t            _.$slideTrack.children(this.options.slide).eq(index).remove();\n\t        }\n\t\n\t        _.$slides = _.$slideTrack.children(this.options.slide);\n\t\n\t        _.$slideTrack.children(this.options.slide).detach();\n\t\n\t        _.$slideTrack.append(_.$slides);\n\t\n\t        _.$slidesCache = _.$slides;\n\t\n\t        _.reinit();\n\t    };\n\t\n\t    Slick.prototype.setCSS = function (position) {\n\t\n\t        var _ = this,\n\t            positionProps = {},\n\t            x,\n\t            y;\n\t\n\t        if (_.options.rtl === true) {\n\t            position = -position;\n\t        }\n\t        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n\t        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\t\n\t        positionProps[_.positionProp] = position;\n\t\n\t        if (_.transformsEnabled === false) {\n\t            _.$slideTrack.css(positionProps);\n\t        } else {\n\t            positionProps = {};\n\t            if (_.cssTransitions === false) {\n\t                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n\t                _.$slideTrack.css(positionProps);\n\t            } else {\n\t                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n\t                _.$slideTrack.css(positionProps);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setDimensions = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.vertical === false) {\n\t            if (_.options.centerMode === true) {\n\t                _.$list.css({\n\t                    padding: '0px ' + _.options.centerPadding\n\t                });\n\t            }\n\t        } else {\n\t            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n\t            if (_.options.centerMode === true) {\n\t                _.$list.css({\n\t                    padding: _.options.centerPadding + ' 0px'\n\t                });\n\t            }\n\t        }\n\t\n\t        _.listWidth = _.$list.width();\n\t        _.listHeight = _.$list.height();\n\t\n\t        if (_.options.vertical === false && _.options.variableWidth === false) {\n\t            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n\t            _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children('.slick-slide').length));\n\t        } else if (_.options.variableWidth === true) {\n\t            _.$slideTrack.width(5000 * _.slideCount);\n\t        } else {\n\t            _.slideWidth = Math.ceil(_.listWidth);\n\t            _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length));\n\t        }\n\t\n\t        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n\t        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\t    };\n\t\n\t    Slick.prototype.setFade = function () {\n\t\n\t        var _ = this,\n\t            targetLeft;\n\t\n\t        _.$slides.each(function (index, element) {\n\t            targetLeft = _.slideWidth * index * -1;\n\t            if (_.options.rtl === true) {\n\t                $(element).css({\n\t                    position: 'relative',\n\t                    right: targetLeft,\n\t                    top: 0,\n\t                    zIndex: _.options.zIndex - 2,\n\t                    opacity: 0\n\t                });\n\t            } else {\n\t                $(element).css({\n\t                    position: 'relative',\n\t                    left: targetLeft,\n\t                    top: 0,\n\t                    zIndex: _.options.zIndex - 2,\n\t                    opacity: 0\n\t                });\n\t            }\n\t        });\n\t\n\t        _.$slides.eq(_.currentSlide).css({\n\t            zIndex: _.options.zIndex - 1,\n\t            opacity: 1\n\t        });\n\t    };\n\t\n\t    Slick.prototype.setHeight = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t            _.$list.css('height', targetHeight);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setOption = Slick.prototype.slickSetOption = function () {\n\t\n\t        /**\n\t         * accepts arguments in format of:\n\t         *\n\t         *  - for changing a single option's value:\n\t         *     .slick(\"setOption\", option, value, refresh )\n\t         *\n\t         *  - for changing a set of responsive options:\n\t         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n\t         *\n\t         *  - for updating multiple values at once (not responsive)\n\t         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n\t         */\n\t\n\t        var _ = this,\n\t            l,\n\t            item,\n\t            option,\n\t            value,\n\t            refresh = false,\n\t            type;\n\t\n\t        if ($.type(arguments[0]) === 'object') {\n\t\n\t            option = arguments[0];\n\t            refresh = arguments[1];\n\t            type = 'multiple';\n\t        } else if ($.type(arguments[0]) === 'string') {\n\t\n\t            option = arguments[0];\n\t            value = arguments[1];\n\t            refresh = arguments[2];\n\t\n\t            if (arguments[0] === 'responsive' && $.type(arguments[1]) === 'array') {\n\t\n\t                type = 'responsive';\n\t            } else if (typeof arguments[1] !== 'undefined') {\n\t\n\t                type = 'single';\n\t            }\n\t        }\n\t\n\t        if (type === 'single') {\n\t\n\t            _.options[option] = value;\n\t        } else if (type === 'multiple') {\n\t\n\t            $.each(option, function (opt, val) {\n\t\n\t                _.options[opt] = val;\n\t            });\n\t        } else if (type === 'responsive') {\n\t\n\t            for (item in value) {\n\t\n\t                if ($.type(_.options.responsive) !== 'array') {\n\t\n\t                    _.options.responsive = [value[item]];\n\t                } else {\n\t\n\t                    l = _.options.responsive.length - 1;\n\t\n\t                    // loop through the responsive object and splice out duplicates.\n\t                    while (l >= 0) {\n\t\n\t                        if (_.options.responsive[l].breakpoint === value[item].breakpoint) {\n\t\n\t                            _.options.responsive.splice(l, 1);\n\t                        }\n\t\n\t                        l--;\n\t                    }\n\t\n\t                    _.options.responsive.push(value[item]);\n\t                }\n\t            }\n\t        }\n\t\n\t        if (refresh) {\n\t\n\t            _.unload();\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setPosition = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.setDimensions();\n\t\n\t        _.setHeight();\n\t\n\t        if (_.options.fade === false) {\n\t            _.setCSS(_.getLeft(_.currentSlide));\n\t        } else {\n\t            _.setFade();\n\t        }\n\t\n\t        _.$slider.trigger('setPosition', [_]);\n\t    };\n\t\n\t    Slick.prototype.setProps = function () {\n\t\n\t        var _ = this,\n\t            bodyStyle = document.body.style;\n\t\n\t        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\t\n\t        if (_.positionProp === 'top') {\n\t            _.$slider.addClass('slick-vertical');\n\t        } else {\n\t            _.$slider.removeClass('slick-vertical');\n\t        }\n\t\n\t        if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {\n\t            if (_.options.useCSS === true) {\n\t                _.cssTransitions = true;\n\t            }\n\t        }\n\t\n\t        if (_.options.fade) {\n\t            if (typeof _.options.zIndex === 'number') {\n\t                if (_.options.zIndex < 3) {\n\t                    _.options.zIndex = 3;\n\t                }\n\t            } else {\n\t                _.options.zIndex = _.defaults.zIndex;\n\t            }\n\t        }\n\t\n\t        if (bodyStyle.OTransform !== undefined) {\n\t            _.animType = 'OTransform';\n\t            _.transformType = '-o-transform';\n\t            _.transitionType = 'OTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.MozTransform !== undefined) {\n\t            _.animType = 'MozTransform';\n\t            _.transformType = '-moz-transform';\n\t            _.transitionType = 'MozTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.webkitTransform !== undefined) {\n\t            _.animType = 'webkitTransform';\n\t            _.transformType = '-webkit-transform';\n\t            _.transitionType = 'webkitTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.msTransform !== undefined) {\n\t            _.animType = 'msTransform';\n\t            _.transformType = '-ms-transform';\n\t            _.transitionType = 'msTransition';\n\t            if (bodyStyle.msTransform === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.transform !== undefined && _.animType !== false) {\n\t            _.animType = 'transform';\n\t            _.transformType = 'transform';\n\t            _.transitionType = 'transition';\n\t        }\n\t        _.transformsEnabled = _.options.useTransform && _.animType !== null && _.animType !== false;\n\t    };\n\t\n\t    Slick.prototype.setSlideClasses = function (index) {\n\t\n\t        var _ = this,\n\t            centerOffset,\n\t            allSlides,\n\t            indexOffset,\n\t            remainder;\n\t\n\t        allSlides = _.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden', 'true');\n\t\n\t        _.$slides.eq(index).addClass('slick-current');\n\t\n\t        if (_.options.centerMode === true) {\n\t\n\t            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\t\n\t            if (_.options.infinite === true) {\n\t\n\t                if (index >= centerOffset && index <= _.slideCount - 1 - centerOffset) {\n\t\n\t                    _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');\n\t                } else {\n\t\n\t                    indexOffset = _.options.slidesToShow + index;\n\t                    allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');\n\t                }\n\t\n\t                if (index === 0) {\n\t\n\t                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');\n\t                } else if (index === _.slideCount - 1) {\n\t\n\t                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');\n\t                }\n\t            }\n\t\n\t            _.$slides.eq(index).addClass('slick-center');\n\t        } else {\n\t\n\t            if (index >= 0 && index <= _.slideCount - _.options.slidesToShow) {\n\t\n\t                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n\t            } else if (allSlides.length <= _.options.slidesToShow) {\n\t\n\t                allSlides.addClass('slick-active').attr('aria-hidden', 'false');\n\t            } else {\n\t\n\t                remainder = _.slideCount % _.options.slidesToShow;\n\t                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\t\n\t                if (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow) {\n\t\n\t                    allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');\n\t                } else {\n\t\n\t                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n\t                }\n\t            }\n\t        }\n\t\n\t        if (_.options.lazyLoad === 'ondemand') {\n\t            _.lazyLoad();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setupInfinite = function () {\n\t\n\t        var _ = this,\n\t            i,\n\t            slideIndex,\n\t            infiniteCount;\n\t\n\t        if (_.options.fade === true) {\n\t            _.options.centerMode = false;\n\t        }\n\t\n\t        if (_.options.infinite === true && _.options.fade === false) {\n\t\n\t            slideIndex = null;\n\t\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t\n\t                if (_.options.centerMode === true) {\n\t                    infiniteCount = _.options.slidesToShow + 1;\n\t                } else {\n\t                    infiniteCount = _.options.slidesToShow;\n\t                }\n\t\n\t                for (i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) {\n\t                    slideIndex = i - 1;\n\t                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');\n\t                }\n\t                for (i = 0; i < infiniteCount; i += 1) {\n\t                    slideIndex = i;\n\t                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');\n\t                }\n\t                _.$slideTrack.find('.slick-cloned').find('[id]').each(function () {\n\t                    $(this).attr('id', '');\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.interrupt = function (toggle) {\n\t\n\t        var _ = this;\n\t\n\t        if (!toggle) {\n\t            _.autoPlay();\n\t        }\n\t        _.interrupted = toggle;\n\t    };\n\t\n\t    Slick.prototype.selectHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');\n\t\n\t        var index = parseInt(targetElement.attr('data-slick-index'));\n\t\n\t        if (!index) index = 0;\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t\n\t            _.setSlideClasses(index);\n\t            _.asNavFor(index);\n\t            return;\n\t        }\n\t\n\t        _.slideHandler(index);\n\t    };\n\t\n\t    Slick.prototype.slideHandler = function (index, sync, dontAnimate) {\n\t\n\t        var targetSlide,\n\t            animSlide,\n\t            oldSlide,\n\t            slideLeft,\n\t            targetLeft = null,\n\t            _ = this,\n\t            navTarget;\n\t\n\t        sync = sync || false;\n\t\n\t        if (_.animating === true && _.options.waitForAnimate === true) {\n\t            return;\n\t        }\n\t\n\t        if (_.options.fade === true && _.currentSlide === index) {\n\t            return;\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            return;\n\t        }\n\t\n\t        if (sync === false) {\n\t            _.asNavFor(index);\n\t        }\n\t\n\t        targetSlide = index;\n\t        targetLeft = _.getLeft(targetSlide);\n\t        slideLeft = _.getLeft(_.currentSlide);\n\t\n\t        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\t\n\t        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n\t            if (_.options.fade === false) {\n\t                targetSlide = _.currentSlide;\n\t                if (dontAnimate !== true) {\n\t                    _.animateSlide(slideLeft, function () {\n\t                        _.postSlide(targetSlide);\n\t                    });\n\t                } else {\n\t                    _.postSlide(targetSlide);\n\t                }\n\t            }\n\t            return;\n\t        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) {\n\t            if (_.options.fade === false) {\n\t                targetSlide = _.currentSlide;\n\t                if (dontAnimate !== true) {\n\t                    _.animateSlide(slideLeft, function () {\n\t                        _.postSlide(targetSlide);\n\t                    });\n\t                } else {\n\t                    _.postSlide(targetSlide);\n\t                }\n\t            }\n\t            return;\n\t        }\n\t\n\t        if (_.options.autoplay) {\n\t            clearInterval(_.autoPlayTimer);\n\t        }\n\t\n\t        if (targetSlide < 0) {\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                animSlide = _.slideCount - _.slideCount % _.options.slidesToScroll;\n\t            } else {\n\t                animSlide = _.slideCount + targetSlide;\n\t            }\n\t        } else if (targetSlide >= _.slideCount) {\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                animSlide = 0;\n\t            } else {\n\t                animSlide = targetSlide - _.slideCount;\n\t            }\n\t        } else {\n\t            animSlide = targetSlide;\n\t        }\n\t\n\t        _.animating = true;\n\t\n\t        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\t\n\t        oldSlide = _.currentSlide;\n\t        _.currentSlide = animSlide;\n\t\n\t        _.setSlideClasses(_.currentSlide);\n\t\n\t        if (_.options.asNavFor) {\n\t\n\t            navTarget = _.getNavTarget();\n\t            navTarget = navTarget.slick('getSlick');\n\t\n\t            if (navTarget.slideCount <= navTarget.options.slidesToShow) {\n\t                navTarget.setSlideClasses(_.currentSlide);\n\t            }\n\t        }\n\t\n\t        _.updateDots();\n\t        _.updateArrows();\n\t\n\t        if (_.options.fade === true) {\n\t            if (dontAnimate !== true) {\n\t\n\t                _.fadeSlideOut(oldSlide);\n\t\n\t                _.fadeSlide(animSlide, function () {\n\t                    _.postSlide(animSlide);\n\t                });\n\t            } else {\n\t                _.postSlide(animSlide);\n\t            }\n\t            _.animateHeight();\n\t            return;\n\t        }\n\t\n\t        if (dontAnimate !== true) {\n\t            _.animateSlide(targetLeft, function () {\n\t                _.postSlide(animSlide);\n\t            });\n\t        } else {\n\t            _.postSlide(animSlide);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.startLoad = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$prevArrow.hide();\n\t            _.$nextArrow.hide();\n\t        }\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$dots.hide();\n\t        }\n\t\n\t        _.$slider.addClass('slick-loading');\n\t    };\n\t\n\t    Slick.prototype.swipeDirection = function () {\n\t\n\t        var xDist,\n\t            yDist,\n\t            r,\n\t            swipeAngle,\n\t            _ = this;\n\t\n\t        xDist = _.touchObject.startX - _.touchObject.curX;\n\t        yDist = _.touchObject.startY - _.touchObject.curY;\n\t        r = Math.atan2(yDist, xDist);\n\t\n\t        swipeAngle = Math.round(r * 180 / Math.PI);\n\t        if (swipeAngle < 0) {\n\t            swipeAngle = 360 - Math.abs(swipeAngle);\n\t        }\n\t\n\t        if (swipeAngle <= 45 && swipeAngle >= 0) {\n\t            return _.options.rtl === false ? 'left' : 'right';\n\t        }\n\t        if (swipeAngle <= 360 && swipeAngle >= 315) {\n\t            return _.options.rtl === false ? 'left' : 'right';\n\t        }\n\t        if (swipeAngle >= 135 && swipeAngle <= 225) {\n\t            return _.options.rtl === false ? 'right' : 'left';\n\t        }\n\t        if (_.options.verticalSwiping === true) {\n\t            if (swipeAngle >= 35 && swipeAngle <= 135) {\n\t                return 'down';\n\t            } else {\n\t                return 'up';\n\t            }\n\t        }\n\t\n\t        return 'vertical';\n\t    };\n\t\n\t    Slick.prototype.swipeEnd = function (event) {\n\t\n\t        var _ = this,\n\t            slideCount,\n\t            direction;\n\t\n\t        _.dragging = false;\n\t        _.interrupted = false;\n\t        _.shouldClick = _.touchObject.swipeLength > 10 ? false : true;\n\t\n\t        if (_.touchObject.curX === undefined) {\n\t            return false;\n\t        }\n\t\n\t        if (_.touchObject.edgeHit === true) {\n\t            _.$slider.trigger('edge', [_, _.swipeDirection()]);\n\t        }\n\t\n\t        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {\n\t\n\t            direction = _.swipeDirection();\n\t\n\t            switch (direction) {\n\t\n\t                case 'left':\n\t                case 'down':\n\t\n\t                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();\n\t\n\t                    _.currentDirection = 0;\n\t\n\t                    break;\n\t\n\t                case 'right':\n\t                case 'up':\n\t\n\t                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();\n\t\n\t                    _.currentDirection = 1;\n\t\n\t                    break;\n\t\n\t                default:\n\t\n\t            }\n\t\n\t            if (direction != 'vertical') {\n\t\n\t                _.slideHandler(slideCount);\n\t                _.touchObject = {};\n\t                _.$slider.trigger('swipe', [_, direction]);\n\t            }\n\t        } else {\n\t\n\t            if (_.touchObject.startX !== _.touchObject.curX) {\n\t\n\t                _.slideHandler(_.currentSlide);\n\t                _.touchObject = {};\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.swipeHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.swipe === false || 'ontouchend' in document && _.options.swipe === false) {\n\t            return;\n\t        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n\t            return;\n\t        }\n\t\n\t        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;\n\t\n\t        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;\n\t\n\t        if (_.options.verticalSwiping === true) {\n\t            _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;\n\t        }\n\t\n\t        switch (event.data.action) {\n\t\n\t            case 'start':\n\t                _.swipeStart(event);\n\t                break;\n\t\n\t            case 'move':\n\t                _.swipeMove(event);\n\t                break;\n\t\n\t            case 'end':\n\t                _.swipeEnd(event);\n\t                break;\n\t\n\t        }\n\t    };\n\t\n\t    Slick.prototype.swipeMove = function (event) {\n\t\n\t        var _ = this,\n\t            edgeWasHit = false,\n\t            curLeft,\n\t            swipeDirection,\n\t            swipeLength,\n\t            positionOffset,\n\t            touches;\n\t\n\t        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\t\n\t        if (!_.dragging || touches && touches.length !== 1) {\n\t            return false;\n\t        }\n\t\n\t        curLeft = _.getLeft(_.currentSlide);\n\t\n\t        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n\t        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\t\n\t        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\t\n\t        if (_.options.verticalSwiping === true) {\n\t            _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\t        }\n\t\n\t        swipeDirection = _.swipeDirection();\n\t\n\t        if (swipeDirection === 'vertical') {\n\t            return;\n\t        }\n\t\n\t        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n\t            event.preventDefault();\n\t        }\n\t\n\t        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n\t        if (_.options.verticalSwiping === true) {\n\t            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n\t        }\n\t\n\t        swipeLength = _.touchObject.swipeLength;\n\t\n\t        _.touchObject.edgeHit = false;\n\t\n\t        if (_.options.infinite === false) {\n\t            if (_.currentSlide === 0 && swipeDirection === 'right' || _.currentSlide >= _.getDotCount() && swipeDirection === 'left') {\n\t                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n\t                _.touchObject.edgeHit = true;\n\t            }\n\t        }\n\t\n\t        if (_.options.vertical === false) {\n\t            _.swipeLeft = curLeft + swipeLength * positionOffset;\n\t        } else {\n\t            _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * positionOffset;\n\t        }\n\t        if (_.options.verticalSwiping === true) {\n\t            _.swipeLeft = curLeft + swipeLength * positionOffset;\n\t        }\n\t\n\t        if (_.options.fade === true || _.options.touchMove === false) {\n\t            return false;\n\t        }\n\t\n\t        if (_.animating === true) {\n\t            _.swipeLeft = null;\n\t            return false;\n\t        }\n\t\n\t        _.setCSS(_.swipeLeft);\n\t    };\n\t\n\t    Slick.prototype.swipeStart = function (event) {\n\t\n\t        var _ = this,\n\t            touches;\n\t\n\t        _.interrupted = true;\n\t\n\t        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n\t            _.touchObject = {};\n\t            return false;\n\t        }\n\t\n\t        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n\t            touches = event.originalEvent.touches[0];\n\t        }\n\t\n\t        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n\t        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\t\n\t        _.dragging = true;\n\t    };\n\t\n\t    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.$slidesCache !== null) {\n\t\n\t            _.unload();\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slidesCache.appendTo(_.$slideTrack);\n\t\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.unload = function () {\n\t\n\t        var _ = this;\n\t\n\t        $('.slick-cloned', _.$slider).remove();\n\t\n\t        if (_.$dots) {\n\t            _.$dots.remove();\n\t        }\n\t\n\t        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n\t            _.$prevArrow.remove();\n\t        }\n\t\n\t        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n\t            _.$nextArrow.remove();\n\t        }\n\t\n\t        _.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden', 'true').css('width', '');\n\t    };\n\t\n\t    Slick.prototype.unslick = function (fromBreakpoint) {\n\t\n\t        var _ = this;\n\t        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n\t        _.destroy();\n\t    };\n\t\n\t    Slick.prototype.updateArrows = function () {\n\t\n\t        var _ = this,\n\t            centerOffset;\n\t\n\t        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow && !_.options.infinite) {\n\t\n\t            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t\n\t            if (_.currentSlide === 0) {\n\t\n\t                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\t\n\t                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\t\n\t                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.updateDots = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.$dots !== null) {\n\t\n\t            _.$dots.find('li').removeClass('slick-active').attr('aria-hidden', 'true');\n\t\n\t            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden', 'false');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.visibility = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.autoplay) {\n\t\n\t            if (document[_.hidden]) {\n\t\n\t                _.interrupted = true;\n\t            } else {\n\t\n\t                _.interrupted = false;\n\t            }\n\t        }\n\t    };\n\t\n\t    $.fn.slick = function () {\n\t        var _ = this,\n\t            opt = arguments[0],\n\t            args = Array.prototype.slice.call(arguments, 1),\n\t            l = _.length,\n\t            i,\n\t            ret;\n\t        for (i = 0; i < l; i++) {\n\t            if ((typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) == 'object' || typeof opt == 'undefined') _[i].slick = new Slick(_[i], opt);else ret = _[i].slick[opt].apply(_[i].slick, args);\n\t            if (typeof ret != 'undefined') return ret;\n\t        }\n\t        return _;\n\t    };\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.2.3. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.2.3\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t}\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t}\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t}\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t}\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t}\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t}\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t}\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t}\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t}\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t}\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t}\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t}\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t}\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t}\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t}\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t}\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t}\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t}\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t}\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t}\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t}\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t}\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t}\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t}\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t}\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t}\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t}\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t}\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t}\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t}\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t}\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t}\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t}\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t}\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t}\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t}\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t}\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t}\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t}\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t}\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t}\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t}\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t}\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t}\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t}\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t}\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t}\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t}\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t}\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t}\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t}\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t}\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t}\n\t\n\tvar noop = function() {}\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t}\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t}\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t}\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t}\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t}\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t}\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t}\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t}\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t}\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t}\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t}\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t}\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t}\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t}\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t}\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t}\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t}\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t}\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t}\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t}\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t}\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t}\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t}\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    }\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    }\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t}\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t}\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t}\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t}\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t}\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t}\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t}\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t}\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t}\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t}\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t}\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t}\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t}\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t}\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t}\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t}\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t}\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t}\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t}\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t}\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t}\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t}\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t}\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t}\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t}\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t}\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t}\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t}\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t}\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t}\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t}\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t}\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength)\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t}\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t}\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t}\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t}\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t}\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t}\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t}\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t}\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t}\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t}\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t}\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t}\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t}\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t}\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t}\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t}\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t}\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t}\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t}\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t}\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t}\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t}\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t}\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t}\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state === STARTED;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t}\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t}\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t}\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t}\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t}\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t}\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t}\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t}\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t}\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t}\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t}\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t}\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t}\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t}\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t}\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t}\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t}\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t}\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t}\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t}\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t}\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t}\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t}\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t}\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t}\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t}\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t}\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t}\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t}\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t}\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t}\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t}\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t}\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t}\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t}\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t}\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t}\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t}\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t}\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t}\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t}\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t}\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t}\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t}\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    var i, n = (nodes = _).length; radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), force) : radius;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n\t      if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t}\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t}\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  }\n\t}\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t}\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t}\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      selection$$1 = state.selection; // May be set by brush.move!\n\t\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t}\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t}\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t}\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t}\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t}\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t}\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t}\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t}\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t}\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t}\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t}\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t}\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t}\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t}\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t}\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tvar graticule = function() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t}\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t}\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function() {\n\t  var pointRadius = 4.5,\n\t      projection,\n\t      projectionStream,\n\t      context,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(null).context(null);\n\t}\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t}\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t}\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t}\n\t\n\tvar transform$1 = function(prototype) {\n\t  return {\n\t    stream: transform$2(prototype)\n\t  };\n\t}\n\t\n\tfunction transform$2(prototype) {\n\t  function T() {}\n\t  var p = T.prototype = Object.create(Transform$1.prototype);\n\t  for (var k in prototype) p[k] = prototype[k];\n\t  return function(stream) {\n\t    var t = new T;\n\t    t.stream = stream;\n\t    return t;\n\t  };\n\t}\n\t\n\tfunction Transform$1() {}\n\t\n\tTransform$1.prototype = {\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fit(project, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = project.clipExtent && project.clipExtent();\n\t\n\t  project\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) project.clipExtent(null);\n\t\n\t  geoStream(object, project.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) project.clipExtent(clip);\n\t\n\t  return project\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(project) {\n\t  return function(size, object) {\n\t    return fit(project, [[0, 0], size], object);\n\t  };\n\t}\n\t\n\tfunction fitExtent(project) {\n\t  return function(extent, object) {\n\t    return fit(project, extent, object);\n\t  };\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t}\n\t\n\tfunction resampleNone(project) {\n\t  return transform$2({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transform$2({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = fitExtent(projection);\n\t\n\t  projection.fitSize = fitSize(projection);\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0),\n\t      n = (sy0 + sin$1(y1)) / 2,\n\t      c = 1 + sy0 * (2 * n - sy0),\n\t      r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t}\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t}\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return albersUsa;\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return albersUsa;\n\t  };\n\t\n\t  albersUsa.fitExtent = fitExtent(albersUsa);\n\t\n\t  albersUsa.fitSize = fitSize(albersUsa);\n\t\n\t  return albersUsa.scale(1070);\n\t}\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t}\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t}\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t}\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t}\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t}\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t}\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t}\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t}\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** app.8dae6fc901c95cee51ac.bundle.js\n **/","const $ = require('jquery');\nconst slick = require('./slick.js');\nconst d3 = require('d3');\n\nconst $siteNav = $('.siteNav');\nlet lastScroll = 0;\nlet timedNavHide;\n\n// Hiding functionality for Nav\n// Only hide on non-mobile screens\n$(window).on('scroll', function() {\n    if ($(this).width() > 660) {\n        let thisScroll = $(this).scrollTop();\n        // Always show Nav when at the top of the page\n        if (thisScroll < 100) {\n            clearTimeout(timedNavHide);\n            $siteNav.show();\n            console.log('showing nav: at top')\n        // Hide Nav on scroll down\n        } else if (thisScroll > lastScroll) {\n            $siteNav.slideUp('fast');\n            console.log('hiding nav on scroll')\n        // Show Nav on scroll up, but hide again after 2 seconds\n        } else {\n            $siteNav.slideDown('fast');\n            console.log('showing nav on scroll')\n            clearTimeout(timedNavHide);\n            timedNavHide = setTimeout(hideNav, 2000);\n        }\n        lastScroll = thisScroll;\n    // Hide menu if open on mobile scroll\n    } else {\n        if ($siteNav.hasClass('js-responsive')) {\n            $siteNav.removeClass('js-responsive');\n        }\n    }\n});\n\n// Don't hide the Nav while hovering over\n$siteNav.on('mouseenter', function() {\n    clearTimeout(timedNavHide);\n});\n\n// If not at top, hide the Nav again on mouse out\n$siteNav.on('mouseleave', function() {\n    let thisScroll = $(this).scrollTop();\n    if (thisScroll > 100) {\n        timedNavHide = setTimeout(hideNav, 2000);\n    }\n});\n\nconst hideNav = () => $siteNav.slideUp('fast');\n\n$('.siteNav_menuBtn').on('click', function() {\n    $siteNav.toggleClass('js-responsive');\n});\n\n$('.work_content').slick({\n    arrows: true,\n    dots: true,\n    infinite: true,\n    speed: 300,\n    slidesToShow: 2,\n    adaptiveHeight: true,\n    responsive: [\n        {\n            breakpoint: 420,\n            settings: {\n                slidesToShow: 1\n            }\n        }\n    ]\n});\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/index.js\n **/","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.6.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" data-role=\"none\" role=\"button\" tabindex=\"0\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 1) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 1) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick',\n                '*:not(.slick-arrow)', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this;\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        _.$slideTrack.attr('role', 'listbox');\n\n        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n            $(this).attr({\n                'role': 'option',\n                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n            });\n        });\n\n        if (_.$dots !== null) {\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                $(this).attr({\n                    'role': 'presentation',\n                    'aria-selected': 'false',\n                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n                    'id': 'slick-slide' + _.instanceUid + i + ''\n                });\n            })\n                .first().attr('aria-selected', 'true').end()\n                .find('button').attr('role', 'button').end()\n                .closest('div').attr('role', 'toolbar');\n        }\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n        }\n\n        if ( _.options.dots === true && _.options.pauseOnDotsHover === true ) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            _.setPosition();\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n\n                    _.$slides\n                        .slice(index - centerOffset, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand') {\n            _.lazyLoad();\n        }\n\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.setSlideClasses(index);\n            _.asNavFor(index);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = Math.round(Math.sqrt(\n                Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (swipeDirection === 'vertical') {\n            return;\n        }\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                .removeClass('slick-active')\n                .attr('aria-hidden', 'true');\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active')\n                .attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/slick.js\n **/","// https://d3js.org Version 4.2.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.2.3\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n}\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n}\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar identity = function(x) {\n  return x;\n}\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n}\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n}\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n}\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n}\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n}\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n}\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n}\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n}\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n}\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n}\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n}\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n}\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n}\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nvar identity$1 = function(d) {\n  return d;\n}\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nvar noop = function() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n}\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n}\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n}\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar number$1 = function(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n}\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n}\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nvar sparse = function(update) {\n  return new Array(update.length);\n}\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength)\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nvar selection_empty = function() {\n  return !this.node();\n}\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n}\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n}\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n}\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n}\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n}\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n}\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n}\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  force.initialize = function(_) {\n    var i, n = (nodes = _).length; radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index$2(d, i) {\n  return i;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n      if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  }\n}\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n}\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      selection$$1 = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n}\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nvar graticule = function() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nvar identity$7 = function(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function() {\n  var pointRadius = 4.5,\n      projection,\n      projectionStream,\n      context,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(null).context(null);\n}\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n}\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n}\n\nvar transform$1 = function(prototype) {\n  return {\n    stream: transform$2(prototype)\n  };\n}\n\nfunction transform$2(prototype) {\n  function T() {}\n  var p = T.prototype = Object.create(Transform$1.prototype);\n  for (var k in prototype) p[k] = prototype[k];\n  return function(stream) {\n    var t = new T;\n    t.stream = stream;\n    return t;\n  };\n}\n\nfunction Transform$1() {}\n\nTransform$1.prototype = {\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(project, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = project.clipExtent && project.clipExtent();\n\n  project\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) project.clipExtent(null);\n\n  geoStream(object, project.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) project.clipExtent(clip);\n\n  return project\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(project) {\n  return function(size, object) {\n    return fit(project, [[0, 0], size], object);\n  };\n}\n\nfunction fitExtent(project) {\n  return function(extent, object) {\n    return fit(project, extent, object);\n  };\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transform$2({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transform$2({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = fitExtent(projection);\n\n  projection.fitSize = fitSize(projection);\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0),\n      n = (sy0 + sin$1(y1)) / 2,\n      c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return albersUsa;\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return albersUsa;\n  };\n\n  albersUsa.fitExtent = fitExtent(albersUsa);\n\n  albersUsa.fitSize = fitSize(albersUsa);\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/build/d3.js\n ** module id = 3\n ** module chunks = 1\n **/"],"sourceRoot":""}