{"version":3,"sources":["webpack:///app.33c7bbc970a7aedeaa04.bundle.js","webpack:///./src/js/index.js","webpack:///./src/js/calculator.js","webpack:///./src/js/slick.js","webpack:///./~/d3/build/d3.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","calc","$siteNav","lastScroll","timedNavHide","window","on","this","width","thisScroll","scrollTop","clearTimeout","show","slideUp","slideDown","setTimeout","hideNav","hasClass","removeClass","toggleClass","$navItem","click","event","location","attr","preventDefault","animate","text","toLowerCase","offset","top","slick","arrows","autoplay","infinite","speed","slidesToShow","adaptiveHeight","responsive","breakpoint","settings","document","ready","console","log","Button","init","label","className","clickEvent","button","createElement","setAttribute","innerHTML","onclick","insert","where","appendChild","Calculator","_expression","_lastEntered","_err","_operators","create","_this","topRow","getElementById","numRow","opsRow","clrBtn","Object","clearDisplay","bind","delBtn","deleteLast","insertOperation","_loop","number","numBtn","_loop2","operator","opBtn","length","decBtn","eqBtn","evaluateExpression","op","indexOf","_updateDisplay","evaluator","Evaluator","parse","toString","slice","display","position","char","string","stringExpression","nextChar","result","parseExpression","expression","parseTerm","isCharMatch","terms","parseFactor","startPosition","search","parseFloat","substring","charAt","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","factory","apply","undefined","Slick","element","dataSettings","_","defaults","accessibility","appendArrows","appendDots","asNavFor","prevArrow","nextArrow","autoplaySpeed","centerMode","centerPadding","cssEase","customPaging","slider","i","dots","dotsClass","draggable","easing","edgeFriction","fade","focusOnSelect","initialSlide","lazyLoad","mobileFirst","pauseOnHover","pauseOnFocus","pauseOnDotsHover","respondTo","rows","rtl","slide","slidesPerRow","slidesToScroll","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","vertical","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","extend","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","focussed","interrupted","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","data","options","originalSettings","mozHidden","webkitHidden","autoPlay","proxy","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","dragHandler","keyHandler","instanceUid","htmlExpr","registerBreakpoints","prototype","activateADA","find","aria-hidden","tabindex","addSlide","slickAdd","markup","index","addBefore","unload","appendTo","insertBefore","eq","insertAfter","prependTo","children","detach","append","each","reinit","animateHeight","targetHeight","outerHeight","height","animateSlide","targetLeft","callback","animProps","left","animStart","duration","step","now","Math","ceil","css","complete","call","applyTransition","disableTransition","getNavTarget","not","target","slideHandler","transition","setInterval","clearInterval","slideTo","buildArrows","addClass","removeAttr","test","add","aria-disabled","buildDots","dot","getDotCount","first","buildOut","wrapAll","parent","wrap","setupInfinite","updateDots","setSlideClasses","buildRows","a","b","c","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","row","get","empty","checkResponsive","initial","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","hasOwnProperty","unslick","refresh","trigger","dontAnimate","indexOffset","unevenOffset","$target","currentTarget","is","closest","message","checkNavigable","navigables","prevNavigable","getNavigableIndexes","n","cleanUpEvents","off","interrupt","visibility","cleanUpSlideEvents","orientationChange","resize","cleanUpRows","stopImmediatePropagation","stopPropagation","destroy","remove","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","filter","focusHandler","$sf","getCurrent","slickCurrentSlide","breakPoint","counter","pagerQty","getLeft","verticalHeight","targetSlide","verticalOffset","floor","offsetLeft","outerWidth","getOption","slickGetOption","option","max","indexes","push","getSlick","getSlideCount","slidesTraversed","swipedSlide","centerOffset","abs","goTo","slickGoTo","parseInt","creation","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","role","aria-describedby","aria-selected","aria-controls","id","end","initArrowEvents","initDotEvents","initSlideEvents","action","initUI","tagName","match","keyCode","loadImages","imagesScope","image","imageSource","imageToLoad","onload","onerror","src","loadRange","cloneRange","rangeStart","rangeEnd","progressiveLazyLoad","next","slickNext","pause","slickPause","play","slickPlay","postSlide","prev","slickPrev","tryCount","$imgsToLoad","initializing","lastVisibleIndex","currentBreakpoint","l","responsiveSettings","type","splice","sort","windowDelay","removeSlide","slickRemove","removeBefore","removeAll","setCSS","x","y","positionProps","setDimensions","padding","setFade","right","setHeight","setOption","slickSetOption","item","value","arguments","opt","val","bodyStyle","body","style","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","allSlides","remainder","infiniteCount","clone","toggle","targetElement","parents","sync","animSlide","oldSlide","slideLeft","navTarget","hide","swipeDirection","xDist","yDist","r","swipeAngle","startX","curX","startY","curY","atan2","round","PI","swipeEnd","swipeLength","edgeHit","minSwipe","fingerCount","originalEvent","touches","swipeStart","swipeMove","curLeft","positionOffset","pageX","clientX","pageY","clientY","sqrt","pow","unfilterSlides","slickUnfilter","fromBreakpoint","fn","ret","args","Array","global","ascendingComparator","f","d","ascending","tickStep","start","stop","count","step0","step1","LN10","error","e10","e5","e2","Map","map$1","object","map","key","set","isArray","o","createObject","setObject","createMap","setMap","Set","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","computeUpperHullIndexes","points","size","cross","Path","_x0","_y0","_x1","_y1","path","tree","isNaN","xm","ym","xp","yp","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","Infinity","cover","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","noabort","maybeNotify","queue","concurrency","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","definition","Color","color","format","trim","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","documentElement","cssView","defaultView","getComputedStyle","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","baseVal","consolidate","matrix","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","set$2","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","interval","newInterval","floori","offseti","field","date","Date","d0","d1","range","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","filterEvents","addEventListener","customEvent","sourceEvent","none$2","EnterNode","datum","_parent","bindIndex","enter","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","_groups","_parents","selection","root","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","range0","range1","selectAll","order","tickExit","tickEnter","line","select","merge","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","x$2","y$2","nopropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touchending","keydowned","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transform$2","T","Transform$1","fit","project","clip","geoStream","boundsStream$1","fitSize","fitExtent","resampleNone","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projection","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","conicEqualAreaRaw","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","sign$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","selection_on","current","point$5","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeId","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","tx","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","nodeById","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","voronoi","constant$10","applyX","applyY","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","forward","circle$1","lines","pointEqual","isSubject","extent$1","length$2","object$1","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty"],"mappings":"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","file":"app.33c7bbc970a7aedeaa04.bundle.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar $ = __webpack_require__(1);\n\tvar slick = __webpack_require__(3);\n\tvar d3 = __webpack_require__(4);\n\tvar calc = __webpack_require__(2);\n\t\n\tvar $siteNav = $('.siteNav');\n\tvar lastScroll = 0;\n\tvar timedNavHide = void 0;\n\t\n\t// Hiding functionality for Nav\n\t// Only hide on non-mobile screens\n\t$(window).on('scroll', function () {\n\t    if ($(this).width() > 640) {\n\t        var thisScroll = $(this).scrollTop();\n\t        // Always show Nav when at the top of the page\n\t        if (thisScroll < 100) {\n\t            clearTimeout(timedNavHide);\n\t            $siteNav.show();\n\t            // Hide Nav on scroll down\n\t        } else if (thisScroll > lastScroll) {\n\t            $siteNav.slideUp('fast');\n\t            // Show Nav on scroll up, but hide again after 2 seconds\n\t        } else {\n\t            $siteNav.slideDown('fast');\n\t            clearTimeout(timedNavHide);\n\t            timedNavHide = setTimeout(hideNav, 2000);\n\t        }\n\t        lastScroll = thisScroll;\n\t        // Hide menu if open on mobile scroll\n\t    } else {\n\t        if ($siteNav.hasClass('js-responsive')) {\n\t            $siteNav.removeClass('js-responsive');\n\t        }\n\t    }\n\t});\n\t\n\t// Don't hide the Nav while hovering over\n\t$siteNav.on('mouseenter', function () {\n\t    clearTimeout(timedNavHide);\n\t});\n\t\n\t// If not at top, hide the Nav again on mouse out\n\t$siteNav.on('mouseleave', function () {\n\t    var thisScroll = $(this).scrollTop();\n\t    if (thisScroll > 100) {\n\t        timedNavHide = setTimeout(hideNav, 2000);\n\t    }\n\t});\n\t\n\tvar hideNav = function hideNav() {\n\t    return $siteNav.slideUp('fast');\n\t};\n\t\n\t$('.siteNav_menuBtn').on('click', function () {\n\t    $siteNav.toggleClass('js-responsive');\n\t});\n\t\n\t// Highlight active section and scroll animation\n\tvar $navItem = $('.siteNav_nav_item > a');\n\t\n\t$navItem.click(function (event) {\n\t    // Stop the default link navigation\n\t    if ($(location).attr('href') === 'https://zaclem01.github.io/') {\n\t        event.preventDefault();\n\t    }\n\t\n\t    $('html, body').animate({\n\t        scrollTop: $('#' + $(this).text().toLowerCase() + 'Section').offset().top // Adjust for Top Bar\n\t    }, 500);\n\t});\n\t\n\t$('.work_content').slick({\n\t    arrows: true,\n\t    autoplay: true,\n\t    infinite: true,\n\t    speed: 300,\n\t    slidesToShow: 2,\n\t    adaptiveHeight: true,\n\t    responsive: [{\n\t        breakpoint: 420,\n\t        settings: {\n\t            slidesToShow: 1\n\t        }\n\t    }]\n\t});\n\t\n\t$(document).ready(function () {\n\t    console.log($(location).attr('href'));\n\t    if ($(location).attr('href') === 'https://zaclem01.github.io/calculator.html') {\n\t        console.log('calc page');\n\t        calc();\n\t    }\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar Button = {\n\t\n\t  // Initialize the button with class, label, and an\n\t  // onclick function\n\t  init: function init(label, className, clickEvent) {\n\t    this.button = document.createElement('button');\n\t\n\t    this.button.setAttribute('class', className + ' s-btn');\n\t    this.button.innerHTML = label;\n\t    this.button.onclick = clickEvent;\n\t  },\n\t\n\t  // Insert the button into the DOM\n\t  insert: function insert(where) {\n\t    where.appendChild(this.button);\n\t  }\n\t};\n\t\n\tvar Calculator = {\n\t  _expression: '',\n\t  _lastEntered: '',\n\t  _err: false,\n\t  _operators: ['/', '*', '-', '+'],\n\t\n\t  // Handles all of the button creation\n\t  create: function create() {\n\t    var _this = this;\n\t\n\t    var topRow = document.getElementById('topBtns');\n\t    var numRow = document.getElementById('numBtns');\n\t    var opsRow = document.getElementById('opBtns');\n\t\n\t    var clrBtn = Object.create(Button);\n\t    clrBtn.init('C', 'topBtnContainer_clrBtn', function () {\n\t      this.clearDisplay();\n\t    }.bind(this));\n\t    clrBtn.insert(topRow);\n\t\n\t    var delBtn = Object.create(Button);\n\t    delBtn.init('Del', 'topBtnContainer_delBtn', function () {\n\t      this.deleteLast();\n\t    }.bind(this));\n\t    delBtn.insert(topRow);\n\t\n\t    var leftPrnBtn = Object.create(Button);\n\t    delBtn.init('(', 'topBtnContainer_lprnBtn', function () {\n\t      this.insertOperation('(');\n\t    }.bind(this));\n\t    delBtn.insert(topRow);\n\t\n\t    var leftPrnBtn = Object.create(Button);\n\t    delBtn.init(')', 'topBtnContainer_rprnBtn', function () {\n\t      this.insertOperation(')');\n\t    }.bind(this));\n\t    delBtn.insert(topRow);\n\t\n\t    var _loop = function _loop(number) {\n\t      numBtn = Object.create(Button);\n\t\n\t      // Must bind to 'this' to retain context when\n\t      // passing the 'insertNumber' function\n\t\n\t      numBtn.init(number, 'numBtnContainer_numBtn', function () {\n\t        this.insertOperation(number);\n\t      }.bind(_this));\n\t      numBtn.insert(numRow);\n\t    };\n\t\n\t    for (var number = 9; number >= 0; number--) {\n\t      var numBtn;\n\t\n\t      _loop(number);\n\t    }\n\t\n\t    var _loop2 = function _loop2(operator) {\n\t      opBtn = Object.create(Button);\n\t\n\t      opBtn.init(_this._operators[operator], 'opBtnContainer_opBtn', function () {\n\t        this.insertOperation(this._operators[operator]);\n\t      }.bind(_this));\n\t      opBtn.insert(opsRow);\n\t    };\n\t\n\t    for (var operator = 0; operator < this._operators.length; operator++) {\n\t      var opBtn;\n\t\n\t      _loop2(operator);\n\t    }\n\t\n\t    var decBtn = Object.create(Button);\n\t    decBtn.init('.', 'numBtnContainer_numBtn', function () {\n\t      this.insertOperation('.');\n\t    }.bind(this));\n\t    decBtn.insert(numRow);\n\t\n\t    var eqBtn = Object.create(Button);\n\t    eqBtn.init('=', 'numBtnContainer_numBtn', function () {\n\t      this.evaluateExpression();\n\t    }.bind(this));\n\t    eqBtn.insert(numRow);\n\t  },\n\t\n\t  insertOperation: function insertOperation(op) {\n\t    if (this._lastEntered === '=' && this._operators.indexOf(op) === -1) {\n\t      this._expression = '';\n\t    }\n\t    this._expression += op;\n\t    this._lastEntered = op;\n\t    this._updateDisplay();\n\t  },\n\t\n\t  evaluateExpression: function evaluateExpression() {\n\t    this._lastEntered = '=';\n\t    var evaluator = Object.create(Evaluator);\n\t    this._expression = evaluator.parse(this._expression).toString();\n\t    this._updateDisplay();\n\t  },\n\t\n\t  clearDisplay: function clearDisplay() {\n\t    this._expression = '';\n\t    this._updateDisplay();\n\t  },\n\t\n\t  deleteLast: function deleteLast() {\n\t    console.log('deleting last');\n\t    this._expression = this._expression.slice(0, -1);\n\t    this._updateDisplay();\n\t  },\n\t\n\t  _updateDisplay: function _updateDisplay() {\n\t    var display = document.getElementById('display');\n\t    display.innerHTML = this._expression;\n\t  }\n\t};\n\t\n\t// Recursive Descent Math Expression Parser\n\t// Modeled on and borrows heavily from\n\t// http://stackoverflow.com/questions/3422673/evaluating-a-math-expression-given-in-string-form\n\tvar Evaluator = {\n\t  position: -1,\n\t  char: '',\n\t  string: '',\n\t\n\t  parse: function parse(stringExpression) {\n\t    this.string = stringExpression;\n\t    console.log(this.string);\n\t    this.nextChar();\n\t    var result = this.parseExpression();\n\t\n\t    // If returned before reaching the end of the string,\n\t    // unexpected character encountered\n\t    if (this.position < this.string.length) {\n\t      throw \"Unexpected character: \" + this.char;\n\t    }\n\t    return result;\n\t  },\n\t\n\t  // Top-level, checks for + & - operators\n\t  parseExpression: function parseExpression() {\n\t    var expression = this.parseTerm();\n\t\n\t    // Loop to catch multiple +/- operators\n\t    while (true) {\n\t      if (this.isCharMatch('+')) {\n\t        expression += this.parseTerm();\n\t      } else if (this.isCharMatch('-')) {\n\t        expression -= this.parseTerm();\n\t      } else {\n\t        return expression;\n\t      }\n\t    }\n\t  },\n\t\n\t  // Middle-level, checks for * & / operators\n\t  parseTerm: function parseTerm() {\n\t    var terms = this.parseFactor();\n\t    while (true) {\n\t      if (this.isCharMatch('*')) {\n\t        terms *= this.parseFactor();\n\t      } else if (this.isCharMatch('/')) {\n\t        terms /= this.parseFactor();\n\t      } else {\n\t        return terms;\n\t      }\n\t    }\n\t  },\n\t\n\t  // Bottom-level, checks for (), numbers, and other high\n\t  // priority orders (according to PEMDAS);\n\t  parseFactor: function parseFactor() {\n\t\n\t    // Unary + & - operators\n\t    if (this.isCharMatch('-')) {\n\t      -this.parseFactor();\n\t    } else if (this.isCharMatch('+')) {\n\t      +this.parseFactor;\n\t    }\n\t\n\t    var startPosition = this.position;\n\t    var result;\n\t\n\t    // First check for parentheses, and if found complete entire\n\t    // expression as separate, moving on when completed\n\t\n\t    // Otherwise, check for number\n\t\n\t    // If nothing valid found, throw error, as this is the bottom level\n\t    if (this.isCharMatch('(')) {\n\t      result = this.parseExpression();\n\t      this.isCharMatch(')');\n\t    } else if (this.char.search(/[0-9\\.]/gi) !== -1) {\n\t      while (this.char.search(/[0-9\\.]/gi) !== -1) {\n\t        this.nextChar();\n\t        result = parseFloat(this.string.substring(startPosition, this.position));\n\t      }\n\t    } else {\n\t      // Handles any unaccounted for characters\n\t      throw \"Unexpected character: \" + this.char;\n\t    }\n\t\n\t    return result;\n\t  },\n\t\n\t  nextChar: function nextChar() {\n\t    this.char = ++this.position < this.string.length ? this.string.charAt(this.position) : '';\n\t  },\n\t\n\t  // Matches the character and returns true or false\n\t  // Skips any spaces\n\t  // Moves to next character if a match\n\t  isCharMatch: function isCharMatch(char) {\n\t    while (this.char === ' ') {\n\t      this.nextChar();\n\t    }\n\t    if (this.char === char) {\n\t      this.nextChar();\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t};\n\t\n\tmodule.exports = function () {\n\t  var calc = Object.create(Calculator);\n\t  calc.create();\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/*\n\t     _ _      _       _\n\t ___| (_) ___| | __  (_)___\n\t/ __| | |/ __| |/ /  | / __|\n\t\\__ \\ | | (__|   < _ | \\__ \\\n\t|___/_|_|\\___|_|\\_(_)/ |___/\n\t                   |__/\n\t\n\t Version: 1.6.0\n\t  Author: Ken Wheeler\n\t Website: http://kenwheeler.github.io\n\t    Docs: http://kenwheeler.github.io/slick\n\t    Repo: http://github.com/kenwheeler/slick\n\t  Issues: http://github.com/kenwheeler/slick/issues\n\t\n\t */\n\t/* global window, document, define, jQuery, setInterval, clearInterval */\n\t(function (factory) {\n\t    'use strict';\n\t\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports !== 'undefined') {\n\t        module.exports = factory(require('jquery'));\n\t    } else {\n\t        factory(jQuery);\n\t    }\n\t})(function ($) {\n\t    'use strict';\n\t\n\t    var Slick = window.Slick || {};\n\t\n\t    Slick = function () {\n\t\n\t        var instanceUid = 0;\n\t\n\t        function Slick(element, settings) {\n\t\n\t            var _ = this,\n\t                dataSettings;\n\t\n\t            _.defaults = {\n\t                accessibility: true,\n\t                adaptiveHeight: false,\n\t                appendArrows: $(element),\n\t                appendDots: $(element),\n\t                arrows: true,\n\t                asNavFor: null,\n\t                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n\t                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n\t                autoplay: false,\n\t                autoplaySpeed: 3000,\n\t                centerMode: false,\n\t                centerPadding: '50px',\n\t                cssEase: 'ease',\n\t                customPaging: function customPaging(slider, i) {\n\t                    return $('<button type=\"button\" data-role=\"none\" role=\"button\" tabindex=\"0\" />').text(i + 1);\n\t                },\n\t                dots: false,\n\t                dotsClass: 'slick-dots',\n\t                draggable: true,\n\t                easing: 'linear',\n\t                edgeFriction: 0.35,\n\t                fade: false,\n\t                focusOnSelect: false,\n\t                infinite: true,\n\t                initialSlide: 0,\n\t                lazyLoad: 'ondemand',\n\t                mobileFirst: false,\n\t                pauseOnHover: true,\n\t                pauseOnFocus: true,\n\t                pauseOnDotsHover: false,\n\t                respondTo: 'window',\n\t                responsive: null,\n\t                rows: 1,\n\t                rtl: false,\n\t                slide: '',\n\t                slidesPerRow: 1,\n\t                slidesToShow: 1,\n\t                slidesToScroll: 1,\n\t                speed: 500,\n\t                swipe: true,\n\t                swipeToSlide: false,\n\t                touchMove: true,\n\t                touchThreshold: 5,\n\t                useCSS: true,\n\t                useTransform: true,\n\t                variableWidth: false,\n\t                vertical: false,\n\t                verticalSwiping: false,\n\t                waitForAnimate: true,\n\t                zIndex: 1000\n\t            };\n\t\n\t            _.initials = {\n\t                animating: false,\n\t                dragging: false,\n\t                autoPlayTimer: null,\n\t                currentDirection: 0,\n\t                currentLeft: null,\n\t                currentSlide: 0,\n\t                direction: 1,\n\t                $dots: null,\n\t                listWidth: null,\n\t                listHeight: null,\n\t                loadIndex: 0,\n\t                $nextArrow: null,\n\t                $prevArrow: null,\n\t                slideCount: null,\n\t                slideWidth: null,\n\t                $slideTrack: null,\n\t                $slides: null,\n\t                sliding: false,\n\t                slideOffset: 0,\n\t                swipeLeft: null,\n\t                $list: null,\n\t                touchObject: {},\n\t                transformsEnabled: false,\n\t                unslicked: false\n\t            };\n\t\n\t            $.extend(_, _.initials);\n\t\n\t            _.activeBreakpoint = null;\n\t            _.animType = null;\n\t            _.animProp = null;\n\t            _.breakpoints = [];\n\t            _.breakpointSettings = [];\n\t            _.cssTransitions = false;\n\t            _.focussed = false;\n\t            _.interrupted = false;\n\t            _.hidden = 'hidden';\n\t            _.paused = true;\n\t            _.positionProp = null;\n\t            _.respondTo = null;\n\t            _.rowCount = 1;\n\t            _.shouldClick = true;\n\t            _.$slider = $(element);\n\t            _.$slidesCache = null;\n\t            _.transformType = null;\n\t            _.transitionType = null;\n\t            _.visibilityChange = 'visibilitychange';\n\t            _.windowWidth = 0;\n\t            _.windowTimer = null;\n\t\n\t            dataSettings = $(element).data('slick') || {};\n\t\n\t            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\t\n\t            _.currentSlide = _.options.initialSlide;\n\t\n\t            _.originalSettings = _.options;\n\t\n\t            if (typeof document.mozHidden !== 'undefined') {\n\t                _.hidden = 'mozHidden';\n\t                _.visibilityChange = 'mozvisibilitychange';\n\t            } else if (typeof document.webkitHidden !== 'undefined') {\n\t                _.hidden = 'webkitHidden';\n\t                _.visibilityChange = 'webkitvisibilitychange';\n\t            }\n\t\n\t            _.autoPlay = $.proxy(_.autoPlay, _);\n\t            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n\t            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n\t            _.changeSlide = $.proxy(_.changeSlide, _);\n\t            _.clickHandler = $.proxy(_.clickHandler, _);\n\t            _.selectHandler = $.proxy(_.selectHandler, _);\n\t            _.setPosition = $.proxy(_.setPosition, _);\n\t            _.swipeHandler = $.proxy(_.swipeHandler, _);\n\t            _.dragHandler = $.proxy(_.dragHandler, _);\n\t            _.keyHandler = $.proxy(_.keyHandler, _);\n\t\n\t            _.instanceUid = instanceUid++;\n\t\n\t            // A simple way to check for HTML strings\n\t            // Strict HTML recognition (must start with <)\n\t            // Extracted from jQuery v1.11 source\n\t            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\t\n\t            _.registerBreakpoints();\n\t            _.init(true);\n\t        }\n\t\n\t        return Slick;\n\t    }();\n\t\n\t    Slick.prototype.activateADA = function () {\n\t        var _ = this;\n\t\n\t        _.$slideTrack.find('.slick-active').attr({\n\t            'aria-hidden': 'false'\n\t        }).find('a, input, button, select').attr({\n\t            'tabindex': '0'\n\t        });\n\t    };\n\t\n\t    Slick.prototype.addSlide = Slick.prototype.slickAdd = function (markup, index, addBefore) {\n\t\n\t        var _ = this;\n\t\n\t        if (typeof index === 'boolean') {\n\t            addBefore = index;\n\t            index = null;\n\t        } else if (index < 0 || index >= _.slideCount) {\n\t            return false;\n\t        }\n\t\n\t        _.unload();\n\t\n\t        if (typeof index === 'number') {\n\t            if (index === 0 && _.$slides.length === 0) {\n\t                $(markup).appendTo(_.$slideTrack);\n\t            } else if (addBefore) {\n\t                $(markup).insertBefore(_.$slides.eq(index));\n\t            } else {\n\t                $(markup).insertAfter(_.$slides.eq(index));\n\t            }\n\t        } else {\n\t            if (addBefore === true) {\n\t                $(markup).prependTo(_.$slideTrack);\n\t            } else {\n\t                $(markup).appendTo(_.$slideTrack);\n\t            }\n\t        }\n\t\n\t        _.$slides = _.$slideTrack.children(this.options.slide);\n\t\n\t        _.$slideTrack.children(this.options.slide).detach();\n\t\n\t        _.$slideTrack.append(_.$slides);\n\t\n\t        _.$slides.each(function (index, element) {\n\t            $(element).attr('data-slick-index', index);\n\t        });\n\t\n\t        _.$slidesCache = _.$slides;\n\t\n\t        _.reinit();\n\t    };\n\t\n\t    Slick.prototype.animateHeight = function () {\n\t        var _ = this;\n\t        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t            _.$list.animate({\n\t                height: targetHeight\n\t            }, _.options.speed);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.animateSlide = function (targetLeft, callback) {\n\t\n\t        var animProps = {},\n\t            _ = this;\n\t\n\t        _.animateHeight();\n\t\n\t        if (_.options.rtl === true && _.options.vertical === false) {\n\t            targetLeft = -targetLeft;\n\t        }\n\t        if (_.transformsEnabled === false) {\n\t            if (_.options.vertical === false) {\n\t                _.$slideTrack.animate({\n\t                    left: targetLeft\n\t                }, _.options.speed, _.options.easing, callback);\n\t            } else {\n\t                _.$slideTrack.animate({\n\t                    top: targetLeft\n\t                }, _.options.speed, _.options.easing, callback);\n\t            }\n\t        } else {\n\t\n\t            if (_.cssTransitions === false) {\n\t                if (_.options.rtl === true) {\n\t                    _.currentLeft = -_.currentLeft;\n\t                }\n\t                $({\n\t                    animStart: _.currentLeft\n\t                }).animate({\n\t                    animStart: targetLeft\n\t                }, {\n\t                    duration: _.options.speed,\n\t                    easing: _.options.easing,\n\t                    step: function step(now) {\n\t                        now = Math.ceil(now);\n\t                        if (_.options.vertical === false) {\n\t                            animProps[_.animType] = 'translate(' + now + 'px, 0px)';\n\t                            _.$slideTrack.css(animProps);\n\t                        } else {\n\t                            animProps[_.animType] = 'translate(0px,' + now + 'px)';\n\t                            _.$slideTrack.css(animProps);\n\t                        }\n\t                    },\n\t                    complete: function complete() {\n\t                        if (callback) {\n\t                            callback.call();\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t\n\t                _.applyTransition();\n\t                targetLeft = Math.ceil(targetLeft);\n\t\n\t                if (_.options.vertical === false) {\n\t                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n\t                } else {\n\t                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n\t                }\n\t                _.$slideTrack.css(animProps);\n\t\n\t                if (callback) {\n\t                    setTimeout(function () {\n\t\n\t                        _.disableTransition();\n\t\n\t                        callback.call();\n\t                    }, _.options.speed);\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.getNavTarget = function () {\n\t\n\t        var _ = this,\n\t            asNavFor = _.options.asNavFor;\n\t\n\t        if (asNavFor && asNavFor !== null) {\n\t            asNavFor = $(asNavFor).not(_.$slider);\n\t        }\n\t\n\t        return asNavFor;\n\t    };\n\t\n\t    Slick.prototype.asNavFor = function (index) {\n\t\n\t        var _ = this,\n\t            asNavFor = _.getNavTarget();\n\t\n\t        if (asNavFor !== null && (typeof asNavFor === 'undefined' ? 'undefined' : _typeof(asNavFor)) === 'object') {\n\t            asNavFor.each(function () {\n\t                var target = $(this).slick('getSlick');\n\t                if (!target.unslicked) {\n\t                    target.slideHandler(index, true);\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.applyTransition = function (slide) {\n\t\n\t        var _ = this,\n\t            transition = {};\n\t\n\t        if (_.options.fade === false) {\n\t            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t        } else {\n\t            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n\t        }\n\t\n\t        if (_.options.fade === false) {\n\t            _.$slideTrack.css(transition);\n\t        } else {\n\t            _.$slides.eq(slide).css(transition);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlay = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t\n\t        if (_.slideCount > _.options.slidesToShow) {\n\t            _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlayClear = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.autoPlayTimer) {\n\t            clearInterval(_.autoPlayTimer);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.autoPlayIterator = function () {\n\t\n\t        var _ = this,\n\t            slideTo = _.currentSlide + _.options.slidesToScroll;\n\t\n\t        if (!_.paused && !_.interrupted && !_.focussed) {\n\t\n\t            if (_.options.infinite === false) {\n\t\n\t                if (_.direction === 1 && _.currentSlide + 1 === _.slideCount - 1) {\n\t                    _.direction = 0;\n\t                } else if (_.direction === 0) {\n\t\n\t                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\t\n\t                    if (_.currentSlide - 1 === 0) {\n\t                        _.direction = 1;\n\t                    }\n\t                }\n\t            }\n\t\n\t            _.slideHandler(slideTo);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildArrows = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true) {\n\t\n\t            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n\t            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\t\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t\n\t                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\t                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\t\n\t                if (_.htmlExpr.test(_.options.prevArrow)) {\n\t                    _.$prevArrow.prependTo(_.options.appendArrows);\n\t                }\n\t\n\t                if (_.htmlExpr.test(_.options.nextArrow)) {\n\t                    _.$nextArrow.appendTo(_.options.appendArrows);\n\t                }\n\t\n\t                if (_.options.infinite !== true) {\n\t                    _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                }\n\t            } else {\n\t\n\t                _.$prevArrow.add(_.$nextArrow).addClass('slick-hidden').attr({\n\t                    'aria-disabled': 'true',\n\t                    'tabindex': '-1'\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildDots = function () {\n\t\n\t        var _ = this,\n\t            i,\n\t            dot;\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$slider.addClass('slick-dotted');\n\t\n\t            dot = $('<ul />').addClass(_.options.dotsClass);\n\t\n\t            for (i = 0; i <= _.getDotCount(); i += 1) {\n\t                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n\t            }\n\t\n\t            _.$dots = dot.appendTo(_.options.appendDots);\n\t\n\t            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildOut = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slides = _.$slider.children(_.options.slide + ':not(.slick-cloned)').addClass('slick-slide');\n\t\n\t        _.slideCount = _.$slides.length;\n\t\n\t        _.$slides.each(function (index, element) {\n\t            $(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');\n\t        });\n\t\n\t        _.$slider.addClass('slick-slider');\n\t\n\t        _.$slideTrack = _.slideCount === 0 ? $('<div class=\"slick-track\"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\t\n\t        _.$list = _.$slideTrack.wrap('<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n\t        _.$slideTrack.css('opacity', 0);\n\t\n\t        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n\t            _.options.slidesToScroll = 1;\n\t        }\n\t\n\t        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\t\n\t        _.setupInfinite();\n\t\n\t        _.buildArrows();\n\t\n\t        _.buildDots();\n\t\n\t        _.updateDots();\n\t\n\t        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\t\n\t        if (_.options.draggable === true) {\n\t            _.$list.addClass('draggable');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.buildRows = function () {\n\t\n\t        var _ = this,\n\t            a,\n\t            b,\n\t            c,\n\t            newSlides,\n\t            numOfSlides,\n\t            originalSlides,\n\t            slidesPerSection;\n\t\n\t        newSlides = document.createDocumentFragment();\n\t        originalSlides = _.$slider.children();\n\t\n\t        if (_.options.rows > 1) {\n\t\n\t            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n\t            numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);\n\t\n\t            for (a = 0; a < numOfSlides; a++) {\n\t                var slide = document.createElement('div');\n\t                for (b = 0; b < _.options.rows; b++) {\n\t                    var row = document.createElement('div');\n\t                    for (c = 0; c < _.options.slidesPerRow; c++) {\n\t                        var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);\n\t                        if (originalSlides.get(target)) {\n\t                            row.appendChild(originalSlides.get(target));\n\t                        }\n\t                    }\n\t                    slide.appendChild(row);\n\t                }\n\t                newSlides.appendChild(slide);\n\t            }\n\t\n\t            _.$slider.empty().append(newSlides);\n\t            _.$slider.children().children().children().css({\n\t                'width': 100 / _.options.slidesPerRow + '%',\n\t                'display': 'inline-block'\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.checkResponsive = function (initial, forceUpdate) {\n\t\n\t        var _ = this,\n\t            breakpoint,\n\t            targetBreakpoint,\n\t            respondToWidth,\n\t            triggerBreakpoint = false;\n\t        var sliderWidth = _.$slider.width();\n\t        var windowWidth = window.innerWidth || $(window).width();\n\t\n\t        if (_.respondTo === 'window') {\n\t            respondToWidth = windowWidth;\n\t        } else if (_.respondTo === 'slider') {\n\t            respondToWidth = sliderWidth;\n\t        } else if (_.respondTo === 'min') {\n\t            respondToWidth = Math.min(windowWidth, sliderWidth);\n\t        }\n\t\n\t        if (_.options.responsive && _.options.responsive.length && _.options.responsive !== null) {\n\t\n\t            targetBreakpoint = null;\n\t\n\t            for (breakpoint in _.breakpoints) {\n\t                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n\t                    if (_.originalSettings.mobileFirst === false) {\n\t                        if (respondToWidth < _.breakpoints[breakpoint]) {\n\t                            targetBreakpoint = _.breakpoints[breakpoint];\n\t                        }\n\t                    } else {\n\t                        if (respondToWidth > _.breakpoints[breakpoint]) {\n\t                            targetBreakpoint = _.breakpoints[breakpoint];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (targetBreakpoint !== null) {\n\t                if (_.activeBreakpoint !== null) {\n\t                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n\t                        _.activeBreakpoint = targetBreakpoint;\n\t                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t                            _.unslick(targetBreakpoint);\n\t                        } else {\n\t                            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n\t                            if (initial === true) {\n\t                                _.currentSlide = _.options.initialSlide;\n\t                            }\n\t                            _.refresh(initial);\n\t                        }\n\t                        triggerBreakpoint = targetBreakpoint;\n\t                    }\n\t                } else {\n\t                    _.activeBreakpoint = targetBreakpoint;\n\t                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t                        _.unslick(targetBreakpoint);\n\t                    } else {\n\t                        _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);\n\t                        if (initial === true) {\n\t                            _.currentSlide = _.options.initialSlide;\n\t                        }\n\t                        _.refresh(initial);\n\t                    }\n\t                    triggerBreakpoint = targetBreakpoint;\n\t                }\n\t            } else {\n\t                if (_.activeBreakpoint !== null) {\n\t                    _.activeBreakpoint = null;\n\t                    _.options = _.originalSettings;\n\t                    if (initial === true) {\n\t                        _.currentSlide = _.options.initialSlide;\n\t                    }\n\t                    _.refresh(initial);\n\t                    triggerBreakpoint = targetBreakpoint;\n\t                }\n\t            }\n\t\n\t            // only trigger breakpoints during an actual break. not on initialize.\n\t            if (!initial && triggerBreakpoint !== false) {\n\t                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.changeSlide = function (event, dontAnimate) {\n\t\n\t        var _ = this,\n\t            $target = $(event.currentTarget),\n\t            indexOffset,\n\t            slideOffset,\n\t            unevenOffset;\n\t\n\t        // If target is a link, prevent default action.\n\t        if ($target.is('a')) {\n\t            event.preventDefault();\n\t        }\n\t\n\t        // If target is not the <li> element (ie: a child), find the <li>.\n\t        if (!$target.is('li')) {\n\t            $target = $target.closest('li');\n\t        }\n\t\n\t        unevenOffset = _.slideCount % _.options.slidesToScroll !== 0;\n\t        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\t\n\t        switch (event.data.message) {\n\t\n\t            case 'previous':\n\t                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n\t                if (_.slideCount > _.options.slidesToShow) {\n\t                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n\t                }\n\t                break;\n\t\n\t            case 'next':\n\t                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n\t                if (_.slideCount > _.options.slidesToShow) {\n\t                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n\t                }\n\t                break;\n\t\n\t            case 'index':\n\t                var index = event.data.index === 0 ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;\n\t\n\t                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n\t                $target.children().trigger('focus');\n\t                break;\n\t\n\t            default:\n\t                return;\n\t        }\n\t    };\n\t\n\t    Slick.prototype.checkNavigable = function (index) {\n\t\n\t        var _ = this,\n\t            navigables,\n\t            prevNavigable;\n\t\n\t        navigables = _.getNavigableIndexes();\n\t        prevNavigable = 0;\n\t        if (index > navigables[navigables.length - 1]) {\n\t            index = navigables[navigables.length - 1];\n\t        } else {\n\t            for (var n in navigables) {\n\t                if (index < navigables[n]) {\n\t                    index = prevNavigable;\n\t                    break;\n\t                }\n\t                prevNavigable = navigables[n];\n\t            }\n\t        }\n\t\n\t        return index;\n\t    };\n\t\n\t    Slick.prototype.cleanUpEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.dots && _.$dots !== null) {\n\t\n\t            $('li', _.$dots).off('click.slick', _.changeSlide).off('mouseenter.slick', $.proxy(_.interrupt, _, true)).off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t\n\t        _.$slider.off('focus.slick blur.slick');\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n\t            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\t        }\n\t\n\t        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n\t        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n\t        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n\t        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\t\n\t        _.$list.off('click.slick', _.clickHandler);\n\t\n\t        $(document).off(_.visibilityChange, _.visibility);\n\t\n\t        _.cleanUpSlideEvents();\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.$list.off('keydown.slick', _.keyHandler);\n\t        }\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n\t        }\n\t\n\t        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\t\n\t        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\t\n\t        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\t\n\t        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\t        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\t    };\n\t\n\t    Slick.prototype.cleanUpSlideEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t    };\n\t\n\t    Slick.prototype.cleanUpRows = function () {\n\t\n\t        var _ = this,\n\t            originalSlides;\n\t\n\t        if (_.options.rows > 1) {\n\t            originalSlides = _.$slides.children().children();\n\t            originalSlides.removeAttr('style');\n\t            _.$slider.empty().append(originalSlides);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.clickHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.shouldClick === false) {\n\t            event.stopImmediatePropagation();\n\t            event.stopPropagation();\n\t            event.preventDefault();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.destroy = function (refresh) {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t\n\t        _.touchObject = {};\n\t\n\t        _.cleanUpEvents();\n\t\n\t        $('.slick-cloned', _.$slider).detach();\n\t\n\t        if (_.$dots) {\n\t            _.$dots.remove();\n\t        }\n\t\n\t        if (_.$prevArrow && _.$prevArrow.length) {\n\t\n\t            _.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');\n\t\n\t            if (_.htmlExpr.test(_.options.prevArrow)) {\n\t                _.$prevArrow.remove();\n\t            }\n\t        }\n\t\n\t        if (_.$nextArrow && _.$nextArrow.length) {\n\t\n\t            _.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');\n\t\n\t            if (_.htmlExpr.test(_.options.nextArrow)) {\n\t                _.$nextArrow.remove();\n\t            }\n\t        }\n\t\n\t        if (_.$slides) {\n\t\n\t            _.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function () {\n\t                $(this).attr('style', $(this).data('originalStyling'));\n\t            });\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slideTrack.detach();\n\t\n\t            _.$list.detach();\n\t\n\t            _.$slider.append(_.$slides);\n\t        }\n\t\n\t        _.cleanUpRows();\n\t\n\t        _.$slider.removeClass('slick-slider');\n\t        _.$slider.removeClass('slick-initialized');\n\t        _.$slider.removeClass('slick-dotted');\n\t\n\t        _.unslicked = true;\n\t\n\t        if (!refresh) {\n\t            _.$slider.trigger('destroy', [_]);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.disableTransition = function (slide) {\n\t\n\t        var _ = this,\n\t            transition = {};\n\t\n\t        transition[_.transitionType] = '';\n\t\n\t        if (_.options.fade === false) {\n\t            _.$slideTrack.css(transition);\n\t        } else {\n\t            _.$slides.eq(slide).css(transition);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.fadeSlide = function (slideIndex, callback) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.cssTransitions === false) {\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                zIndex: _.options.zIndex\n\t            });\n\t\n\t            _.$slides.eq(slideIndex).animate({\n\t                opacity: 1\n\t            }, _.options.speed, _.options.easing, callback);\n\t        } else {\n\t\n\t            _.applyTransition(slideIndex);\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                opacity: 1,\n\t                zIndex: _.options.zIndex\n\t            });\n\t\n\t            if (callback) {\n\t                setTimeout(function () {\n\t\n\t                    _.disableTransition(slideIndex);\n\t\n\t                    callback.call();\n\t                }, _.options.speed);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.fadeSlideOut = function (slideIndex) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.cssTransitions === false) {\n\t\n\t            _.$slides.eq(slideIndex).animate({\n\t                opacity: 0,\n\t                zIndex: _.options.zIndex - 2\n\t            }, _.options.speed, _.options.easing);\n\t        } else {\n\t\n\t            _.applyTransition(slideIndex);\n\t\n\t            _.$slides.eq(slideIndex).css({\n\t                opacity: 0,\n\t                zIndex: _.options.zIndex - 2\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function (filter) {\n\t\n\t        var _ = this;\n\t\n\t        if (filter !== null) {\n\t\n\t            _.$slidesCache = _.$slides;\n\t\n\t            _.unload();\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\t\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.focusHandler = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slider.off('focus.slick blur.slick').on('focus.slick blur.slick', '*:not(.slick-arrow)', function (event) {\n\t\n\t            event.stopImmediatePropagation();\n\t            var $sf = $(this);\n\t\n\t            setTimeout(function () {\n\t\n\t                if (_.options.pauseOnFocus) {\n\t                    _.focussed = $sf.is(':focus');\n\t                    _.autoPlay();\n\t                }\n\t            }, 0);\n\t        });\n\t    };\n\t\n\t    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function () {\n\t\n\t        var _ = this;\n\t        return _.currentSlide;\n\t    };\n\t\n\t    Slick.prototype.getDotCount = function () {\n\t\n\t        var _ = this;\n\t\n\t        var breakPoint = 0;\n\t        var counter = 0;\n\t        var pagerQty = 0;\n\t\n\t        if (_.options.infinite === true) {\n\t            while (breakPoint < _.slideCount) {\n\t                ++pagerQty;\n\t                breakPoint = counter + _.options.slidesToScroll;\n\t                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t            }\n\t        } else if (_.options.centerMode === true) {\n\t            pagerQty = _.slideCount;\n\t        } else if (!_.options.asNavFor) {\n\t            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n\t        } else {\n\t            while (breakPoint < _.slideCount) {\n\t                ++pagerQty;\n\t                breakPoint = counter + _.options.slidesToScroll;\n\t                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t            }\n\t        }\n\t\n\t        return pagerQty - 1;\n\t    };\n\t\n\t    Slick.prototype.getLeft = function (slideIndex) {\n\t\n\t        var _ = this,\n\t            targetLeft,\n\t            verticalHeight,\n\t            verticalOffset = 0,\n\t            targetSlide;\n\t\n\t        _.slideOffset = 0;\n\t        verticalHeight = _.$slides.first().outerHeight(true);\n\t\n\t        if (_.options.infinite === true) {\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t                _.slideOffset = _.slideWidth * _.options.slidesToShow * -1;\n\t                verticalOffset = verticalHeight * _.options.slidesToShow * -1;\n\t            }\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n\t                    if (slideIndex > _.slideCount) {\n\t                        _.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1;\n\t                        verticalOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1;\n\t                    } else {\n\t                        _.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1;\n\t                        verticalOffset = _.slideCount % _.options.slidesToScroll * verticalHeight * -1;\n\t                    }\n\t                }\n\t            }\n\t        } else {\n\t            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n\t                _.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth;\n\t                verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight;\n\t            }\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.slideOffset = 0;\n\t            verticalOffset = 0;\n\t        }\n\t\n\t        if (_.options.centerMode === true && _.options.infinite === true) {\n\t            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n\t        } else if (_.options.centerMode === true) {\n\t            _.slideOffset = 0;\n\t            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n\t        }\n\t\n\t        if (_.options.vertical === false) {\n\t            targetLeft = slideIndex * _.slideWidth * -1 + _.slideOffset;\n\t        } else {\n\t            targetLeft = slideIndex * verticalHeight * -1 + verticalOffset;\n\t        }\n\t\n\t        if (_.options.variableWidth === true) {\n\t\n\t            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t            } else {\n\t                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n\t            }\n\t\n\t            if (_.options.rtl === true) {\n\t                if (targetSlide[0]) {\n\t                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t                } else {\n\t                    targetLeft = 0;\n\t                }\n\t            } else {\n\t                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t            }\n\t\n\t            if (_.options.centerMode === true) {\n\t                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n\t                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t                } else {\n\t                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n\t                }\n\t\n\t                if (_.options.rtl === true) {\n\t                    if (targetSlide[0]) {\n\t                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n\t                    } else {\n\t                        targetLeft = 0;\n\t                    }\n\t                } else {\n\t                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t                }\n\t\n\t                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n\t            }\n\t        }\n\t\n\t        return targetLeft;\n\t    };\n\t\n\t    Slick.prototype.getOption = Slick.prototype.slickGetOption = function (option) {\n\t\n\t        var _ = this;\n\t\n\t        return _.options[option];\n\t    };\n\t\n\t    Slick.prototype.getNavigableIndexes = function () {\n\t\n\t        var _ = this,\n\t            breakPoint = 0,\n\t            counter = 0,\n\t            indexes = [],\n\t            max;\n\t\n\t        if (_.options.infinite === false) {\n\t            max = _.slideCount;\n\t        } else {\n\t            breakPoint = _.options.slidesToScroll * -1;\n\t            counter = _.options.slidesToScroll * -1;\n\t            max = _.slideCount * 2;\n\t        }\n\t\n\t        while (breakPoint < max) {\n\t            indexes.push(breakPoint);\n\t            breakPoint = counter + _.options.slidesToScroll;\n\t            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n\t        }\n\t\n\t        return indexes;\n\t    };\n\t\n\t    Slick.prototype.getSlick = function () {\n\t\n\t        return this;\n\t    };\n\t\n\t    Slick.prototype.getSlideCount = function () {\n\t\n\t        var _ = this,\n\t            slidesTraversed,\n\t            swipedSlide,\n\t            centerOffset;\n\t\n\t        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\t\n\t        if (_.options.swipeToSlide === true) {\n\t            _.$slideTrack.find('.slick-slide').each(function (index, slide) {\n\t                if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > _.swipeLeft * -1) {\n\t                    swipedSlide = slide;\n\t                    return false;\n\t                }\n\t            });\n\t\n\t            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\t\n\t            return slidesTraversed;\n\t        } else {\n\t            return _.options.slidesToScroll;\n\t        }\n\t    };\n\t\n\t    Slick.prototype.goTo = Slick.prototype.slickGoTo = function (slide, dontAnimate) {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'index',\n\t                index: parseInt(slide)\n\t            }\n\t        }, dontAnimate);\n\t    };\n\t\n\t    Slick.prototype.init = function (creation) {\n\t\n\t        var _ = this;\n\t\n\t        if (!$(_.$slider).hasClass('slick-initialized')) {\n\t\n\t            $(_.$slider).addClass('slick-initialized');\n\t\n\t            _.buildRows();\n\t            _.buildOut();\n\t            _.setProps();\n\t            _.startLoad();\n\t            _.loadSlider();\n\t            _.initializeEvents();\n\t            _.updateArrows();\n\t            _.updateDots();\n\t            _.checkResponsive(true);\n\t            _.focusHandler();\n\t        }\n\t\n\t        if (creation) {\n\t            _.$slider.trigger('init', [_]);\n\t        }\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.initADA();\n\t        }\n\t\n\t        if (_.options.autoplay) {\n\t\n\t            _.paused = false;\n\t            _.autoPlay();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initADA = function () {\n\t        var _ = this;\n\t        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n\t            'aria-hidden': 'true',\n\t            'tabindex': '-1'\n\t        }).find('a, input, button, select').attr({\n\t            'tabindex': '-1'\n\t        });\n\t\n\t        _.$slideTrack.attr('role', 'listbox');\n\t\n\t        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function (i) {\n\t            $(this).attr({\n\t                'role': 'option',\n\t                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n\t            });\n\t        });\n\t\n\t        if (_.$dots !== null) {\n\t            _.$dots.attr('role', 'tablist').find('li').each(function (i) {\n\t                $(this).attr({\n\t                    'role': 'presentation',\n\t                    'aria-selected': 'false',\n\t                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n\t                    'id': 'slick-slide' + _.instanceUid + i + ''\n\t                });\n\t            }).first().attr('aria-selected', 'true').end().find('button').attr('role', 'button').end().closest('div').attr('role', 'toolbar');\n\t        }\n\t        _.activateADA();\n\t    };\n\t\n\t    Slick.prototype.initArrowEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t            _.$prevArrow.off('click.slick').on('click.slick', {\n\t                message: 'previous'\n\t            }, _.changeSlide);\n\t            _.$nextArrow.off('click.slick').on('click.slick', {\n\t                message: 'next'\n\t            }, _.changeSlide);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initDotEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t            $('li', _.$dots).on('click.slick', {\n\t                message: 'index'\n\t            }, _.changeSlide);\n\t        }\n\t\n\t        if (_.options.dots === true && _.options.pauseOnDotsHover === true) {\n\t\n\t            $('li', _.$dots).on('mouseenter.slick', $.proxy(_.interrupt, _, true)).on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initSlideEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.pauseOnHover) {\n\t\n\t            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n\t            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\t        }\n\t    };\n\t\n\t    Slick.prototype.initializeEvents = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.initArrowEvents();\n\t\n\t        _.initDotEvents();\n\t        _.initSlideEvents();\n\t\n\t        _.$list.on('touchstart.slick mousedown.slick', {\n\t            action: 'start'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchmove.slick mousemove.slick', {\n\t            action: 'move'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchend.slick mouseup.slick', {\n\t            action: 'end'\n\t        }, _.swipeHandler);\n\t        _.$list.on('touchcancel.slick mouseleave.slick', {\n\t            action: 'end'\n\t        }, _.swipeHandler);\n\t\n\t        _.$list.on('click.slick', _.clickHandler);\n\t\n\t        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\t\n\t        if (_.options.accessibility === true) {\n\t            _.$list.on('keydown.slick', _.keyHandler);\n\t        }\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t        }\n\t\n\t        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\t\n\t        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\t\n\t        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\t\n\t        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n\t        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\t    };\n\t\n\t    Slick.prototype.initUI = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$prevArrow.show();\n\t            _.$nextArrow.show();\n\t        }\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$dots.show();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.keyHandler = function (event) {\n\t\n\t        var _ = this;\n\t        //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n\t        if (!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n\t            if (event.keyCode === 37 && _.options.accessibility === true) {\n\t                _.changeSlide({\n\t                    data: {\n\t                        message: _.options.rtl === true ? 'next' : 'previous'\n\t                    }\n\t                });\n\t            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n\t                _.changeSlide({\n\t                    data: {\n\t                        message: _.options.rtl === true ? 'previous' : 'next'\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.lazyLoad = function () {\n\t\n\t        var _ = this,\n\t            loadRange,\n\t            cloneRange,\n\t            rangeStart,\n\t            rangeEnd;\n\t\n\t        function loadImages(imagesScope) {\n\t\n\t            $('img[data-lazy]', imagesScope).each(function () {\n\t\n\t                var image = $(this),\n\t                    imageSource = $(this).attr('data-lazy'),\n\t                    imageToLoad = document.createElement('img');\n\t\n\t                imageToLoad.onload = function () {\n\t\n\t                    image.animate({ opacity: 0 }, 100, function () {\n\t                        image.attr('src', imageSource).animate({ opacity: 1 }, 200, function () {\n\t                            image.removeAttr('data-lazy').removeClass('slick-loading');\n\t                        });\n\t                        _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n\t                    });\n\t                };\n\t\n\t                imageToLoad.onerror = function () {\n\t\n\t                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');\n\t\n\t                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);\n\t                };\n\t\n\t                imageToLoad.src = imageSource;\n\t            });\n\t        }\n\t\n\t        if (_.options.centerMode === true) {\n\t            if (_.options.infinite === true) {\n\t                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n\t                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n\t            } else {\n\t                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n\t                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n\t            }\n\t        } else {\n\t            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n\t            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n\t            if (_.options.fade === true) {\n\t                if (rangeStart > 0) rangeStart--;\n\t                if (rangeEnd <= _.slideCount) rangeEnd++;\n\t            }\n\t        }\n\t\n\t        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\t        loadImages(loadRange);\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            cloneRange = _.$slider.find('.slick-slide');\n\t            loadImages(cloneRange);\n\t        } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n\t            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n\t            loadImages(cloneRange);\n\t        } else if (_.currentSlide === 0) {\n\t            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n\t            loadImages(cloneRange);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.loadSlider = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.setPosition();\n\t\n\t        _.$slideTrack.css({\n\t            opacity: 1\n\t        });\n\t\n\t        _.$slider.removeClass('slick-loading');\n\t\n\t        _.initUI();\n\t\n\t        if (_.options.lazyLoad === 'progressive') {\n\t            _.progressiveLazyLoad();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.next = Slick.prototype.slickNext = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'next'\n\t            }\n\t        });\n\t    };\n\t\n\t    Slick.prototype.orientationChange = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.checkResponsive();\n\t        _.setPosition();\n\t    };\n\t\n\t    Slick.prototype.pause = Slick.prototype.slickPause = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlayClear();\n\t        _.paused = true;\n\t    };\n\t\n\t    Slick.prototype.play = Slick.prototype.slickPlay = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.autoPlay();\n\t        _.options.autoplay = true;\n\t        _.paused = false;\n\t        _.focussed = false;\n\t        _.interrupted = false;\n\t    };\n\t\n\t    Slick.prototype.postSlide = function (index) {\n\t\n\t        var _ = this;\n\t\n\t        if (!_.unslicked) {\n\t\n\t            _.$slider.trigger('afterChange', [_, index]);\n\t\n\t            _.animating = false;\n\t\n\t            _.setPosition();\n\t\n\t            _.swipeLeft = null;\n\t\n\t            if (_.options.autoplay) {\n\t                _.autoPlay();\n\t            }\n\t\n\t            if (_.options.accessibility === true) {\n\t                _.initADA();\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.prev = Slick.prototype.slickPrev = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.changeSlide({\n\t            data: {\n\t                message: 'previous'\n\t            }\n\t        });\n\t    };\n\t\n\t    Slick.prototype.preventDefault = function (event) {\n\t\n\t        event.preventDefault();\n\t    };\n\t\n\t    Slick.prototype.progressiveLazyLoad = function (tryCount) {\n\t\n\t        tryCount = tryCount || 1;\n\t\n\t        var _ = this,\n\t            $imgsToLoad = $('img[data-lazy]', _.$slider),\n\t            image,\n\t            imageSource,\n\t            imageToLoad;\n\t\n\t        if ($imgsToLoad.length) {\n\t\n\t            image = $imgsToLoad.first();\n\t            imageSource = image.attr('data-lazy');\n\t            imageToLoad = document.createElement('img');\n\t\n\t            imageToLoad.onload = function () {\n\t\n\t                image.attr('src', imageSource).removeAttr('data-lazy').removeClass('slick-loading');\n\t\n\t                if (_.options.adaptiveHeight === true) {\n\t                    _.setPosition();\n\t                }\n\t\n\t                _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n\t                _.progressiveLazyLoad();\n\t            };\n\t\n\t            imageToLoad.onerror = function () {\n\t\n\t                if (tryCount < 3) {\n\t\n\t                    /**\n\t                     * try to load the image 3 times,\n\t                     * leave a slight delay so we don't get\n\t                     * servers blocking the request.\n\t                     */\n\t                    setTimeout(function () {\n\t                        _.progressiveLazyLoad(tryCount + 1);\n\t                    }, 500);\n\t                } else {\n\t\n\t                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');\n\t\n\t                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);\n\t\n\t                    _.progressiveLazyLoad();\n\t                }\n\t            };\n\t\n\t            imageToLoad.src = imageSource;\n\t        } else {\n\t\n\t            _.$slider.trigger('allImagesLoaded', [_]);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.refresh = function (initializing) {\n\t\n\t        var _ = this,\n\t            currentSlide,\n\t            lastVisibleIndex;\n\t\n\t        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\t\n\t        // in non-infinite sliders, we don't want to go past the\n\t        // last visible index.\n\t        if (!_.options.infinite && _.currentSlide > lastVisibleIndex) {\n\t            _.currentSlide = lastVisibleIndex;\n\t        }\n\t\n\t        // if less slides than to show, go to start.\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.currentSlide = 0;\n\t        }\n\t\n\t        currentSlide = _.currentSlide;\n\t\n\t        _.destroy(true);\n\t\n\t        $.extend(_, _.initials, { currentSlide: currentSlide });\n\t\n\t        _.init();\n\t\n\t        if (!initializing) {\n\t\n\t            _.changeSlide({\n\t                data: {\n\t                    message: 'index',\n\t                    index: currentSlide\n\t                }\n\t            }, false);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.registerBreakpoints = function () {\n\t\n\t        var _ = this,\n\t            breakpoint,\n\t            currentBreakpoint,\n\t            l,\n\t            responsiveSettings = _.options.responsive || null;\n\t\n\t        if ($.type(responsiveSettings) === 'array' && responsiveSettings.length) {\n\t\n\t            _.respondTo = _.options.respondTo || 'window';\n\t\n\t            for (breakpoint in responsiveSettings) {\n\t\n\t                l = _.breakpoints.length - 1;\n\t                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\t\n\t                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\t\n\t                    // loop through the breakpoints and cut out any existing\n\t                    // ones with the same breakpoint number, we don't want dupes.\n\t                    while (l >= 0) {\n\t                        if (_.breakpoints[l] && _.breakpoints[l] === currentBreakpoint) {\n\t                            _.breakpoints.splice(l, 1);\n\t                        }\n\t                        l--;\n\t                    }\n\t\n\t                    _.breakpoints.push(currentBreakpoint);\n\t                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\t                }\n\t            }\n\t\n\t            _.breakpoints.sort(function (a, b) {\n\t                return _.options.mobileFirst ? a - b : b - a;\n\t            });\n\t        }\n\t    };\n\t\n\t    Slick.prototype.reinit = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');\n\t\n\t        _.slideCount = _.$slides.length;\n\t\n\t        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n\t            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            _.currentSlide = 0;\n\t        }\n\t\n\t        _.registerBreakpoints();\n\t\n\t        _.setProps();\n\t        _.setupInfinite();\n\t        _.buildArrows();\n\t        _.updateArrows();\n\t        _.initArrowEvents();\n\t        _.buildDots();\n\t        _.updateDots();\n\t        _.initDotEvents();\n\t        _.cleanUpSlideEvents();\n\t        _.initSlideEvents();\n\t\n\t        _.checkResponsive(false, true);\n\t\n\t        if (_.options.focusOnSelect === true) {\n\t            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n\t        }\n\t\n\t        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\t\n\t        _.setPosition();\n\t        _.focusHandler();\n\t\n\t        _.paused = !_.options.autoplay;\n\t        _.autoPlay();\n\t\n\t        _.$slider.trigger('reInit', [_]);\n\t    };\n\t\n\t    Slick.prototype.resize = function () {\n\t\n\t        var _ = this;\n\t\n\t        if ($(window).width() !== _.windowWidth) {\n\t            clearTimeout(_.windowDelay);\n\t            _.windowDelay = window.setTimeout(function () {\n\t                _.windowWidth = $(window).width();\n\t                _.checkResponsive();\n\t                if (!_.unslicked) {\n\t                    _.setPosition();\n\t                }\n\t            }, 50);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function (index, removeBefore, removeAll) {\n\t\n\t        var _ = this;\n\t\n\t        if (typeof index === 'boolean') {\n\t            removeBefore = index;\n\t            index = removeBefore === true ? 0 : _.slideCount - 1;\n\t        } else {\n\t            index = removeBefore === true ? --index : index;\n\t        }\n\t\n\t        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n\t            return false;\n\t        }\n\t\n\t        _.unload();\n\t\n\t        if (removeAll === true) {\n\t            _.$slideTrack.children().remove();\n\t        } else {\n\t            _.$slideTrack.children(this.options.slide).eq(index).remove();\n\t        }\n\t\n\t        _.$slides = _.$slideTrack.children(this.options.slide);\n\t\n\t        _.$slideTrack.children(this.options.slide).detach();\n\t\n\t        _.$slideTrack.append(_.$slides);\n\t\n\t        _.$slidesCache = _.$slides;\n\t\n\t        _.reinit();\n\t    };\n\t\n\t    Slick.prototype.setCSS = function (position) {\n\t\n\t        var _ = this,\n\t            positionProps = {},\n\t            x,\n\t            y;\n\t\n\t        if (_.options.rtl === true) {\n\t            position = -position;\n\t        }\n\t        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n\t        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\t\n\t        positionProps[_.positionProp] = position;\n\t\n\t        if (_.transformsEnabled === false) {\n\t            _.$slideTrack.css(positionProps);\n\t        } else {\n\t            positionProps = {};\n\t            if (_.cssTransitions === false) {\n\t                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n\t                _.$slideTrack.css(positionProps);\n\t            } else {\n\t                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n\t                _.$slideTrack.css(positionProps);\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setDimensions = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.vertical === false) {\n\t            if (_.options.centerMode === true) {\n\t                _.$list.css({\n\t                    padding: '0px ' + _.options.centerPadding\n\t                });\n\t            }\n\t        } else {\n\t            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n\t            if (_.options.centerMode === true) {\n\t                _.$list.css({\n\t                    padding: _.options.centerPadding + ' 0px'\n\t                });\n\t            }\n\t        }\n\t\n\t        _.listWidth = _.$list.width();\n\t        _.listHeight = _.$list.height();\n\t\n\t        if (_.options.vertical === false && _.options.variableWidth === false) {\n\t            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n\t            _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children('.slick-slide').length));\n\t        } else if (_.options.variableWidth === true) {\n\t            _.$slideTrack.width(5000 * _.slideCount);\n\t        } else {\n\t            _.slideWidth = Math.ceil(_.listWidth);\n\t            _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length));\n\t        }\n\t\n\t        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n\t        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\t    };\n\t\n\t    Slick.prototype.setFade = function () {\n\t\n\t        var _ = this,\n\t            targetLeft;\n\t\n\t        _.$slides.each(function (index, element) {\n\t            targetLeft = _.slideWidth * index * -1;\n\t            if (_.options.rtl === true) {\n\t                $(element).css({\n\t                    position: 'relative',\n\t                    right: targetLeft,\n\t                    top: 0,\n\t                    zIndex: _.options.zIndex - 2,\n\t                    opacity: 0\n\t                });\n\t            } else {\n\t                $(element).css({\n\t                    position: 'relative',\n\t                    left: targetLeft,\n\t                    top: 0,\n\t                    zIndex: _.options.zIndex - 2,\n\t                    opacity: 0\n\t                });\n\t            }\n\t        });\n\t\n\t        _.$slides.eq(_.currentSlide).css({\n\t            zIndex: _.options.zIndex - 1,\n\t            opacity: 1\n\t        });\n\t    };\n\t\n\t    Slick.prototype.setHeight = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n\t            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n\t            _.$list.css('height', targetHeight);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setOption = Slick.prototype.slickSetOption = function () {\n\t\n\t        /**\n\t         * accepts arguments in format of:\n\t         *\n\t         *  - for changing a single option's value:\n\t         *     .slick(\"setOption\", option, value, refresh )\n\t         *\n\t         *  - for changing a set of responsive options:\n\t         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n\t         *\n\t         *  - for updating multiple values at once (not responsive)\n\t         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n\t         */\n\t\n\t        var _ = this,\n\t            l,\n\t            item,\n\t            option,\n\t            value,\n\t            refresh = false,\n\t            type;\n\t\n\t        if ($.type(arguments[0]) === 'object') {\n\t\n\t            option = arguments[0];\n\t            refresh = arguments[1];\n\t            type = 'multiple';\n\t        } else if ($.type(arguments[0]) === 'string') {\n\t\n\t            option = arguments[0];\n\t            value = arguments[1];\n\t            refresh = arguments[2];\n\t\n\t            if (arguments[0] === 'responsive' && $.type(arguments[1]) === 'array') {\n\t\n\t                type = 'responsive';\n\t            } else if (typeof arguments[1] !== 'undefined') {\n\t\n\t                type = 'single';\n\t            }\n\t        }\n\t\n\t        if (type === 'single') {\n\t\n\t            _.options[option] = value;\n\t        } else if (type === 'multiple') {\n\t\n\t            $.each(option, function (opt, val) {\n\t\n\t                _.options[opt] = val;\n\t            });\n\t        } else if (type === 'responsive') {\n\t\n\t            for (item in value) {\n\t\n\t                if ($.type(_.options.responsive) !== 'array') {\n\t\n\t                    _.options.responsive = [value[item]];\n\t                } else {\n\t\n\t                    l = _.options.responsive.length - 1;\n\t\n\t                    // loop through the responsive object and splice out duplicates.\n\t                    while (l >= 0) {\n\t\n\t                        if (_.options.responsive[l].breakpoint === value[item].breakpoint) {\n\t\n\t                            _.options.responsive.splice(l, 1);\n\t                        }\n\t\n\t                        l--;\n\t                    }\n\t\n\t                    _.options.responsive.push(value[item]);\n\t                }\n\t            }\n\t        }\n\t\n\t        if (refresh) {\n\t\n\t            _.unload();\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setPosition = function () {\n\t\n\t        var _ = this;\n\t\n\t        _.setDimensions();\n\t\n\t        _.setHeight();\n\t\n\t        if (_.options.fade === false) {\n\t            _.setCSS(_.getLeft(_.currentSlide));\n\t        } else {\n\t            _.setFade();\n\t        }\n\t\n\t        _.$slider.trigger('setPosition', [_]);\n\t    };\n\t\n\t    Slick.prototype.setProps = function () {\n\t\n\t        var _ = this,\n\t            bodyStyle = document.body.style;\n\t\n\t        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\t\n\t        if (_.positionProp === 'top') {\n\t            _.$slider.addClass('slick-vertical');\n\t        } else {\n\t            _.$slider.removeClass('slick-vertical');\n\t        }\n\t\n\t        if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {\n\t            if (_.options.useCSS === true) {\n\t                _.cssTransitions = true;\n\t            }\n\t        }\n\t\n\t        if (_.options.fade) {\n\t            if (typeof _.options.zIndex === 'number') {\n\t                if (_.options.zIndex < 3) {\n\t                    _.options.zIndex = 3;\n\t                }\n\t            } else {\n\t                _.options.zIndex = _.defaults.zIndex;\n\t            }\n\t        }\n\t\n\t        if (bodyStyle.OTransform !== undefined) {\n\t            _.animType = 'OTransform';\n\t            _.transformType = '-o-transform';\n\t            _.transitionType = 'OTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.MozTransform !== undefined) {\n\t            _.animType = 'MozTransform';\n\t            _.transformType = '-moz-transform';\n\t            _.transitionType = 'MozTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.webkitTransform !== undefined) {\n\t            _.animType = 'webkitTransform';\n\t            _.transformType = '-webkit-transform';\n\t            _.transitionType = 'webkitTransition';\n\t            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.msTransform !== undefined) {\n\t            _.animType = 'msTransform';\n\t            _.transformType = '-ms-transform';\n\t            _.transitionType = 'msTransition';\n\t            if (bodyStyle.msTransform === undefined) _.animType = false;\n\t        }\n\t        if (bodyStyle.transform !== undefined && _.animType !== false) {\n\t            _.animType = 'transform';\n\t            _.transformType = 'transform';\n\t            _.transitionType = 'transition';\n\t        }\n\t        _.transformsEnabled = _.options.useTransform && _.animType !== null && _.animType !== false;\n\t    };\n\t\n\t    Slick.prototype.setSlideClasses = function (index) {\n\t\n\t        var _ = this,\n\t            centerOffset,\n\t            allSlides,\n\t            indexOffset,\n\t            remainder;\n\t\n\t        allSlides = _.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden', 'true');\n\t\n\t        _.$slides.eq(index).addClass('slick-current');\n\t\n\t        if (_.options.centerMode === true) {\n\t\n\t            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\t\n\t            if (_.options.infinite === true) {\n\t\n\t                if (index >= centerOffset && index <= _.slideCount - 1 - centerOffset) {\n\t\n\t                    _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');\n\t                } else {\n\t\n\t                    indexOffset = _.options.slidesToShow + index;\n\t                    allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');\n\t                }\n\t\n\t                if (index === 0) {\n\t\n\t                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');\n\t                } else if (index === _.slideCount - 1) {\n\t\n\t                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');\n\t                }\n\t            }\n\t\n\t            _.$slides.eq(index).addClass('slick-center');\n\t        } else {\n\t\n\t            if (index >= 0 && index <= _.slideCount - _.options.slidesToShow) {\n\t\n\t                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n\t            } else if (allSlides.length <= _.options.slidesToShow) {\n\t\n\t                allSlides.addClass('slick-active').attr('aria-hidden', 'false');\n\t            } else {\n\t\n\t                remainder = _.slideCount % _.options.slidesToShow;\n\t                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\t\n\t                if (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow) {\n\t\n\t                    allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');\n\t                } else {\n\t\n\t                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');\n\t                }\n\t            }\n\t        }\n\t\n\t        if (_.options.lazyLoad === 'ondemand') {\n\t            _.lazyLoad();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.setupInfinite = function () {\n\t\n\t        var _ = this,\n\t            i,\n\t            slideIndex,\n\t            infiniteCount;\n\t\n\t        if (_.options.fade === true) {\n\t            _.options.centerMode = false;\n\t        }\n\t\n\t        if (_.options.infinite === true && _.options.fade === false) {\n\t\n\t            slideIndex = null;\n\t\n\t            if (_.slideCount > _.options.slidesToShow) {\n\t\n\t                if (_.options.centerMode === true) {\n\t                    infiniteCount = _.options.slidesToShow + 1;\n\t                } else {\n\t                    infiniteCount = _.options.slidesToShow;\n\t                }\n\t\n\t                for (i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) {\n\t                    slideIndex = i - 1;\n\t                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');\n\t                }\n\t                for (i = 0; i < infiniteCount; i += 1) {\n\t                    slideIndex = i;\n\t                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');\n\t                }\n\t                _.$slideTrack.find('.slick-cloned').find('[id]').each(function () {\n\t                    $(this).attr('id', '');\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.interrupt = function (toggle) {\n\t\n\t        var _ = this;\n\t\n\t        if (!toggle) {\n\t            _.autoPlay();\n\t        }\n\t        _.interrupted = toggle;\n\t    };\n\t\n\t    Slick.prototype.selectHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');\n\t\n\t        var index = parseInt(targetElement.attr('data-slick-index'));\n\t\n\t        if (!index) index = 0;\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t\n\t            _.setSlideClasses(index);\n\t            _.asNavFor(index);\n\t            return;\n\t        }\n\t\n\t        _.slideHandler(index);\n\t    };\n\t\n\t    Slick.prototype.slideHandler = function (index, sync, dontAnimate) {\n\t\n\t        var targetSlide,\n\t            animSlide,\n\t            oldSlide,\n\t            slideLeft,\n\t            targetLeft = null,\n\t            _ = this,\n\t            navTarget;\n\t\n\t        sync = sync || false;\n\t\n\t        if (_.animating === true && _.options.waitForAnimate === true) {\n\t            return;\n\t        }\n\t\n\t        if (_.options.fade === true && _.currentSlide === index) {\n\t            return;\n\t        }\n\t\n\t        if (_.slideCount <= _.options.slidesToShow) {\n\t            return;\n\t        }\n\t\n\t        if (sync === false) {\n\t            _.asNavFor(index);\n\t        }\n\t\n\t        targetSlide = index;\n\t        targetLeft = _.getLeft(targetSlide);\n\t        slideLeft = _.getLeft(_.currentSlide);\n\t\n\t        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\t\n\t        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n\t            if (_.options.fade === false) {\n\t                targetSlide = _.currentSlide;\n\t                if (dontAnimate !== true) {\n\t                    _.animateSlide(slideLeft, function () {\n\t                        _.postSlide(targetSlide);\n\t                    });\n\t                } else {\n\t                    _.postSlide(targetSlide);\n\t                }\n\t            }\n\t            return;\n\t        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) {\n\t            if (_.options.fade === false) {\n\t                targetSlide = _.currentSlide;\n\t                if (dontAnimate !== true) {\n\t                    _.animateSlide(slideLeft, function () {\n\t                        _.postSlide(targetSlide);\n\t                    });\n\t                } else {\n\t                    _.postSlide(targetSlide);\n\t                }\n\t            }\n\t            return;\n\t        }\n\t\n\t        if (_.options.autoplay) {\n\t            clearInterval(_.autoPlayTimer);\n\t        }\n\t\n\t        if (targetSlide < 0) {\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                animSlide = _.slideCount - _.slideCount % _.options.slidesToScroll;\n\t            } else {\n\t                animSlide = _.slideCount + targetSlide;\n\t            }\n\t        } else if (targetSlide >= _.slideCount) {\n\t            if (_.slideCount % _.options.slidesToScroll !== 0) {\n\t                animSlide = 0;\n\t            } else {\n\t                animSlide = targetSlide - _.slideCount;\n\t            }\n\t        } else {\n\t            animSlide = targetSlide;\n\t        }\n\t\n\t        _.animating = true;\n\t\n\t        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\t\n\t        oldSlide = _.currentSlide;\n\t        _.currentSlide = animSlide;\n\t\n\t        _.setSlideClasses(_.currentSlide);\n\t\n\t        if (_.options.asNavFor) {\n\t\n\t            navTarget = _.getNavTarget();\n\t            navTarget = navTarget.slick('getSlick');\n\t\n\t            if (navTarget.slideCount <= navTarget.options.slidesToShow) {\n\t                navTarget.setSlideClasses(_.currentSlide);\n\t            }\n\t        }\n\t\n\t        _.updateDots();\n\t        _.updateArrows();\n\t\n\t        if (_.options.fade === true) {\n\t            if (dontAnimate !== true) {\n\t\n\t                _.fadeSlideOut(oldSlide);\n\t\n\t                _.fadeSlide(animSlide, function () {\n\t                    _.postSlide(animSlide);\n\t                });\n\t            } else {\n\t                _.postSlide(animSlide);\n\t            }\n\t            _.animateHeight();\n\t            return;\n\t        }\n\t\n\t        if (dontAnimate !== true) {\n\t            _.animateSlide(targetLeft, function () {\n\t                _.postSlide(animSlide);\n\t            });\n\t        } else {\n\t            _.postSlide(animSlide);\n\t        }\n\t    };\n\t\n\t    Slick.prototype.startLoad = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$prevArrow.hide();\n\t            _.$nextArrow.hide();\n\t        }\n\t\n\t        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\t\n\t            _.$dots.hide();\n\t        }\n\t\n\t        _.$slider.addClass('slick-loading');\n\t    };\n\t\n\t    Slick.prototype.swipeDirection = function () {\n\t\n\t        var xDist,\n\t            yDist,\n\t            r,\n\t            swipeAngle,\n\t            _ = this;\n\t\n\t        xDist = _.touchObject.startX - _.touchObject.curX;\n\t        yDist = _.touchObject.startY - _.touchObject.curY;\n\t        r = Math.atan2(yDist, xDist);\n\t\n\t        swipeAngle = Math.round(r * 180 / Math.PI);\n\t        if (swipeAngle < 0) {\n\t            swipeAngle = 360 - Math.abs(swipeAngle);\n\t        }\n\t\n\t        if (swipeAngle <= 45 && swipeAngle >= 0) {\n\t            return _.options.rtl === false ? 'left' : 'right';\n\t        }\n\t        if (swipeAngle <= 360 && swipeAngle >= 315) {\n\t            return _.options.rtl === false ? 'left' : 'right';\n\t        }\n\t        if (swipeAngle >= 135 && swipeAngle <= 225) {\n\t            return _.options.rtl === false ? 'right' : 'left';\n\t        }\n\t        if (_.options.verticalSwiping === true) {\n\t            if (swipeAngle >= 35 && swipeAngle <= 135) {\n\t                return 'down';\n\t            } else {\n\t                return 'up';\n\t            }\n\t        }\n\t\n\t        return 'vertical';\n\t    };\n\t\n\t    Slick.prototype.swipeEnd = function (event) {\n\t\n\t        var _ = this,\n\t            slideCount,\n\t            direction;\n\t\n\t        _.dragging = false;\n\t        _.interrupted = false;\n\t        _.shouldClick = _.touchObject.swipeLength > 10 ? false : true;\n\t\n\t        if (_.touchObject.curX === undefined) {\n\t            return false;\n\t        }\n\t\n\t        if (_.touchObject.edgeHit === true) {\n\t            _.$slider.trigger('edge', [_, _.swipeDirection()]);\n\t        }\n\t\n\t        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {\n\t\n\t            direction = _.swipeDirection();\n\t\n\t            switch (direction) {\n\t\n\t                case 'left':\n\t                case 'down':\n\t\n\t                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();\n\t\n\t                    _.currentDirection = 0;\n\t\n\t                    break;\n\t\n\t                case 'right':\n\t                case 'up':\n\t\n\t                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();\n\t\n\t                    _.currentDirection = 1;\n\t\n\t                    break;\n\t\n\t                default:\n\t\n\t            }\n\t\n\t            if (direction != 'vertical') {\n\t\n\t                _.slideHandler(slideCount);\n\t                _.touchObject = {};\n\t                _.$slider.trigger('swipe', [_, direction]);\n\t            }\n\t        } else {\n\t\n\t            if (_.touchObject.startX !== _.touchObject.curX) {\n\t\n\t                _.slideHandler(_.currentSlide);\n\t                _.touchObject = {};\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.swipeHandler = function (event) {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.swipe === false || 'ontouchend' in document && _.options.swipe === false) {\n\t            return;\n\t        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n\t            return;\n\t        }\n\t\n\t        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;\n\t\n\t        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;\n\t\n\t        if (_.options.verticalSwiping === true) {\n\t            _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;\n\t        }\n\t\n\t        switch (event.data.action) {\n\t\n\t            case 'start':\n\t                _.swipeStart(event);\n\t                break;\n\t\n\t            case 'move':\n\t                _.swipeMove(event);\n\t                break;\n\t\n\t            case 'end':\n\t                _.swipeEnd(event);\n\t                break;\n\t\n\t        }\n\t    };\n\t\n\t    Slick.prototype.swipeMove = function (event) {\n\t\n\t        var _ = this,\n\t            edgeWasHit = false,\n\t            curLeft,\n\t            swipeDirection,\n\t            swipeLength,\n\t            positionOffset,\n\t            touches;\n\t\n\t        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\t\n\t        if (!_.dragging || touches && touches.length !== 1) {\n\t            return false;\n\t        }\n\t\n\t        curLeft = _.getLeft(_.currentSlide);\n\t\n\t        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n\t        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\t\n\t        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\t\n\t        if (_.options.verticalSwiping === true) {\n\t            _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\t        }\n\t\n\t        swipeDirection = _.swipeDirection();\n\t\n\t        if (swipeDirection === 'vertical') {\n\t            return;\n\t        }\n\t\n\t        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n\t            event.preventDefault();\n\t        }\n\t\n\t        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n\t        if (_.options.verticalSwiping === true) {\n\t            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n\t        }\n\t\n\t        swipeLength = _.touchObject.swipeLength;\n\t\n\t        _.touchObject.edgeHit = false;\n\t\n\t        if (_.options.infinite === false) {\n\t            if (_.currentSlide === 0 && swipeDirection === 'right' || _.currentSlide >= _.getDotCount() && swipeDirection === 'left') {\n\t                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n\t                _.touchObject.edgeHit = true;\n\t            }\n\t        }\n\t\n\t        if (_.options.vertical === false) {\n\t            _.swipeLeft = curLeft + swipeLength * positionOffset;\n\t        } else {\n\t            _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * positionOffset;\n\t        }\n\t        if (_.options.verticalSwiping === true) {\n\t            _.swipeLeft = curLeft + swipeLength * positionOffset;\n\t        }\n\t\n\t        if (_.options.fade === true || _.options.touchMove === false) {\n\t            return false;\n\t        }\n\t\n\t        if (_.animating === true) {\n\t            _.swipeLeft = null;\n\t            return false;\n\t        }\n\t\n\t        _.setCSS(_.swipeLeft);\n\t    };\n\t\n\t    Slick.prototype.swipeStart = function (event) {\n\t\n\t        var _ = this,\n\t            touches;\n\t\n\t        _.interrupted = true;\n\t\n\t        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n\t            _.touchObject = {};\n\t            return false;\n\t        }\n\t\n\t        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n\t            touches = event.originalEvent.touches[0];\n\t        }\n\t\n\t        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n\t        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\t\n\t        _.dragging = true;\n\t    };\n\t\n\t    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.$slidesCache !== null) {\n\t\n\t            _.unload();\n\t\n\t            _.$slideTrack.children(this.options.slide).detach();\n\t\n\t            _.$slidesCache.appendTo(_.$slideTrack);\n\t\n\t            _.reinit();\n\t        }\n\t    };\n\t\n\t    Slick.prototype.unload = function () {\n\t\n\t        var _ = this;\n\t\n\t        $('.slick-cloned', _.$slider).remove();\n\t\n\t        if (_.$dots) {\n\t            _.$dots.remove();\n\t        }\n\t\n\t        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n\t            _.$prevArrow.remove();\n\t        }\n\t\n\t        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n\t            _.$nextArrow.remove();\n\t        }\n\t\n\t        _.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden', 'true').css('width', '');\n\t    };\n\t\n\t    Slick.prototype.unslick = function (fromBreakpoint) {\n\t\n\t        var _ = this;\n\t        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n\t        _.destroy();\n\t    };\n\t\n\t    Slick.prototype.updateArrows = function () {\n\t\n\t        var _ = this,\n\t            centerOffset;\n\t\n\t        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\t\n\t        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow && !_.options.infinite) {\n\t\n\t            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t\n\t            if (_.currentSlide === 0) {\n\t\n\t                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\t\n\t                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\t\n\t                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n\t                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\t            }\n\t        }\n\t    };\n\t\n\t    Slick.prototype.updateDots = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.$dots !== null) {\n\t\n\t            _.$dots.find('li').removeClass('slick-active').attr('aria-hidden', 'true');\n\t\n\t            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden', 'false');\n\t        }\n\t    };\n\t\n\t    Slick.prototype.visibility = function () {\n\t\n\t        var _ = this;\n\t\n\t        if (_.options.autoplay) {\n\t\n\t            if (document[_.hidden]) {\n\t\n\t                _.interrupted = true;\n\t            } else {\n\t\n\t                _.interrupted = false;\n\t            }\n\t        }\n\t    };\n\t\n\t    $.fn.slick = function () {\n\t        var _ = this,\n\t            opt = arguments[0],\n\t            args = Array.prototype.slice.call(arguments, 1),\n\t            l = _.length,\n\t            i,\n\t            ret;\n\t        for (i = 0; i < l; i++) {\n\t            if ((typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) == 'object' || typeof opt == 'undefined') _[i].slick = new Slick(_[i], opt);else ret = _[i].slick[opt].apply(_[i].slick, args);\n\t            if (typeof ret != 'undefined') return ret;\n\t        }\n\t        return _;\n\t    };\n\t});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.2.3. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.2.3\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t}\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t}\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t}\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t}\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t}\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t}\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t}\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t}\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t}\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t}\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t}\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t}\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t}\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t}\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t}\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t}\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t}\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t}\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t}\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t}\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t}\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t}\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t}\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t}\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t}\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t}\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t}\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t}\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t}\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t}\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t}\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t}\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t}\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t}\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t}\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t}\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t}\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t}\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t}\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t}\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t}\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t}\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t}\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t}\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t}\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t}\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t}\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t}\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t}\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t}\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t}\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t}\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t}\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t}\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t}\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t}\n\t\n\tvar noop = function() {}\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t}\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t}\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t}\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t}\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t}\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t}\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t}\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t}\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t}\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t}\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t}\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t}\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t}\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t}\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t}\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t}\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t}\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t}\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t}\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t}\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t}\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t}\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t}\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t}\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t}\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    }\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    }\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t}\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t}\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t}\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t}\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t}\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t}\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t}\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t}\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t}\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t}\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t}\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t}\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t}\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t}\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t}\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t}\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t}\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t}\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t}\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t}\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t}\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t}\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t}\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t}\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t}\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t}\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t}\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t}\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t}\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t}\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t}\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t}\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t}\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength)\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t}\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t}\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t}\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t}\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t}\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t}\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t}\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t}\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t}\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t}\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t}\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t}\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t}\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t}\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t}\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t}\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t}\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t}\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t}\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t}\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t}\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t}\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t}\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t}\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t}\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state === STARTED;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t}\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t}\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t}\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t}\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t}\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t}\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t}\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t}\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t}\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t}\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t}\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t}\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t}\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t}\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t}\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t}\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t}\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t}\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t}\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t}\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t}\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t}\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t}\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t}\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t}\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t}\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t}\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t}\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t}\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t}\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t}\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t}\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t}\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t}\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t}\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t}\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t}\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t}\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t}\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t}\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t}\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t}\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t}\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t}\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t}\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    var i, n = (nodes = _).length; radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), force) : radius;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n\t      if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t}\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t}\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t}\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  }\n\t}\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t}\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t}\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      selection$$1 = state.selection; // May be set by brush.move!\n\t\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t}\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t}\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t}\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t}\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t}\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t}\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t}\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t}\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t}\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t}\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t}\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t}\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t}\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t}\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t}\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tvar graticule = function() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t}\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t}\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function() {\n\t  var pointRadius = 4.5,\n\t      projection,\n\t      projectionStream,\n\t      context,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(null).context(null);\n\t}\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t}\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t}\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t}\n\t\n\tvar transform$1 = function(prototype) {\n\t  return {\n\t    stream: transform$2(prototype)\n\t  };\n\t}\n\t\n\tfunction transform$2(prototype) {\n\t  function T() {}\n\t  var p = T.prototype = Object.create(Transform$1.prototype);\n\t  for (var k in prototype) p[k] = prototype[k];\n\t  return function(stream) {\n\t    var t = new T;\n\t    t.stream = stream;\n\t    return t;\n\t  };\n\t}\n\t\n\tfunction Transform$1() {}\n\t\n\tTransform$1.prototype = {\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fit(project, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = project.clipExtent && project.clipExtent();\n\t\n\t  project\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) project.clipExtent(null);\n\t\n\t  geoStream(object, project.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) project.clipExtent(clip);\n\t\n\t  return project\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(project) {\n\t  return function(size, object) {\n\t    return fit(project, [[0, 0], size], object);\n\t  };\n\t}\n\t\n\tfunction fitExtent(project) {\n\t  return function(extent, object) {\n\t    return fit(project, extent, object);\n\t  };\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t}\n\t\n\tfunction resampleNone(project) {\n\t  return transform$2({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transform$2({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = fitExtent(projection);\n\t\n\t  projection.fitSize = fitSize(projection);\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0),\n\t      n = (sy0 + sin$1(y1)) / 2,\n\t      c = 1 + sy0 * (2 * n - sy0),\n\t      r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t}\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t}\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return albersUsa;\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return albersUsa;\n\t  };\n\t\n\t  albersUsa.fitExtent = fitExtent(albersUsa);\n\t\n\t  albersUsa.fitSize = fitSize(albersUsa);\n\t\n\t  return albersUsa.scale(1070);\n\t}\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t}\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t}\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t}\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t}\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t}\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t}\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t}\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t}\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** app.33c7bbc970a7aedeaa04.bundle.js\n **/","const $ = require('jquery');\nconst slick = require('./slick');\nconst d3 = require('d3');\nconst calc = require('./calculator');\n\nconst $siteNav = $('.siteNav');\nlet lastScroll = 0;\nlet timedNavHide;\n\n// Hiding functionality for Nav\n// Only hide on non-mobile screens\n$(window).on('scroll', function() {\n    if ($(this).width() > 640) {\n        let thisScroll = $(this).scrollTop();\n        // Always show Nav when at the top of the page\n        if (thisScroll < 100) {\n            clearTimeout(timedNavHide);\n            $siteNav.show();\n        // Hide Nav on scroll down\n        } else if (thisScroll > lastScroll) {\n            $siteNav.slideUp('fast');\n        // Show Nav on scroll up, but hide again after 2 seconds\n        } else {\n            $siteNav.slideDown('fast');\n            clearTimeout(timedNavHide);\n            timedNavHide = setTimeout(hideNav, 2000);\n        }\n        lastScroll = thisScroll;\n    // Hide menu if open on mobile scroll\n    } else {\n        if ($siteNav.hasClass('js-responsive')) {\n            $siteNav.removeClass('js-responsive');\n        }\n    }\n});\n\n// Don't hide the Nav while hovering over\n$siteNav.on('mouseenter', function() {\n    clearTimeout(timedNavHide);\n});\n\n// If not at top, hide the Nav again on mouse out\n$siteNav.on('mouseleave', function() {\n    let thisScroll = $(this).scrollTop();\n    if (thisScroll > 100) {\n        timedNavHide = setTimeout(hideNav, 2000);\n    }\n});\n\nconst hideNav = () => $siteNav.slideUp('fast');\n\n$('.siteNav_menuBtn').on('click', function() {\n    $siteNav.toggleClass('js-responsive');\n});\n\n// Highlight active section and scroll animation\nvar $navItem = $('.siteNav_nav_item > a');\n\n$navItem.click(function(event) {\n\t// Stop the default link navigation\n    if ($(location).attr('href') === 'https://zaclem01.github.io/') {\n        event.preventDefault();\n    }\n\n\t$('html, body').animate({\n\t\tscrollTop: $('#' + $(this).text().toLowerCase() + 'Section').offset().top // Adjust for Top Bar\n\t}, 500);\n});\n\n$('.work_content').slick({\n    arrows: true,\n    autoplay: true,\n    infinite: true,\n    speed: 300,\n    slidesToShow: 2,\n    adaptiveHeight: true,\n    responsive: [\n        {\n            breakpoint: 420,\n            settings: {\n                slidesToShow: 1\n            }\n        }\n    ]\n});\n\n$(document).ready(function() {\n    console.log($(location).attr('href'))\n    if ($(location).attr('href') === 'https://zaclem01.github.io/calculator.html') {\n        console.log('calc page');\n        calc();\n    }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/index.js\n **/","var Button = {\n  \n  // Initialize the button with class, label, and an\n  // onclick function\n  init: function(label, className, clickEvent) {\n    this.button = document.createElement('button');\n    \n    this.button.setAttribute('class', className + ' s-btn');\n    this.button.innerHTML = label;\n    this.button.onclick = clickEvent;\n  },\n  \n  // Insert the button into the DOM\n  insert: function(where) {\n    where.appendChild(this.button);\n  }\n};\n\nvar Calculator = {\n  _expression: '',\n  _lastEntered: '',\n  _err: false,\n  _operators: ['/', '*', '-', '+'],\n  \n  // Handles all of the button creation\n  create: function() {\n    var topRow = document.getElementById('topBtns');\n    var numRow = document.getElementById('numBtns');\n    var opsRow = document.getElementById('opBtns');\n    \n    var clrBtn = Object.create(Button);\n    clrBtn.init('C', 'topBtnContainer_clrBtn', function() {\n      this.clearDisplay();\n    }.bind(this));\n    clrBtn.insert(topRow);\n    \n    var delBtn = Object.create(Button);\n    delBtn.init('Del', 'topBtnContainer_delBtn', function() {\n      this.deleteLast();\n    }.bind(this));\n    delBtn.insert(topRow);\n    \n    var leftPrnBtn = Object.create(Button);\n    delBtn.init('(', 'topBtnContainer_lprnBtn', function() {\n      this.insertOperation('(');\n    }.bind(this));\n    delBtn.insert(topRow);\n    \n    var leftPrnBtn = Object.create(Button);\n    delBtn.init(')', 'topBtnContainer_rprnBtn', function() {\n      this.insertOperation(')');\n    }.bind(this));\n    delBtn.insert(topRow);\n    \n    for(let number=9; number >= 0; number--) {\n      var numBtn = Object.create(Button);\n      \n      // Must bind to 'this' to retain context when\n      // passing the 'insertNumber' function\n      numBtn.init(number, 'numBtnContainer_numBtn', function() {\n        this.insertOperation(number);\n      }.bind(this));\n      numBtn.insert(numRow);\n    }\n    \n    for(let operator=0; operator < this._operators.length; operator++) {\n      var opBtn = Object.create(Button);\n      opBtn.init(this._operators[operator], 'opBtnContainer_opBtn', function() {\n        this.insertOperation(this._operators[operator]);\n      }.bind(this));\n      opBtn.insert(opsRow);\n    }\n    \n    var decBtn = Object.create(Button);\n    decBtn.init('.', 'numBtnContainer_numBtn', function() {\n      this.insertOperation('.');\n    }.bind(this));\n    decBtn.insert(numRow);\n    \n    var eqBtn = Object.create(Button);\n    eqBtn.init('=', 'numBtnContainer_numBtn', function() {\n      this.evaluateExpression();\n    }.bind(this));\n    eqBtn.insert(numRow);\n  },\n  \n  insertOperation: function(op) {\n    if (this._lastEntered === '=' && this._operators.indexOf(op) === -1) {\n      this._expression = '';\n    }\n    this._expression += op;\n    this._lastEntered = op;\n    this._updateDisplay();\n  },\n  \n  evaluateExpression: function() {\n    this._lastEntered = '=';\n    var evaluator = Object.create(Evaluator);\n    this._expression = evaluator.parse(this._expression).toString();\n    this._updateDisplay();\n  },\n  \n  clearDisplay: function() {\n    this._expression = '';\n    this._updateDisplay();\n  },\n  \n  deleteLast: function() {\n    console.log('deleting last')\n    this._expression = this._expression.slice(0, -1);\n    this._updateDisplay();\n  },\n  \n  _updateDisplay: function() {\n    var display = document.getElementById('display');\n    display.innerHTML = this._expression;\n  }\n};\n\n// Recursive Descent Math Expression Parser\n// Modeled on and borrows heavily from\n// http://stackoverflow.com/questions/3422673/evaluating-a-math-expression-given-in-string-form\nvar Evaluator = {\n  position: -1,\n  char: '',\n  string: '',\n  \n  parse: function(stringExpression) {\n    this.string = stringExpression;\n    console.log(this.string)\n    this.nextChar();\n    var result = this.parseExpression();\n    \n    // If returned before reaching the end of the string,\n    // unexpected character encountered\n    if (this.position < this.string.length) {\n      throw \"Unexpected character: \" + this.char;\n    }\n    return result;\n  },\n  \n  // Top-level, checks for + & - operators\n  parseExpression: function() {\n    var expression = this.parseTerm();\n    \n    // Loop to catch multiple +/- operators\n    while(true) {\n      if (this.isCharMatch('+')) { expression += this.parseTerm(); }\n      else if (this.isCharMatch('-')) { expression -= this.parseTerm(); }\n      else { return expression; }\n    }\n  },\n  \n  // Middle-level, checks for * & / operators\n  parseTerm: function() {\n    var terms = this.parseFactor();\n    while(true) {\n      if (this.isCharMatch('*')) { terms *= this.parseFactor(); }\n      else if (this.isCharMatch('/')) { terms /= this.parseFactor(); }\n      else { return terms; }\n    }\n  },\n  \n  // Bottom-level, checks for (), numbers, and other high\n  // priority orders (according to PEMDAS);\n  parseFactor: function() {\n\n    // Unary + & - operators\n    if (this.isCharMatch('-')) { -this.parseFactor(); }\n    else if (this.isCharMatch('+')) { +this.parseFactor; }\n    \n    var startPosition = this.position;\n    var result;\n    \n    // First check for parentheses, and if found complete entire\n    // expression as separate, moving on when completed\n    \n    // Otherwise, check for number\n    \n    // If nothing valid found, throw error, as this is the bottom level\n    if (this.isCharMatch('(')) {\n      result = this.parseExpression();\n      this.isCharMatch(')');\n    } else if (this.char.search(/[0-9\\.]/gi) !== -1) {\n      while (this.char.search(/[0-9\\.]/gi) !== -1) {\n        this.nextChar();\n        result = parseFloat(this.string.substring(startPosition, this.position));\n      }\n    } else {\n      // Handles any unaccounted for characters\n      throw \"Unexpected character: \" + this.char;\n    }\n    \n    return result;\n  },\n  \n  nextChar: function() {\n    this.char = ++this.position < this.string.length ? this.string.charAt(this.position) : '';\n  },\n  \n  // Matches the character and returns true or false\n  // Skips any spaces\n  // Moves to next character if a match\n  isCharMatch: function(char) {\n    while(this.char === ' ') { this.nextChar(); }\n    if (this.char === char) {\n      this.nextChar();\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = function() {\n  var calc = Object.create(Calculator);\n  calc.create();\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/calculator.js\n **/","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.6.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"Previous\" tabindex=\"0\" role=\"button\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"Next\" tabindex=\"0\" role=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" data-role=\"none\" role=\"button\" tabindex=\"0\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 1) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 1) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick',\n                '*:not(.slick-arrow)', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this;\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        _.$slideTrack.attr('role', 'listbox');\n\n        _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n            $(this).attr({\n                'role': 'option',\n                'aria-describedby': 'slick-slide' + _.instanceUid + i + ''\n            });\n        });\n\n        if (_.$dots !== null) {\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                $(this).attr({\n                    'role': 'presentation',\n                    'aria-selected': 'false',\n                    'aria-controls': 'navigation' + _.instanceUid + i + '',\n                    'id': 'slick-slide' + _.instanceUid + i + ''\n                });\n            })\n                .first().attr('aria-selected', 'true').end()\n                .find('button').attr('role', 'button').end()\n                .closest('div').attr('role', 'toolbar');\n        }\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n        }\n\n        if ( _.options.dots === true && _.options.pauseOnDotsHover === true ) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            _.setPosition();\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n                currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n\n                    _.$slides\n                        .slice(index - centerOffset, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand') {\n            _.lazyLoad();\n        }\n\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.setSlideClasses(index);\n            _.asNavFor(index);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = Math.round(Math.sqrt(\n                Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (swipeDirection === 'vertical') {\n            return;\n        }\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                .removeClass('slick-active')\n                .attr('aria-hidden', 'true');\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active')\n                .attr('aria-hidden', 'false');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/slick.js\n **/","// https://d3js.org Version 4.2.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.2.3\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n}\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n}\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar identity = function(x) {\n  return x;\n}\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n}\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n}\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n}\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n}\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n}\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n}\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n}\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n}\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n}\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n}\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n}\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n}\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n}\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nvar identity$1 = function(d) {\n  return d;\n}\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n}\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nvar noop = function() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n}\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n}\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n}\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar number$1 = function(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n}\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n}\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nvar sparse = function(update) {\n  return new Array(update.length);\n}\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength)\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nvar selection_empty = function() {\n  return !this.node();\n}\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n}\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n}\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n}\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state === STARTED;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n}\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n}\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n}\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n}\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  force.initialize = function(_) {\n    var i, n = (nodes = _).length; radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index$2(d, i) {\n  return i;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n      if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  }\n}\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n}\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      selection$$1 = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n}\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nvar graticule = function() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nvar identity$7 = function(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function() {\n  var pointRadius = 4.5,\n      projection,\n      projectionStream,\n      context,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(null).context(null);\n}\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n}\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n}\n\nvar transform$1 = function(prototype) {\n  return {\n    stream: transform$2(prototype)\n  };\n}\n\nfunction transform$2(prototype) {\n  function T() {}\n  var p = T.prototype = Object.create(Transform$1.prototype);\n  for (var k in prototype) p[k] = prototype[k];\n  return function(stream) {\n    var t = new T;\n    t.stream = stream;\n    return t;\n  };\n}\n\nfunction Transform$1() {}\n\nTransform$1.prototype = {\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(project, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = project.clipExtent && project.clipExtent();\n\n  project\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) project.clipExtent(null);\n\n  geoStream(object, project.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) project.clipExtent(clip);\n\n  return project\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(project) {\n  return function(size, object) {\n    return fit(project, [[0, 0], size], object);\n  };\n}\n\nfunction fitExtent(project) {\n  return function(extent, object) {\n    return fit(project, extent, object);\n  };\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transform$2({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transform$2({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = fitExtent(projection);\n\n  projection.fitSize = fitSize(projection);\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0),\n      n = (sy0 + sin$1(y1)) / 2,\n      c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return albersUsa;\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return albersUsa;\n  };\n\n  albersUsa.fitExtent = fitExtent(albersUsa);\n\n  albersUsa.fitSize = fitSize(albersUsa);\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/build/d3.js\n ** module id = 4\n ** module chunks = 1\n **/"],"sourceRoot":""}